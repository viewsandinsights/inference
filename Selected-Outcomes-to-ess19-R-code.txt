
Selected output files to the Appendix to chapter 9, volume 1, of the 
Routledge Handbook of Computational Social Science (2022)

Last update: October 03, 2021

# ======== MEASUREMENT MODEL 1 (authoritarian personality (proxy)) ==================
rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> vdaten <- subset(ess19, select = c(LNR,  
+                                    impsafe, ipstrgv, ipbhprp,  
+                                    ipfrule, imptrad, 
+                                     anweight ))
> vdaten <- na.omit(vdaten)
> # scale direction reversed for value items
> library(car)
> vdaten$impsafer <- car::recode(vdaten$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> vdaten$ipstrgvr <- car::recode(vdaten$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> vdaten$ipbhprpr <- car::recode(vdaten$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> vdaten$ipfruler <- car::recode(vdaten$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> vdaten$imptradr <- car::recode(vdaten$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> library(lavaan)
> value.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ '
> value.fit <- cfa(value.model, data=vdaten, sampling.weights="anweight",
+                  meanstructure = TRUE)
> summary(value.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 30 iterations

  Estimator                                         ML
  Optimization method                           NLMINB
  Number of model parameters                        15
                                                      
  Number of observations                        320709
  Sampling weights variable                   anweight
                                                      
Model Test User Model:
                                               Standard      Robust
  Test Statistic                               7732.553    2126.414
  Degrees of freedom                                  5           5
  P-value (Chi-square)                            0.000       0.000
  Scaling correction factor                                   3.636
       Yuan-Bentler correction (Mplus variant)                     

Model Test Baseline Model:

  Test statistic                            259859.002   67802.014
  Degrees of freedom                                10          10
  P-value                                        0.000       0.000
  Scaling correction factor                                  3.833

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.970       0.969
  Tucker-Lewis Index (TLI)                       0.941       0.937
                                                                  
  Robust Comparative Fit Index (CFI)                         0.970
  Robust Tucker-Lewis Index (TLI)                            0.941

Loglikelihood and Information Criteria:

  Loglikelihood user model (H0)           -2566244.556 -2566244.556
  Scaling correction factor                                   3.013
      for the MLR correction                                       
  Loglikelihood unrestricted model (H1)   -2562378.280 -2562378.280
  Scaling correction factor                                   3.169
      for the MLR correction                                       
                                                                   
  Akaike (AIC)                             5132519.112  5132519.112
  Bayesian (BIC)                           5132679.287  5132679.287
  Sample-size adjusted Bayesian (BIC)      5132631.616  5132631.616

Root Mean Square Error of Approximation:

  RMSEA                                          0.069       0.036
  90 Percent confidence interval - lower         0.068       0.036
  90 Percent confidence interval - upper         0.071       0.037
  P-value RMSEA <= 0.05                          0.000       1.000
                                                                  
  Robust RMSEA                                               0.069
  90 Percent confidence interval - lower                     0.067
  90 Percent confidence interval - upper                     0.072

Standardized Root Mean Square Residual:

  SRMR                                           0.023       0.023

Parameter Estimates:

  Standard errors                             Sandwich
  Information bread                           Observed
  Observed information based on                Hessian

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.747    0.607
    ipstrgvr          0.949    0.007  141.739    0.000    0.708    0.597
    ipbhprpr          1.052    0.009  121.459    0.000    0.786    0.627
    ipfruler          1.036    0.009  114.519    0.000    0.773    0.545
    imptradr          0.971    0.009  108.756    0.000    0.725    0.513

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.627    0.004 1296.674    0.000    4.627    3.760
   .ipstrgvr          4.656    0.003 1370.508    0.000    4.656    3.925
   .ipbhprpr          4.334    0.004 1194.155    0.000    4.334    3.458
   .ipfruler          3.736    0.004  902.308    0.000    3.736    2.631
   .imptradr          4.184    0.004 1005.901    0.000    4.184    2.963
    authoritarian     0.000                               0.000    0.000

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.956    0.007  145.234    0.000    0.956    0.632
   .ipstrgvr          0.906    0.006  152.655    0.000    0.906    0.643
   .ipbhprpr          0.954    0.007  145.023    0.000    0.954    0.607
   .ipfruler          1.419    0.008  188.066    0.000    1.419    0.704
   .imptradr          1.469    0.008  186.481    0.000    1.469    0.737
    authoritarian     0.558    0.006   86.218    0.000    1.000    1.000

R-Square:
                   Estimate
    impsafer          0.368
    ipstrgvr          0.357
    ipbhprpr          0.393
    ipfruler          0.296
    imptradr          0.263
	
# ======== MEASUREMENT MODEL 2 (prejudice) =======================================

rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> pdaten <- subset(ess19, select = c(LNR,  
+                                    imsmetn, imdfetn, impcntr, 
+                                    anweight.x ))
> pdaten <- na.omit(pdaten)
> library(lavaan)
> prejudice.model <- '
+ 
+ prejudice =~ imsmetn + imdfetn + impcntr 
+ 
+ '
> prejudice.fit <- cfa(prejudice.model, data=pdaten, sampling.weights="anweight.x",
+                  ordered=c("imsmetn", "imdfetn", "impcntr"),
+                  meanstructure = TRUE)
> summary(prejudice.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 12 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        12
                                                      
  Number of observations                          324895
  Sampling weights variable                   anweight.x
                                                        
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 0.000       0.000
  Degrees of freedom                                 0           0

Model Test Baseline Model:

  Test statistic                           2833649.714 2083840.914
  Degrees of freedom                                 3           3
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.360

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.000       0.000
  90 Percent confidence interval - lower         0.000       0.000
  90 Percent confidence interval - upper         0.000       0.000
  P-value RMSEA <= 0.05                             NA          NA
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                     0.000
  90 Percent confidence interval - upper                     0.000

Standardized Root Mean Square Residual:

  SRMR                                           0.000       0.000

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn           1.000                               0.860    0.860
    imdfetn           1.137    0.001  854.467    0.000    0.978    0.978
    impcntr           1.027    0.001 1169.128    0.000    0.884    0.884

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn           0.000                               0.000    0.000
   .imdfetn           0.000                               0.000    0.000
   .impcntr           0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn|t1       -0.798    0.004 -197.992    0.000   -0.798   -0.798
    imsmetn|t2        0.511    0.004  138.282    0.000    0.511    0.511
    imsmetn|t3        1.475    0.005  278.828    0.000    1.475    1.475
    imdfetn|t1       -1.068    0.004 -238.356    0.000   -1.068   -1.068
    imdfetn|t2        0.183    0.004   51.381    0.000    0.183    0.183
    imdfetn|t3        1.193    0.005  262.382    0.000    1.193    1.193
    impcntr|t1       -1.091    0.005 -240.942    0.000   -1.091   -1.091
    impcntr|t2        0.106    0.004   29.691    0.000    0.106    0.106
    impcntr|t3        1.105    0.004  252.687    0.000    1.105    1.105

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn           0.260                               0.260    0.260
   .imdfetn           0.044                               0.044    0.044
   .impcntr           0.219                               0.219    0.219
    prejudice         0.740    0.001  535.898    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn           1.000                               1.000    1.000
    imdfetn           1.000                               1.000    1.000
    impcntr           1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn           0.740
    imdfetn           0.956
    impcntr           0.781
	
# ======== MEASUREMENT MODEL 3 (trust in humans) =======================================

rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> tdaten <- subset(ess19, select = c(LNR,  
+                                    ppltrst, pplfair, pplhlp, 
+                                    anweight.x.x ))
> tdaten <- na.omit(tdaten)
> library(lavaan)
> trust.model <- '
+ 
+ trust =~ ppltrst + pplfair + pplhlp 
+ 
+ '
> trust.fit <- cfa(trust.model, data=tdaten, sampling.weights="anweight.x.x",
+                      meanstructure = TRUE)
> summary(trust.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 25 iterations

  Estimator                                         ML
  Optimization method                           NLMINB
  Number of model parameters                         9
                                                      
  Number of observations                            336256
  Sampling weights variable                   anweight.x.x
                                                          
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 0.000       0.000
  Degrees of freedom                                 0           0

Model Test Baseline Model:

  Test statistic                            203580.022   39565.304
  Degrees of freedom                                 3           3
  P-value                                        0.000       0.000
  Scaling correction factor                                  5.145

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                         1.000
  Robust Tucker-Lewis Index (TLI)                            1.000

Loglikelihood and Information Criteria:

  Loglikelihood user model (H0)           -2147379.057 -2147379.057
  Loglikelihood unrestricted model (H1)   -2147379.057 -2147379.057
                                                                   
  Akaike (AIC)                             4294776.114  4294776.114
  Bayesian (BIC)                           4294872.645  4294872.645
  Sample-size adjusted Bayesian (BIC)      4294844.042  4294844.042

Root Mean Square Error of Approximation:

  RMSEA                                          0.000       0.000
  90 Percent confidence interval - lower         0.000       0.000
  90 Percent confidence interval - upper         0.000       0.000
  P-value RMSEA <= 0.05                             NA          NA
                                                                  
  Robust RMSEA                                               0.000
  90 Percent confidence interval - lower                     0.000
  90 Percent confidence interval - upper                     0.000

Standardized Root Mean Square Residual:

  SRMR                                           0.000       0.000

Parameter Estimates:

  Standard errors                             Sandwich
  Information bread                           Observed
  Observed information based on                Hessian

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  trust =~                                                              
    ppltrst           1.000                               1.612    0.696
    pplfair           0.985    0.008  130.038    0.000    1.587    0.724
    pplhlp            0.879    0.006  136.179    0.000    1.417    0.632

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .ppltrst           4.908    0.006  768.671    0.000    4.908    2.120
   .pplfair           5.613    0.006  913.945    0.000    5.613    2.560
   .pplhlp            4.862    0.006  776.469    0.000    4.862    2.168
    trust             0.000                               0.000    0.000

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .ppltrst           2.759    0.026  107.738    0.000    2.759    0.515
   .pplfair           2.287    0.023   97.760    0.000    2.287    0.476
   .pplhlp            3.022    0.020  152.469    0.000    3.022    0.601
    trust             2.599    0.027   97.561    0.000    1.000    1.000

R-Square:
                   Estimate
    ppltrst           0.485
    pplfair           0.524
    pplhlp            0.399

# ==========================================================================================
> #
> # Testing block 3: Validation set design, structural equation models 
> # run sequentially # SRMR as criterion
> #
> # ------------------- SEM in VALIDATION SET DESIGN ---------------------------------------

  # -------------------Target  variable rw ------------------------------------------
> #
> # MODEL 1 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 268234/340215 # 78.84% of initial sample size
> #
> set.seed(123)
> #
> tr <- sample(268234, 187764)
> traindata  <- sset1[tr, ] # results in 187,764 cases
> testdata  <- sset1[-tr, ] # results in 80,470 cases
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 54 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                              187764
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               639.022    1220.953
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.524
  Shift parameter                                            1.007
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             63214.115   41524.463
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.523

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.971
  Tucker-Lewis Index (TLI)                       0.983       0.951
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.027
  90 Percent confidence interval - lower         0.018       0.026
  90 Percent confidence interval - upper         0.021       0.028
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.753    0.608
    ipstrgvr          0.938    0.009  108.124    0.000    0.707    0.595
    ipbhprpr          1.037    0.010  104.234    0.000    0.782    0.621
    ipfruler          1.016    0.011   94.610    0.000    0.765    0.537
    imptradr          0.958    0.011   90.499    0.000    0.722    0.511

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.286    0.011   24.969    0.000    0.215    0.215

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.597    0.006  813.920    0.000    4.597    3.709
   .ipstrgvr          4.653    0.005  859.734    0.000    4.653    3.917
   .ipbhprpr          4.319    0.005  808.770    0.000    4.319    3.431
   .ipfruler          3.710    0.005  681.626    0.000    3.710    2.604
   .imptradr          4.165    0.006  700.736    0.000    4.165    2.947
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw|t1             1.717    0.008  215.416    0.000    1.717    1.717

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.968    0.006  157.455    0.000    0.968    0.630
   .ipstrgvr          0.912    0.005  169.017    0.000    0.912    0.646
   .ipbhprpr          0.973    0.006  150.909    0.000    0.973    0.614
   .ipfruler          1.445    0.010  147.750    0.000    1.445    0.712
   .imptradr          1.477    0.010  151.025    0.000    1.477    0.739
   .rw                0.954                               0.954    0.954
    authoritarian     0.568    0.008   68.612    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.370
    ipstrgvr          0.354
    ipbhprpr          0.386
    ipfruler          0.288
    imptradr          0.261
    rw                0.046

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3616276 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3775722 0.3693318 1.0000000 0.0000000 0.0000000    0
r4 0.3265506 0.3194238 0.3335076 1.0000000 0.0000000    0
r5 0.3106143 0.3038353 0.3172317 0.2743640 1.0000000    0
r6 0.1309878 0.1281291 0.1337784 0.1157009 0.1100544    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02656562
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]     [,5] [,6]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.000000    0
r2 0.4242036 1.0000000 0.00000000 0.0000000 0.000000    0
r3 0.3616750 0.3471284 1.00000000 0.0000000 0.000000    0
r4 0.2968913 0.2898494 0.38593404 1.0000000 0.000000    0
r5 0.2729587 0.3075826 0.32854904 0.3179600 1.000000    0
r6 0.1002489 0.1609294 0.09834036 0.1183762 0.155775    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance from testdata
[1] 0.02927629
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.004
# =========================================================================================
> #
> # MODEL 2 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 268234/340215 # 78.84% of initial sample size
> #
> set.seed(123)
> #
> tr <- sample(268234, 187764)
> traindata  <- sset1[tr, ] # results in 187,764 cases
> testdata  <- sset1[-tr, ] # results in 80,470 cases
> #
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 16 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                              187764
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                39.066      96.320
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.406
  Shift parameter                                            0.023
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1516324.909 1134712.483
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.336

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.010       0.016
  90 Percent confidence interval - lower         0.007       0.013
  90 Percent confidence interval - upper         0.013       0.019
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.016       0.016

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.852    0.852
    imdfetn.x         1.148    0.002  612.298    0.000    0.979    0.979
    impcntr.x         1.029    0.001  843.337    0.000    0.876    0.876

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    prejudice         0.296    0.009   33.849    0.000    0.252    0.252

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.779    0.005 -150.314    0.000   -0.779   -0.779
    imsmetn.x|t2      0.558    0.005  114.685    0.000    0.558    0.558
    imsmetn.x|t3      1.539    0.007  213.110    0.000    1.539    1.539
    imdfetn.x|t1     -1.063    0.006 -185.008    0.000   -1.063   -1.063
    imdfetn.x|t2      0.213    0.005   45.924    0.000    0.213    0.213
    imdfetn.x|t3      1.241    0.006  203.688    0.000    1.241    1.241
    impcntr.x|t1     -1.091    0.006 -186.531    0.000   -1.091   -1.091
    impcntr.x|t2      0.129    0.005   27.956    0.000    0.129    0.129
    impcntr.x|t3      1.146    0.006  196.670    0.000    1.146    1.146
    rw|t1             1.717    0.008  215.416    0.000    1.717    1.717

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.274                               0.274    0.274
   .imdfetn.x         0.042                               0.042    0.042
   .impcntr.x         0.232                               0.232    0.232
   .rw                0.937                               0.937    0.937
    prejudice         0.726    0.002  389.593    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.726
    imdfetn.x         0.958
    impcntr.x         0.768
    rw                0.063

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8338708 1.0000000 0.0000000  0
3 0.7468587 0.8577314 1.0000000  0
4 0.2146822 0.2465522 0.2208251  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.01604506
> #
> # same model for testdata to get its observed covariance matrix
> #
> rwt.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- as.data.frame(rwt.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8352268 1.0000000 0.0000000  0
3 0.7554236 0.8620534 1.0000000  0
4 0.1959945 0.2829688 0.2721514  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02098489
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rws.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
ecvi 
   0 

# =================================================================================
> #
> # MODEL 3 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1) # results in 268234/340215 # 78.84% of initial sample size
> set.seed(123)
> tr <- sample(268234, 187764)
> traindata  <- sset1[tr, ] # results in 187,764 cases
> testdata  <- sset1[-tr, ] # results in 80,470 cases
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 64 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                              187764
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               888.262    1327.746
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.672
  Shift parameter                                            5.874
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1595204.806  961082.916
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.660

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.014       0.017
  90 Percent confidence interval - lower         0.013       0.016
  90 Percent confidence interval - upper         0.014       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.021       0.021

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.767    0.619
    ipstrgvr          0.937    0.009  102.213    0.000    0.719    0.605
    ipbhprpr          0.987    0.010   96.889    0.000    0.757    0.602
    ipfruler          0.991    0.011   88.721    0.000    0.760    0.534
    imptradr          0.941    0.011   85.316    0.000    0.722    0.511
  prejudice =~                                                          
    imsmetn.x         1.000                               0.852    0.852
    imdfetn.x         1.150    0.002  614.064    0.000    0.979    0.979
    impcntr.x         1.029    0.001  837.819    0.000    0.876    0.876

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.215    0.012   17.572    0.000    0.165    0.165
    prejudice         0.249    0.010   25.484    0.000    0.212    0.212
  prejudice ~                                                           
    authoritarian     0.267    0.005   49.810    0.000    0.240    0.240

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.597    0.006  813.920    0.000    4.597    3.709
   .ipstrgvr          4.653    0.005  859.734    0.000    4.653    3.917
   .ipbhprpr          4.319    0.005  808.770    0.000    4.319    3.431
   .ipfruler          3.710    0.005  681.626    0.000    3.710    2.604
   .imptradr          4.165    0.006  700.736    0.000    4.165    2.947
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.779    0.005 -150.314    0.000   -0.779   -0.779
    imsmetn.x|t2      0.558    0.005  114.685    0.000    0.558    0.558
    imsmetn.x|t3      1.539    0.007  213.110    0.000    1.539    1.539
    imdfetn.x|t1     -1.063    0.006 -185.008    0.000   -1.063   -1.063
    imdfetn.x|t2      0.213    0.005   45.924    0.000    0.213    0.213
    imdfetn.x|t3      1.241    0.006  203.688    0.000    1.241    1.241
    impcntr.x|t1     -1.091    0.006 -186.531    0.000   -1.091   -1.091
    impcntr.x|t2      0.129    0.005   27.956    0.000    0.129    0.129
    impcntr.x|t3      1.146    0.006  196.670    0.000    1.146    1.146
    rw|t1             1.717    0.008  215.416    0.000    1.717    1.717

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.947    0.007  143.232    0.000    0.947    0.617
   .ipstrgvr          0.894    0.006  150.711    0.000    0.894    0.634
   .ipbhprpr          1.011    0.007  141.997    0.000    1.011    0.638
   .ipfruler          1.452    0.010  141.433    0.000    1.452    0.715
   .imptradr          1.477    0.010  144.388    0.000    1.477    0.739
   .imsmetn.x         0.275                               0.275    0.275
   .imdfetn.x         0.041                               0.041    0.041
   .impcntr.x         0.232                               0.232    0.232
   .rw                0.911                               0.911    0.911
    authoritarian     0.588    0.009   66.120    0.000    1.000    1.000
   .prejudice         0.683    0.002  300.401    0.000    0.942    0.942

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.383
    ipstrgvr          0.366
    ipbhprpr          0.362
    ipfruler          0.285
    imptradr          0.261
    imsmetn.x         0.725
    imdfetn.x         0.959
    impcntr.x         0.768
    rw                0.089
    prejudice         0.058

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]     [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000    0
r2 0.3746142 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000    0
r3 0.3723115 0.3641241 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.000000    0
r4 0.3302543 0.3229918 0.3210064 1.0000000 0.0000000 0.0000000 0.0000000 0.000000    0
r5 0.3161429 0.3091907 0.3072901 0.2725779 1.0000000 0.0000000 0.0000000 0.000000    0
r6 0.1267488 0.1239615 0.1231996 0.1092826 0.1046131 1.0000000 0.0000000 0.000000    0
r7 0.1457084 0.1425042 0.1416282 0.1256296 0.1202615 0.8337821 1.0000000 0.000000    0
r8 0.1304261 0.1275579 0.1267738 0.1124532 0.1076482 0.7463326 0.8579718 1.000000    0
r9 0.1335692 0.1306319 0.1298289 0.1151631 0.1102423 0.2145777 0.2466750 0.220803    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02145447
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4242036 1.0000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3616750 0.3471284 1.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.2968913 0.2898494 0.38593404 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.2729587 0.3075826 0.32854904 0.3179600 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1373004 0.1276792 0.11147692 0.1177756 0.0988966 1.0000000 0.0000000 0.0000000    0
r7 0.1600300 0.1581804 0.11958404 0.1347740 0.1308941 0.8352268 1.0000000 0.0000000    0
r8 0.1418979 0.1473588 0.10923115 0.1203921 0.1104371 0.7554236 0.8620534 1.0000000    0
r9 0.1002489 0.1609294 0.09834036 0.1183762 0.1557750 0.1959945 0.2829688 0.2721514    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02383932
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.005 

# ========================================================================================
> #
> # MODEL 4 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1) # results in 268234/340215 # 78.84% of initial sample size
> set.seed(123)
> tr <- sample(268234, 187764)
> traindata  <- sset1[tr, ] # results in 187,764 cases
> testdata  <- sset1[-tr, ] # results in 80,470 cases
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 85 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                              187764
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              3704.692    4265.547
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.871
  Shift parameter                                           14.262
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1656073.143 1002056.425
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.653

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.994
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.021
  90 Percent confidence interval - lower         0.019       0.021
  90 Percent confidence interval - upper         0.020       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.774    0.625
    ipstrgvr          0.936    0.009  100.923    0.000    0.725    0.610
    ipbhprpr          0.969    0.010   95.384    0.000    0.751    0.596
    ipfruler          0.975    0.011   87.310    0.000    0.755    0.530
    imptradr          0.926    0.011   84.062    0.000    0.717    0.507
  prejudice =~                                                          
    imsmetn.x         1.000                               0.852    0.852
    imdfetn.x         1.148    0.002  617.663    0.000    0.978    0.978
    impcntr.x         1.028    0.001  836.031    0.000    0.876    0.876
  trust =~                                                              
    ppltrst.x         1.000                               1.740    0.764
    pplfair.x         0.851    0.008  100.144    0.000    1.481    0.691
    pplhlp.x          0.729    0.007   98.316    0.000    1.269    0.577

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.209    0.012   17.015    0.000    0.162    0.162
    prejudice         0.225    0.011   21.277    0.000    0.192    0.192
    trust            -0.037    0.005   -7.634    0.000   -0.064   -0.064
  prejudice ~                                                           
    authoritarian     0.283    0.005   52.600    0.000    0.258    0.258
  trust ~                                                               
    prejudice        -0.587    0.009  -64.267    0.000   -0.287   -0.287

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.597    0.006  813.920    0.000    4.597    3.709
   .ipstrgvr          4.653    0.005  859.734    0.000    4.653    3.917
   .ipbhprpr          4.319    0.005  808.770    0.000    4.319    3.431
   .ipfruler          3.710    0.005  681.626    0.000    3.710    2.604
   .imptradr          4.165    0.006  700.736    0.000    4.165    2.947
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.995    0.008  589.885    0.000    4.995    2.191
   .pplfair.x         5.710    0.008  681.572    0.000    5.710    2.666
   .pplhlp.x          4.925    0.008  603.190    0.000    4.925    2.239
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.779    0.005 -150.314    0.000   -0.779   -0.779
    imsmetn.x|t2      0.558    0.005  114.685    0.000    0.558    0.558
    imsmetn.x|t3      1.539    0.007  213.110    0.000    1.539    1.539
    imdfetn.x|t1     -1.063    0.006 -185.008    0.000   -1.063   -1.063
    imdfetn.x|t2      0.213    0.005   45.924    0.000    0.213    0.213
    imdfetn.x|t3      1.241    0.006  203.688    0.000    1.241    1.241
    impcntr.x|t1     -1.091    0.006 -186.531    0.000   -1.091   -1.091
    impcntr.x|t2      0.129    0.005   27.956    0.000    0.129    0.129
    impcntr.x|t3      1.146    0.006  196.670    0.000    1.146    1.146
    rw|t1             1.717    0.008  215.416    0.000    1.717    1.717

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.936    0.007  139.497    0.000    0.936    0.609
   .ipstrgvr          0.886    0.006  146.266    0.000    0.886    0.628
   .ipbhprpr          1.021    0.007  140.714    0.000    1.021    0.644
   .ipfruler          1.460    0.010  140.253    0.000    1.460    0.719
   .imptradr          1.483    0.010  143.133    0.000    1.483    0.742
   .imsmetn.x         0.274                               0.274    0.274
   .imdfetn.x         0.043                               0.043    0.043
   .impcntr.x         0.233                               0.233    0.233
   .ppltrst.x         2.165    0.029   75.637    0.000    2.165    0.417
   .pplfair.x         2.396    0.023  105.920    0.000    2.396    0.522
   .pplhlp.x          3.229    0.022  148.329    0.000    3.229    0.667
   .rw                0.908                               0.908    0.908
    authoritarian     0.600    0.009   65.855    0.000    1.000    1.000
   .prejudice         0.678    0.002  288.690    0.000    0.934    0.934
   .trust             2.779    0.037   74.225    0.000    0.917    0.917

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.391
    ipstrgvr          0.372
    ipbhprpr          0.356
    ipfruler          0.281
    imptradr          0.258
    imsmetn.x         0.726
    imdfetn.x         0.957
    impcntr.x         0.767
    ppltrst.x         0.583
    pplfair.x         0.478
    pplhlp.x          0.333
    rw                0.092
    prejudice         0.066
    trust             0.083

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]       [,10]       [,11] [,12]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r2   0.38117045  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r3   0.37269804  0.36379045  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r4   0.33124357  0.32332675  0.31614006  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r5   0.31711661  0.30953743  0.30265724  0.26899326  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r6   0.13717234  0.13389388  0.13091778  0.11635605  0.11139367  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r7   0.15753931  0.15377408  0.15035609  0.13363228  0.12793309  0.8335755  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r8   0.14100278  0.13763277  0.13457356  0.11960521  0.11450425  0.7460771  0.8568525  1.0000000  0.0000000  0.00000000  0.00000000     0
r9  -0.03533543 -0.03449090 -0.03372426 -0.02997317 -0.02869487 -0.1869676 -0.2147280 -0.1921885  1.0000000  0.00000000  0.00000000     0
r10 -0.03198552 -0.03122106 -0.03052710 -0.02713163 -0.02597451 -0.1692425 -0.1943712 -0.1739685  0.5278796  1.00000000  0.00000000     0
r11 -0.02668627 -0.02604846 -0.02546947 -0.02263655 -0.02167114 -0.1412030 -0.1621684 -0.1451460  0.4404223  0.39866889  1.00000000     0
r12  0.13482871  0.13160626  0.12868100  0.11436807  0.10949047  0.2147259  0.2466078  0.2207220 -0.1004691 -0.09094428 -0.07587694     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02790494
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]        [,8]       [,9]       [,10]       [,11] [,12]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r2   0.42420358  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r3   0.36167498  0.34712835  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r4   0.29689130  0.28984938  0.38593404  1.00000000  0.00000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r5   0.27295874  0.30758258  0.32854904  0.31795998  1.00000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r6   0.13730042  0.12767925  0.11147692  0.11777563  0.09889660  1.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r7   0.16003005  0.15818042  0.11958404  0.13477404  0.13089411  0.8352268  1.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r8   0.14189791  0.14735879  0.10923115  0.12039208  0.11043713  0.7554236  0.8620534  1.00000000  0.0000000  0.00000000  0.00000000     0
r9  -0.13369555 -0.11068851 -0.06708882 -0.04714557 -0.05602390 -0.1980455 -0.2194657 -0.18968870  1.0000000  0.00000000  0.00000000     0
r10 -0.10204470 -0.08771342 -0.04878014 -0.05610742 -0.05546923 -0.1681760 -0.1748204 -0.14703289  0.4955422  1.00000000  0.00000000     0
r11 -0.06167743 -0.04795141 -0.02614766 -0.02380647 -0.00680282 -0.1120862 -0.1213227 -0.09577101  0.4303756  0.44475414  1.00000000     0
r12  0.10024888  0.16092936  0.09834036  0.11837619  0.15577496  0.1959945  0.2829688  0.27215136 -0.1131981 -0.07624286 -0.09494043     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02914557
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
ecvi 
0.02 

================================================================================
> # -------------------Target  variable rw1 ----------------------------------------
> #
> # MODEL 1 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw1, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 273,776/340215 # 80.47% of initial sample size
> set.seed(123)
> #
> tr <- sample(273776, 191643) # 273,776 * 0.7 = 191,643
> traindata  <- sset1[tr, ]    # results in 191,643 cases
> testdata  <- sset1[-tr, ]    # results in  82,133 cases
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 55 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                              191643
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               631.696    1181.862
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.535
  Shift parameter                                            1.069
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             65062.904   42742.859
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.522

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.973
  Tucker-Lewis Index (TLI)                       0.984       0.954
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.026
  90 Percent confidence interval - lower         0.018       0.025
  90 Percent confidence interval - upper         0.020       0.027
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.748    0.604
    ipstrgvr          0.948    0.009  109.925    0.000    0.709    0.598
    ipbhprpr          1.041    0.010  104.131    0.000    0.779    0.621
    ipfruler          1.028    0.011   95.375    0.000    0.769    0.541
    imptradr          0.974    0.011   91.517    0.000    0.729    0.514

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.328    0.013   25.238    0.000    0.245    0.245

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.597    0.006  820.883    0.000    4.597    3.708
   .ipstrgvr          4.653    0.005  868.129    0.000    4.653    3.923
   .ipbhprpr          4.326    0.005  819.155    0.000    4.326    3.448
   .ipfruler          3.715    0.005  689.442    0.000    3.715    2.613
   .imptradr          4.170    0.006  700.939    0.000    4.170    2.942
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1|t1            1.874    0.009  201.412    0.000    1.874    1.874

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.977    0.006  158.508    0.000    0.977    0.636
   .ipstrgvr          0.904    0.005  170.542    0.000    0.904    0.643
   .ipbhprpr          0.967    0.006  154.584    0.000    0.967    0.615
   .ipfruler          1.430    0.010  149.115    0.000    1.430    0.708
   .imptradr          1.479    0.010  151.338    0.000    1.479    0.736
   .rw1               0.940                               0.940    0.940
    authoritarian     0.560    0.008   69.142    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.364
    ipstrgvr          0.357
    ipbhprpr          0.385
    ipfruler          0.292
    imptradr          0.264
    rw1               0.060

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]     [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.000000    0
r2 0.3607911 1.0000000 0.0000000 0.0000000 0.000000    0
r3 0.3747055 0.3711653 1.0000000 0.0000000 0.000000    0
r4 0.3263501 0.3232668 0.3357340 1.0000000 0.000000    0
r5 0.3101885 0.3072578 0.3191076 0.2779271 1.000000    0
r6 0.1478719 0.1464748 0.1521238 0.1324924 0.125931    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02717997
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4268229 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3683818 0.3452307 1.0000000 0.0000000 0.0000000    0
r4 0.2941399 0.2836733 0.3828770 1.0000000 0.0000000    0
r5 0.2753844 0.3004259 0.3240296 0.3137612 1.0000000    0
r6 0.1236307 0.1655094 0.1245572 0.1569179 0.1778874    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02884493
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.004 

=====================================================================================
> #
> # MODEL 2 FOR rw1
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw1, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 273,776/340215 # 80.47% of initial sample size
> set.seed(123)
> #
> tr <- sample(273776, 191643) # 273,776 * 0.7 = 191,643
> traindata  <- sset1[tr, ]    # results in 191,643 cases
> testdata  <- sset1[-tr, ]    # results in  82,133 cases
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                              191643
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                16.778      44.203
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.380
  Shift parameter                                            0.034
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1553749.482 1151833.603
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.349

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.006       0.010
  90 Percent confidence interval - lower         0.004       0.008
  90 Percent confidence interval - upper         0.009       0.013
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.012       0.012

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.854    0.854
    imdfetn.x         1.145    0.002  627.058    0.000    0.978    0.978
    impcntr.x         1.029    0.001  846.699    0.000    0.878    0.878

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    prejudice         0.255    0.010   25.312    0.000    0.217    0.217

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.783    0.005 -151.478    0.000   -0.783   -0.783
    imsmetn.x|t2      0.558    0.005  116.007    0.000    0.558    0.558
    imsmetn.x|t3      1.546    0.007  217.079    0.000    1.546    1.546
    imdfetn.x|t1     -1.064    0.006 -184.938    0.000   -1.064   -1.064
    imdfetn.x|t2      0.215    0.005   46.806    0.000    0.215    0.215
    imdfetn.x|t3      1.248    0.006  207.103    0.000    1.248    1.248
    impcntr.x|t1     -1.090    0.006 -186.750    0.000   -1.090   -1.090
    impcntr.x|t2      0.131    0.005   28.654    0.000    0.131    0.131
    impcntr.x|t3      1.149    0.006  199.937    0.000    1.149    1.149
    rw1|t1            1.874    0.009  201.412    0.000    1.874    1.874

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.271                               0.271    0.271
   .imdfetn.x         0.044                               0.044    0.044
   .impcntr.x         0.229                               0.229    0.229
   .rw1               0.953                               0.953    0.953
    prejudice         0.729    0.002  394.748    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.729
    imdfetn.x         0.956
    impcntr.x         0.771
    rw1               0.047

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw1.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw1.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8344053 1.0000000 0.0000000  0
3 0.7494939 0.8583867 1.0000000  0
4 0.1854231 0.2123629 0.1907522  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.0118539
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw1t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> xt <- as.data.frame(rw1t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8334319 1.0000000 0.0000000  0
3 0.7492060 0.8588890 1.0000000  0
4 0.1372692 0.2067395 0.1897361  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.01533861
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw1s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
ecvi 
   0 
# =================================================================================
> #
> # MODEL 3 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw1, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 273,776/340215 # 80.47% of initial sample size
> set.seed(123)
> #
> tr <- sample(273776, 191643) # 273,776 * 0.7 = 191,643
> traindata  <- sset1[tr, ]    # results in 191,643 cases
> testdata  <- sset1[-tr, ]    # results in  82,133 cases
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 64 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                              191643
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               840.213    1254.614
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.673
  Shift parameter                                            5.937
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1634873.488  983213.624
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.663

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.013       0.016
  90 Percent confidence interval - lower         0.012       0.015
  90 Percent confidence interval - upper         0.014       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.021       0.021

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.762    0.615
    ipstrgvr          0.945    0.009  103.593    0.000    0.720    0.607
    ipbhprpr          0.992    0.010   97.094    0.000    0.756    0.603
    ipfruler          1.004    0.011   89.635    0.000    0.765    0.538
    imptradr          0.955    0.011   85.949    0.000    0.728    0.513
  prejudice =~                                                          
    imsmetn.x         1.000                               0.853    0.853
    imdfetn.x         1.146    0.002  628.686    0.000    0.978    0.978
    impcntr.x         1.029    0.001  841.417    0.000    0.878    0.878

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.269    0.014   19.315    0.000    0.205    0.205
    prejudice         0.197    0.011   17.549    0.000    0.168    0.168
  prejudice ~                                                           
    authoritarian     0.270    0.005   50.574    0.000    0.241    0.241

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.597    0.006  820.883    0.000    4.597    3.708
   .ipstrgvr          4.653    0.005  868.129    0.000    4.653    3.923
   .ipbhprpr          4.326    0.005  819.155    0.000    4.326    3.448
   .ipfruler          3.715    0.005  689.442    0.000    3.715    2.613
   .imptradr          4.170    0.006  700.939    0.000    4.170    2.942
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.783    0.005 -151.478    0.000   -0.783   -0.783
    imsmetn.x|t2      0.558    0.005  116.007    0.000    0.558    0.558
    imsmetn.x|t3      1.546    0.007  217.079    0.000    1.546    1.546
    imdfetn.x|t1     -1.064    0.006 -184.938    0.000   -1.064   -1.064
    imdfetn.x|t2      0.215    0.005   46.806    0.000    0.215    0.215
    imdfetn.x|t3      1.248    0.006  207.103    0.000    1.248    1.248
    impcntr.x|t1     -1.090    0.006 -186.750    0.000   -1.090   -1.090
    impcntr.x|t2      0.131    0.005   28.654    0.000    0.131    0.131
    impcntr.x|t3      1.149    0.006  199.937    0.000    1.149    1.149
    rw1|t1            1.874    0.009  201.412    0.000    1.874    1.874

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.956    0.007  143.410    0.000    0.956    0.622
   .ipstrgvr          0.889    0.006  153.075    0.000    0.889    0.632
   .ipbhprpr          1.002    0.007  146.162    0.000    1.002    0.637
   .ipfruler          1.436    0.010  142.118    0.000    1.436    0.711
   .imptradr          1.480    0.010  144.432    0.000    1.480    0.737
   .imsmetn.x         0.272                               0.272    0.272
   .imdfetn.x         0.043                               0.043    0.043
   .impcntr.x         0.229                               0.229    0.229
   .rw1               0.913                               0.913    0.913
    authoritarian     0.581    0.009   66.551    0.000    1.000    1.000
   .prejudice         0.685    0.002  302.837    0.000    0.942    0.942

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.378
    ipstrgvr          0.368
    ipbhprpr          0.363
    ipfruler          0.289
    imptradr          0.263
    imsmetn.x         0.728
    imdfetn.x         0.957
    impcntr.x         0.771
    rw1               0.087
    prejudice         0.058

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3731473 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3705519 0.3658210 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3307363 0.3265138 0.3242427 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.3155722 0.3115433 0.3093763 0.2761340 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1265771 0.1249611 0.1240919 0.1107583 0.1056801 1.0000000 0.0000000 0.0000000    0
r7 0.1451077 0.1432551 0.1422587 0.1269731 0.1211515 0.8343540 1.0000000 0.0000000    0
r8 0.1302558 0.1285928 0.1276984 0.1139773 0.1087515 0.7489569 0.8586025 1.0000000    0
r9 0.1507687 0.1488438 0.1478086 0.1319266 0.1258779 0.1853386 0.2124718 0.1907251    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02106509
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.4268229 1.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3683818 0.3452307 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.2941399 0.2836733 0.3828770 1.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.2753844 0.3004259 0.3240296 0.3137612 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1301791 0.1244012 0.1017449 0.1151375 0.09553583 1.0000000 0.0000000 0.0000000    0
r7 0.1590599 0.1563629 0.1116776 0.1267909 0.12587356 0.8334319 1.0000000 0.0000000    0
r8 0.1391831 0.1495027 0.1032985 0.1117486 0.11181160 0.7492060 0.8588890 1.0000000    0
r9 0.1236307 0.1655094 0.1245572 0.1569179 0.17788737 0.1372692 0.2067395 0.1897361    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02290404
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.005 

# ========================================================================================
> #
> # MODEL 4 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw1, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 273,776/340215 # 80.47% of initial sample size
> set.seed(123)
> #
> tr <- sample(273776, 191643) # 273,776 * 0.7 = 191,643
> traindata  <- sset1[tr, ]    # results in 191,643 cases
> testdata  <- sset1[-tr, ]    # results in  82,133 cases
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 88 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                              191643
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              3800.286    4367.643
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.873
  Shift parameter                                           14.253
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1695489.545 1029290.732
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.647

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.994
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.021
  90 Percent confidence interval - lower         0.019       0.021
  90 Percent confidence interval - upper         0.020       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.770    0.621
    ipstrgvr          0.942    0.009  102.415    0.000    0.725    0.611
    ipbhprpr          0.974    0.010   95.713    0.000    0.750    0.598
    ipfruler          0.987    0.011   88.337    0.000    0.760    0.534
    imptradr          0.940    0.011   84.586    0.000    0.723    0.510
  prejudice =~                                                          
    imsmetn.x         1.000                               0.853    0.853
    imdfetn.x         1.146    0.002  631.239    0.000    0.978    0.978
    impcntr.x         1.028    0.001  837.957    0.000    0.877    0.877
  trust =~                                                              
    ppltrst.x         1.000                               1.736    0.762
    pplfair.x         0.853    0.009  100.005    0.000    1.480    0.691
    pplhlp.x          0.728    0.007   98.352    0.000    1.264    0.575

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.263    0.014   18.853    0.000    0.202    0.202
    prejudice         0.166    0.012   13.668    0.000    0.142    0.142
    trust            -0.047    0.005   -8.909    0.000   -0.082   -0.082
  prejudice ~                                                           
    authoritarian     0.287    0.005   53.419    0.000    0.259    0.259
  trust ~                                                               
    prejudice        -0.576    0.009  -63.634    0.000   -0.283   -0.283

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.597    0.006  820.883    0.000    4.597    3.708
   .ipstrgvr          4.653    0.005  868.129    0.000    4.653    3.923
   .ipbhprpr          4.326    0.005  819.155    0.000    4.326    3.448
   .ipfruler          3.715    0.005  689.442    0.000    3.715    2.613
   .imptradr          4.170    0.006  700.939    0.000    4.170    2.942
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.995    0.008  596.719    0.000    4.995    2.192
   .pplfair.x         5.707    0.008  687.390    0.000    5.707    2.662
   .pplhlp.x          4.911    0.008  608.065    0.000    4.911    2.234
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.783    0.005 -151.478    0.000   -0.783   -0.783
    imsmetn.x|t2      0.558    0.005  116.007    0.000    0.558    0.558
    imsmetn.x|t3      1.546    0.007  217.079    0.000    1.546    1.546
    imdfetn.x|t1     -1.064    0.006 -184.938    0.000   -1.064   -1.064
    imdfetn.x|t2      0.215    0.005   46.806    0.000    0.215    0.215
    imdfetn.x|t3      1.248    0.006  207.103    0.000    1.248    1.248
    impcntr.x|t1     -1.090    0.006 -186.750    0.000   -1.090   -1.090
    impcntr.x|t2      0.131    0.005   28.654    0.000    0.131    0.131
    impcntr.x|t3      1.149    0.006  199.937    0.000    1.149    1.149
    rw1|t1            1.874    0.009  201.412    0.000    1.874    1.874

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.944    0.007  139.661    0.000    0.944    0.615
   .ipstrgvr          0.881    0.006  148.736    0.000    0.881    0.626
   .ipbhprpr          1.012    0.007  144.967    0.000    1.012    0.643
   .ipfruler          1.444    0.010  141.022    0.000    1.444    0.714
   .imptradr          1.487    0.010  143.107    0.000    1.487    0.740
   .imsmetn.x         0.272                               0.272    0.272
   .imdfetn.x         0.044                               0.044    0.044
   .impcntr.x         0.230                               0.230    0.230
   .ppltrst.x         2.176    0.028   76.712    0.000    2.176    0.419
   .pplfair.x         2.405    0.023  104.747    0.000    2.405    0.523
   .pplhlp.x          3.232    0.022  149.310    0.000    3.232    0.669
   .rw1               0.908                               0.908    0.908
    authoritarian     0.592    0.009   66.306    0.000    1.000    1.000
   .prejudice         0.679    0.002  290.434    0.000    0.933    0.933
   .trust             2.773    0.037   74.393    0.000    0.920    0.920

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.385
    ipstrgvr          0.374
    ipbhprpr          0.357
    ipfruler          0.286
    imptradr          0.260
    imsmetn.x         0.728
    imdfetn.x         0.956
    impcntr.x         0.770
    ppltrst.x         0.581
    pplfair.x         0.477
    pplhlp.x          0.331
    rw1               0.092
    prejudice         0.067
    trust             0.080

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]       [,10]       [,11] [,12]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r2   0.37960354  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r3   0.37105053  0.36541804  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r4   0.33173514  0.32669945  0.31933844  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r5   0.31673070  0.31192277  0.30489470  0.27258898  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r6   0.13705663  0.13497613  0.13193493  0.11795550  0.11262035  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r7   0.15702785  0.15464419  0.15115983  0.13514340  0.12903083  0.8341109  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000     0
r8   0.14091045  0.13877145  0.13564473  0.12127223  0.11578706  0.7484975  0.8575648  1.0000000  0.0000000  0.00000000  0.00000000     0
r9  -0.03464992 -0.03412394 -0.03335508 -0.02982088 -0.02847207 -0.1840558 -0.2108755 -0.1892311  1.0000000  0.00000000  0.00000000     0
r10 -0.03139520 -0.03091863 -0.03022199 -0.02701976 -0.02579765 -0.1667671 -0.1910676 -0.1714564  0.5262394  1.00000000  0.00000000     0
r11 -0.02615656 -0.02575951 -0.02517911 -0.02251121 -0.02149302 -0.1389402 -0.1591858 -0.1428469  0.4384305  0.39724808  1.00000000     0
r12  0.15218412  0.14987398  0.14649711  0.13097472  0.12505071  0.1854352  0.2124559  0.1906494 -0.1045697 -0.09474729 -0.07893765     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02815138
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]         [,5]       [,6]       [,7]        [,8]       [,9]       [,10]       [,11] [,12]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r2   0.42682290  1.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r3   0.36838179  0.34523073  1.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r4   0.29413993  0.28367334  0.38287701  1.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r5   0.27538440  0.30042586  0.32402960  0.31376118  1.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r6   0.13017913  0.12440117  0.10174494  0.11513748  0.095535835  1.0000000  0.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r7   0.15905990  0.15636286  0.11167755  0.12679088  0.125873565  0.8334319  1.0000000  0.00000000  0.0000000  0.00000000  0.00000000     0
r8   0.13918313  0.14950271  0.10329850  0.11174864  0.111811596  0.7492060  0.8588890  1.00000000  0.0000000  0.00000000  0.00000000     0
r9  -0.13064991 -0.10731636 -0.06762271 -0.04853662 -0.043533463 -0.2049834 -0.2232852 -0.19474509  1.0000000  0.00000000  0.00000000     0
r10 -0.09783044 -0.08178878 -0.04978562 -0.05530055 -0.054158808 -0.1710006 -0.1751211 -0.15292069  0.4991205  1.00000000  0.00000000     0
r11 -0.05563034 -0.04953474 -0.02143542 -0.02273707 -0.007643079 -0.1246779 -0.1242058 -0.09538452  0.4319960  0.44833755  1.00000000     0
r12  0.12363066  0.16550936  0.12455718  0.15691790  0.177887374  0.1372692  0.2067395  0.18973612 -0.1464043 -0.09157181 -0.08346526     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02831517
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
ecvi 
0.02

================================================================================
> # -------------------Target  variable rw2 ----------------------------------------
> #
> # MODEL 1 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw2, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 297,771/340,215 # 87.52% of initial sample size
> set.seed(123)
> #
> tr <- sample(297771, 208440) # 297771 * 0.7 = 208440 
> traindata  <- sset1[tr, ]    # results in 208,440 cases
> testdata  <- sset1[-tr, ]    # results in  89,331 cases
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 57 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                              208440
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               694.393    1326.921
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.524
  Shift parameter                                            1.045
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             69216.120   45635.818
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.517

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.971
  Tucker-Lewis Index (TLI)                       0.983       0.952
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.027
  90 Percent confidence interval - lower         0.018       0.025
  90 Percent confidence interval - upper         0.020       0.028
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.746    0.606
    ipstrgvr          0.951    0.008  113.635    0.000    0.709    0.597
    ipbhprpr          1.045    0.010  109.858    0.000    0.779    0.621
    ipfruler          1.028    0.010  100.280    0.000    0.767    0.540
    imptradr          0.969    0.010   96.050    0.000    0.723    0.512

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.122    0.016    7.559    0.000    0.091    0.091

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.621    0.005  859.263    0.000    4.621    3.753
   .ipstrgvr          4.656    0.005  898.958    0.000    4.656    3.919
   .ipbhprpr          4.328    0.005  850.270    0.000    4.328    3.447
   .ipfruler          3.729    0.005  720.310    0.000    3.729    2.627
   .imptradr          4.179    0.006  733.233    0.000    4.179    2.958
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2|t1            2.205    0.010  213.111    0.000    2.205    2.205

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.959    0.006  168.060    0.000    0.959    0.633
   .ipstrgvr          0.908    0.005  176.015    0.000    0.908    0.644
   .ipbhprpr          0.969    0.006  163.609    0.000    0.969    0.615
   .ipfruler          1.427    0.009  155.223    0.000    1.427    0.708
   .imptradr          1.473    0.009  159.057    0.000    1.473    0.738
   .rw2               0.992                               0.992    0.992
    authoritarian     0.557    0.008   72.494    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.367
    ipstrgvr          0.356
    ipbhprpr          0.385
    ipfruler          0.292
    imptradr          0.262
    rw2               0.008

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]      [,4]       [,5] [,6]
r1 1.00000000 0.00000000 0.00000000 0.0000000 0.00000000    0
r2 0.36181215 1.00000000 0.00000000 0.0000000 0.00000000    0
r3 0.37619752 0.37065049 1.00000000 0.0000000 0.00000000    0
r4 0.32734350 0.32251682 0.33533984 1.0000000 0.00000000    0
r5 0.31003086 0.30545946 0.31760429 0.2763593 1.00000000    0
r6 0.05494478 0.05413462 0.05628697 0.0489774 0.04638706    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02707654
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]       [,2]        [,3]       [,4]      [,5] [,6]
r1 1.0000000 0.00000000 0.000000000 0.00000000 0.0000000    0
r2 0.4190473 1.00000000 0.000000000 0.00000000 0.0000000    0
r3 0.3733903 0.34739545 1.000000000 0.00000000 0.0000000    0
r4 0.3002514 0.27846127 0.388459142 1.00000000 0.0000000    0
r5 0.2806122 0.30921641 0.327500419 0.31921876 1.0000000    0
r6 0.0330455 0.08028521 0.008429685 0.03455178 0.0644854    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02771016
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.003 

# ========================================================================================
> #
> # MODEL 2 FOR rw2
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw2, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 297,771/340,215 # 87.52% of initial sample size
> set.seed(123)
> #
> tr <- sample(297771, 208440) # 297771 * 0.7 = 208440 
> traindata  <- sset1[tr, ]    # results in 208,440 cases
> testdata  <- sset1[-tr, ]    # results in  89,331 cases
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 18 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                              208440
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                52.377     114.107
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.459
  Shift parameter                                            0.046
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1753426.730 1339057.185
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.309

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.011       0.016
  90 Percent confidence interval - lower         0.009       0.014
  90 Percent confidence interval - upper         0.014       0.019
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.859    0.859
    imdfetn.x         1.137    0.002  665.697    0.000    0.977    0.977
    impcntr.x         1.025    0.001  899.940    0.000    0.880    0.880

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    prejudice         0.341    0.012   28.327    0.000    0.293    0.293

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.792    0.005 -159.217    0.000   -0.792   -0.792
    imsmetn.x|t2      0.525    0.005  114.157    0.000    0.525    0.525
    imsmetn.x|t3      1.499    0.007  227.289    0.000    1.499    1.499
    imdfetn.x|t1     -1.067    0.006 -193.609    0.000   -1.067   -1.067
    imdfetn.x|t2      0.190    0.004   42.922    0.000    0.190    0.190
    imdfetn.x|t3      1.209    0.006  212.968    0.000    1.209    1.209
    impcntr.x|t1     -1.092    0.006 -195.504    0.000   -1.092   -1.092
    impcntr.x|t2      0.110    0.004   24.858    0.000    0.110    0.110
    impcntr.x|t3      1.118    0.005  205.059    0.000    1.118    1.118
    rw2|t1            2.205    0.010  213.111    0.000    2.205    2.205

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.262                               0.262    0.262
   .imdfetn.x         0.046                               0.046    0.046
   .impcntr.x         0.225                               0.225    0.225
   .rw2               0.914                               0.914    0.914
    prejudice         0.738    0.002  423.479    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.738
    imdfetn.x         0.954
    impcntr.x         0.775
    rw2               0.086

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw2.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw2.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8391325 1.0000000 0.0000000  0
3 0.7562468 0.8602086 1.0000000  0
4 0.2516096 0.2861985 0.2579291  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.02576714
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw2t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw2t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8400173 1.0000000 0.0000000  0
3 0.7586414 0.8660900 1.0000000  0
4 0.2077612 0.3025592 0.3208801  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02488833
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw2s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
ecvi 
   0 
  
 =================================================================================
> #
> # MODEL 3 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw2, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 297,771/340,215 # 87.52% of initial sample size
> set.seed(123)
> #
> tr <- sample(297771, 208440) # 297771 * 0.7 = 208440 
> traindata  <- sset1[tr, ]    # results in 208,440 cases
> testdata  <- sset1[-tr, ]    # results in  89,331 cases
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 61 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                              208440
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               973.357    1431.794
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.683
  Shift parameter                                            5.861
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1838081.066 1119552.861
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.642

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.013       0.016
  90 Percent confidence interval - lower         0.013       0.016
  90 Percent confidence interval - upper         0.014       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.024       0.024

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.757    0.615
    ipstrgvr          0.953    0.009  108.011    0.000    0.722    0.607
    ipbhprpr          0.997    0.010  102.169    0.000    0.755    0.602
    ipfruler          1.010    0.011   94.392    0.000    0.765    0.539
    imptradr          0.953    0.010   90.928    0.000    0.722    0.511
  prejudice =~                                                          
    imsmetn.x         1.000                               0.859    0.859
    imdfetn.x         1.138    0.002  668.367    0.000    0.977    0.977
    impcntr.x         1.025    0.001  896.459    0.000    0.880    0.880

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.035    0.017    2.104    0.035    0.026    0.026
    prejudice         0.334    0.013   26.115    0.000    0.287    0.287
  prejudice ~                                                           
    authoritarian     0.256    0.005   49.478    0.000    0.226    0.226

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.621    0.005  859.263    0.000    4.621    3.753
   .ipstrgvr          4.656    0.005  898.958    0.000    4.656    3.919
   .ipbhprpr          4.328    0.005  850.270    0.000    4.328    3.447
   .ipfruler          3.729    0.005  720.310    0.000    3.729    2.627
   .imptradr          4.179    0.006  733.233    0.000    4.179    2.958
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.792    0.005 -159.217    0.000   -0.792   -0.792
    imsmetn.x|t2      0.525    0.005  114.157    0.000    0.525    0.525
    imsmetn.x|t3      1.499    0.007  227.289    0.000    1.499    1.499
    imdfetn.x|t1     -1.067    0.006 -193.609    0.000   -1.067   -1.067
    imdfetn.x|t2      0.190    0.004   42.922    0.000    0.190    0.190
    imdfetn.x|t3      1.209    0.006  212.968    0.000    1.209    1.209
    impcntr.x|t1     -1.092    0.006 -195.504    0.000   -1.092   -1.092
    impcntr.x|t2      0.110    0.004   24.858    0.000    0.110    0.110
    impcntr.x|t3      1.118    0.005  205.059    0.000    1.118    1.118
    rw2|t1            2.205    0.010  213.111    0.000    2.205    2.205

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.942    0.006  150.574    0.000    0.942    0.621
   .ipstrgvr          0.891    0.006  159.474    0.000    0.891    0.631
   .ipbhprpr          1.006    0.007  152.874    0.000    1.006    0.638
   .ipfruler          1.430    0.010  148.784    0.000    1.430    0.709
   .imptradr          1.474    0.010  153.536    0.000    1.474    0.739
   .imsmetn.x         0.263                               0.263    0.263
   .imdfetn.x         0.045                               0.045    0.045
   .impcntr.x         0.225                               0.225    0.225
   .rw2               0.914                               0.914    0.914
    authoritarian     0.574    0.008   69.843    0.000    1.000    1.000
   .prejudice         0.700    0.002  332.356    0.000    0.949    0.949

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.379
    ipstrgvr          0.369
    ipbhprpr          0.362
    ipfruler          0.291
    imptradr          0.261
    imsmetn.x         0.737
    imdfetn.x         0.955
    impcntr.x         0.775
    rw2               0.086
    prejudice         0.051

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.37367907 1.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.37015208 0.36541063 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.33167301 0.32742445 0.32433404 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.31445090 0.31042296 0.30749301 0.27552765 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.11914774 0.11762152 0.11651134 0.10439944 0.09897850 1.0000000 0.0000000 0.0000000    0
r7 0.13564254 0.13390504 0.13264117 0.11885249 0.11268108 0.8391547 1.0000000 0.0000000    0
r8 0.12215867 0.12059388 0.11945565 0.10703767 0.10147974 0.7557365 0.8603607 1.0000000    0
r9 0.05611366 0.05539488 0.05487203 0.04916782 0.04661478 0.2515249 0.2863460 0.2578811    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02368439
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]       [,2]        [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.00000000 0.000000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.4190473 1.00000000 0.000000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3733903 0.34739545 1.000000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.3002514 0.27846127 0.388459142 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.2806122 0.30921641 0.327500419 0.31921876 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1377982 0.11502728 0.102142539 0.10925184 0.08391603 1.0000000 0.0000000 0.0000000    0
r7 0.1675875 0.15293774 0.119353361 0.12235991 0.11635730 0.8400173 1.0000000 0.0000000    0
r8 0.1479748 0.14546416 0.105609094 0.10595454 0.10193954 0.7586414 0.8660900 1.0000000    0
r9 0.0330455 0.08028521 0.008429685 0.03455178 0.06448540 0.2077612 0.3025592 0.3208801    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.0246085
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.005 

# ========================================================================================
> #
> # MODEL 4 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, select = c(LNR, cntry, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw2, anweight.x.x.x ))
> #
> sset1 <- na.omit(sset1) # results in 297,771/340,215 # 87.52% of initial sample size
> set.seed(123)
> #
> tr <- sample(297771, 208440) # 297771 * 0.7 = 208440 
> traindata  <- sset1[tr, ]    # results in 208,440 cases
> testdata  <- sset1[-tr, ]    # results in  89,331 cases
> #
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 88 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                              208440
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              4205.547    4785.063
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.882
  Shift parameter                                           14.422
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                           1905891.927 1161319.958
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.641

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.021
  90 Percent confidence interval - lower         0.019       0.021
  90 Percent confidence interval - upper         0.020       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.765    0.621
    ipstrgvr          0.951    0.009  106.883    0.000    0.727    0.612
    ipbhprpr          0.979    0.010  100.623    0.000    0.749    0.596
    ipfruler          0.995    0.011   92.908    0.000    0.761    0.536
    imptradr          0.939    0.010   89.701    0.000    0.718    0.508
  prejudice =~                                                          
    imsmetn.x         1.000                               0.859    0.859
    imdfetn.x         1.137    0.002  671.136    0.000    0.977    0.977
    impcntr.x         1.024    0.001  893.129    0.000    0.880    0.880
  trust =~                                                              
    ppltrst.x         1.000                               1.748    0.760
    pplfair.x         0.872    0.008  107.207    0.000    1.524    0.700
    pplhlp.x          0.748    0.007  105.332    0.000    1.309    0.588

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.028    0.017    1.668    0.095    0.021    0.021
    prejudice         0.335    0.014   24.524    0.000    0.288    0.288
    trust            -0.001    0.007   -0.105    0.917   -0.001   -0.001
  prejudice ~                                                           
    authoritarian     0.274    0.005   52.693    0.000    0.244    0.244
  trust ~                                                               
    prejudice        -0.582    0.009  -67.744    0.000   -0.286   -0.286

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.621    0.005  859.263    0.000    4.621    3.753
   .ipstrgvr          4.656    0.005  898.958    0.000    4.656    3.919
   .ipbhprpr          4.328    0.005  850.270    0.000    4.328    3.447
   .ipfruler          3.729    0.005  720.310    0.000    3.729    2.627
   .imptradr          4.179    0.006  733.233    0.000    4.179    2.958
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.939    0.008  610.215    0.000    4.939    2.147
   .pplfair.x         5.644    0.008  699.519    0.000    5.644    2.593
   .pplhlp.x          4.886    0.008  623.544    0.000    4.886    2.196
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.792    0.005 -159.217    0.000   -0.792   -0.792
    imsmetn.x|t2      0.525    0.005  114.157    0.000    0.525    0.525
    imsmetn.x|t3      1.499    0.007  227.289    0.000    1.499    1.499
    imdfetn.x|t1     -1.067    0.006 -193.609    0.000   -1.067   -1.067
    imdfetn.x|t2      0.190    0.004   42.922    0.000    0.190    0.190
    imdfetn.x|t3      1.209    0.006  212.968    0.000    1.209    1.209
    impcntr.x|t1     -1.092    0.006 -195.504    0.000   -1.092   -1.092
    impcntr.x|t2      0.110    0.004   24.858    0.000    0.110    0.110
    impcntr.x|t3      1.118    0.005  205.059    0.000    1.118    1.118
    rw2|t1            2.205    0.010  213.111    0.000    2.205    2.205

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.931    0.006  146.303    0.000    0.931    0.614
   .ipstrgvr          0.883    0.006  155.244    0.000    0.883    0.626
   .ipbhprpr          1.016    0.007  151.351    0.000    1.016    0.645
   .ipfruler          1.437    0.010  147.495    0.000    1.437    0.713
   .imptradr          1.480    0.010  152.475    0.000    1.480    0.742
   .imsmetn.x         0.262                               0.262    0.262
   .imdfetn.x         0.046                               0.046    0.046
   .impcntr.x         0.226                               0.226    0.226
   .ppltrst.x         2.234    0.027   82.410    0.000    2.234    0.422
   .pplfair.x         2.413    0.022  109.449    0.000    2.413    0.510
   .pplhlp.x          3.237    0.021  157.020    0.000    3.237    0.654
   .rw2               0.914                               0.914    0.914
    authoritarian     0.585    0.008   69.595    0.000    1.000    1.000
   .prejudice         0.694    0.002  318.899    0.000    0.941    0.941
   .trust             2.807    0.036   78.642    0.000    0.918    0.918

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.386
    ipstrgvr          0.374
    ipbhprpr          0.355
    ipfruler          0.287
    imptradr          0.258
    imsmetn.x         0.738
    imdfetn.x         0.954
    impcntr.x         0.774
    ppltrst.x         0.578
    pplfair.x         0.490
    pplhlp.x          0.346
    rw2               0.086
    prejudice         0.059
    trust             0.082

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]        [,9]       [,10]       [,11] [,12]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r2   0.37987060  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r3   0.37025849  0.36472727  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r4   0.33276022  0.32778918  0.31949493  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r5   0.31567838  0.31096252  0.30309404  0.27239791  1.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r6   0.13005668  0.12811379  0.12487205  0.11222551  0.10646455  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r7   0.14790218  0.14569269  0.14200614  0.12762434  0.12107289  0.8389758  1.0000000  0.0000000  0.00000000  0.00000000  0.00000000     0
r8   0.13319367  0.13120391  0.12788398  0.11493241  0.10903249  0.7555417  0.8592120  1.0000000  0.00000000  0.00000000  0.00000000     0
r9  -0.03292738 -0.03243549 -0.03161475 -0.02841294 -0.02695440 -0.1867807 -0.2124095 -0.1912859  1.00000000  0.00000000  0.00000000     0
r10 -0.03033847 -0.02988525 -0.02912905 -0.02617898 -0.02483511 -0.1720951 -0.1957088 -0.1762461  0.53232242  1.00000000  0.00000000     0
r11 -0.02547914 -0.02509851 -0.02446342 -0.02198587 -0.02085725 -0.1445305 -0.1643620 -0.1480166  0.44705991  0.41190988  1.00000000     0
r12  0.05675035  0.05590257  0.05448803  0.04896970  0.04645590  0.2516982  0.2862345  0.2577692 -0.06462106 -0.05954023 -0.05000363     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02905558
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]         [,3]        [,4]         [,5]       [,6]       [,7]        [,8]        [,9]       [,10]       [,11] [,12]
r1   1.00000000  0.00000000  0.000000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r2   0.41904730  1.00000000  0.000000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r3   0.37339030  0.34739545  1.000000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r4   0.30025145  0.27846127  0.388459142  1.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r5   0.28061220  0.30921641  0.327500419  0.31921876  1.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r6   0.13779820  0.11502728  0.102142539  0.10925184  0.083916027  1.0000000  0.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r7   0.16758753  0.15293774  0.119353361  0.12235991  0.116357303  0.8400173  1.0000000  0.00000000  0.00000000  0.00000000  0.00000000     0
r8   0.14797475  0.14546416  0.105609094  0.10595454  0.101939538  0.7586414  0.8660900  1.00000000  0.00000000  0.00000000  0.00000000     0
r9  -0.13360317 -0.10800747 -0.067139167 -0.04464837 -0.050533954 -0.1987184 -0.2218234 -0.19229376  1.00000000  0.00000000  0.00000000     0
r10 -0.09908116 -0.07804773 -0.049035771 -0.05952472 -0.045313687 -0.1744474 -0.1756687 -0.14904646  0.50248394  1.00000000  0.00000000     0
r11 -0.06242002 -0.05705490 -0.019659315 -0.02863338 -0.008421236 -0.1208199 -0.1271356 -0.09955714  0.43298217  0.45111397  1.00000000     0
r12  0.03304550  0.08028521  0.008429685  0.03455178  0.064485396  0.2077612  0.3025592  0.32088013 -0.06892536 -0.05162644 -0.05086243     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02894937
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
ecvi 
0.02

# ENDE BLOCK 3
# ==========================================================================================

#  Testing block 4: Temporal validation set design, structural equation models 
> # run sequentially # SRMR as criterion 
> #
> # ------------------- SEM in LONGITUDINAL VALIDATION SET DESIGN --------------------------

  #   Rounds 1 + 2 + 3 (training) against round 4 (test) 
  #
> #
> # -------------------Target  variable rw  ------------------------------------------------
> #
> #
> # MODEL 1 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                   impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                   ipfrule.x, imptrad.x, 
+                                   imsmetn.x, imdfetn.x, impcntr.x, 
+                                   ppltrst.x, pplfair.x, pplhlp.x,
+                                   rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 112,133 cases overall 
>                                            #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 83,071 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,062 in round 4 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 57 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               83071
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               321.020     613.416
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.524
  Shift parameter                                            1.184
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             29468.798   18710.785
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.575

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.989       0.968
  Tucker-Lewis Index (TLI)                       0.982       0.946
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.028
  90 Percent confidence interval - lower         0.019       0.027
  90 Percent confidence interval - upper         0.022       0.030
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.729    0.591
    ipstrgvr          1.009    0.014   73.764    0.000    0.735    0.608
    ipbhprpr          1.134    0.016   72.310    0.000    0.827    0.657
    ipfruler          1.076    0.017   65.080    0.000    0.784    0.557
    imptradr          1.008    0.016   61.481    0.000    0.735    0.521

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.298    0.018   16.605    0.000    0.217    0.217

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.594    0.008  542.374    0.000    4.594    3.725
   .ipstrgvr          4.591    0.008  558.377    0.000    4.591    3.796
   .ipbhprpr          4.312    0.008  535.920    0.000    4.312    3.426
   .ipfruler          3.761    0.008  461.749    0.000    3.761    2.673
   .imptradr          4.151    0.009  463.733    0.000    4.151    2.943
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw|t1             1.815    0.013  141.862    0.000    1.815    1.815

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.989    0.009  104.846    0.000    0.989    0.651
   .ipstrgvr          0.922    0.008  112.128    0.000    0.922    0.630
   .ipbhprpr          0.900    0.009  104.740    0.000    0.900    0.568
   .ipfruler          1.365    0.013  101.333    0.000    1.365    0.689
   .imptradr          1.449    0.014  101.112    0.000    1.449    0.729
   .rw                0.953                               0.953    0.953
    authoritarian     0.531    0.012   45.286    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.349
    ipstrgvr          0.370
    ipbhprpr          0.432
    ipfruler          0.311
    imptradr          0.271
    rw                0.047

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]     [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.000000    0
r2 0.3593652 1.0000000 0.0000000 0.0000000 0.000000    0
r3 0.3883166 0.3994508 1.0000000 0.0000000 0.000000    0
r4 0.3294669 0.3389137 0.3662175 1.0000000 0.000000    0
r5 0.3079386 0.3167681 0.3422878 0.2904138 1.000000    0
r6 0.1285495 0.1322354 0.1428886 0.1212337 0.113312    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02931061
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
         [,1]      [,2]       [,3]      [,4]      [,5] [,6]
r1 1.00000000 0.0000000 0.00000000 0.0000000 0.0000000    0
r2 0.43255403 1.0000000 0.00000000 0.0000000 0.0000000    0
r3 0.37476065 0.3831682 1.00000000 0.0000000 0.0000000    0
r4 0.31891261 0.3152448 0.39781357 1.0000000 0.0000000    0
r5 0.28434178 0.3200139 0.33036623 0.3101307 1.0000000    0
r6 0.09510785 0.1267596 0.06313778 0.1198191 0.1137343    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02767528
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.004 

# ========================================================================================
> #
> # MODEL 2 FOR rw   
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                         # results in 112,133 cases overall 
> #                                                 (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)        # results in 83,071 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,062 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
26517 28688 27866 83071 
> addmargins(table(testdata$essround))  

    4   Sum 
29062 29062 
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               83071
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                16.998      40.673
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.418
  Shift parameter                                            0.013
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            627805.100  474938.510
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.322

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.010       0.015
  90 Percent confidence interval - lower         0.006       0.011
  90 Percent confidence interval - upper         0.014       0.020
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.017       0.017

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.844    0.844
    imdfetn.x         1.154    0.003  401.891    0.000    0.974    0.974
    impcntr.x         1.041    0.002  523.805    0.000    0.878    0.878

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    prejudice         0.216    0.014   15.203    0.000    0.182    0.182

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.932    0.008 -114.720    0.000   -0.932   -0.932
    imsmetn.x|t2      0.430    0.007   59.416    0.000    0.430    0.430
    imsmetn.x|t3      1.498    0.011  139.965    0.000    1.498    1.498
    imdfetn.x|t1     -1.214    0.009 -132.751    0.000   -1.214   -1.214
    imdfetn.x|t2      0.080    0.007   11.470    0.000    0.080    0.080
    imdfetn.x|t3      1.182    0.009  128.693    0.000    1.182    1.182
    impcntr.x|t1     -1.219    0.009 -133.512    0.000   -1.219   -1.219
    impcntr.x|t2      0.033    0.007    4.767    0.000    0.033    0.033
    impcntr.x|t3      1.133    0.009  126.885    0.000    1.133    1.133
    rw|t1             1.815    0.013  141.862    0.000    1.815    1.815

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.288                               0.288    0.288
   .imdfetn.x         0.052                               0.052    0.052
   .impcntr.x         0.229                               0.229    0.229
   .rw                0.967                               0.967    0.967
    prejudice         0.712    0.003  250.818    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.712
    imdfetn.x         0.948
    impcntr.x         0.771
    rw                0.033

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2       X3 X4
1 1.0000000 0.0000000 0.000000  0
2 0.8216510 1.0000000 0.000000  0
3 0.7406514 0.8549460 1.000000  0
4 0.1537969 0.1775302 0.160029  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.01680666
> #
> # same model for testdata to get its observed covariance matrix
> #
> rwt.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- as.data.frame(rwt.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1       X2        X3 X4
1 1.0000000 0.000000 0.0000000  0
2 0.8291476 1.000000 0.0000000  0
3 0.7492474 0.862569 1.0000000  0
4 0.1192650 0.195959 0.2101579  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02057469
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rws.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
ecvi 
   0
# =================================================================================
> #
> # MODEL 3 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                         # results in 112,133 cases overall 
> #                                                 (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)        # results in 83,071 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,062 in round 4 
> # addmargins(table(traindata$essround))
> # addmargins(table(testdata$essround)) 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 64 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               83071
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               595.978     899.805
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.667
  Shift parameter                                            5.778
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            663590.341  392609.737
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.690

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.017       0.021
  90 Percent confidence interval - lower         0.015       0.019
  90 Percent confidence interval - upper         0.018       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.750    0.608
    ipstrgvr          1.023    0.014   70.831    0.000    0.767    0.634
    ipbhprpr          1.058    0.016   68.142    0.000    0.793    0.630
    ipfruler          1.025    0.017   61.605    0.000    0.769    0.546
    imptradr          0.962    0.017   57.838    0.000    0.721    0.511
  prejudice =~                                                          
    imsmetn.x         1.000                               0.843    0.843
    imdfetn.x         1.155    0.003  400.254    0.000    0.974    0.974
    impcntr.x         1.041    0.002  519.786    0.000    0.878    0.878

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.248    0.019   13.069    0.000    0.186    0.186
    prejudice         0.167    0.016   10.667    0.000    0.141    0.141
  prejudice ~                                                           
    authoritarian     0.251    0.008   31.136    0.000    0.223    0.223

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.594    0.008  542.374    0.000    4.594    3.725
   .ipstrgvr          4.591    0.008  558.377    0.000    4.591    3.796
   .ipbhprpr          4.312    0.008  535.920    0.000    4.312    3.426
   .ipfruler          3.761    0.008  461.749    0.000    3.761    2.673
   .imptradr          4.151    0.009  463.733    0.000    4.151    2.943
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.932    0.008 -114.720    0.000   -0.932   -0.932
    imsmetn.x|t2      0.430    0.007   59.416    0.000    0.430    0.430
    imsmetn.x|t3      1.498    0.011  139.965    0.000    1.498    1.498
    imdfetn.x|t1     -1.214    0.009 -132.751    0.000   -1.214   -1.214
    imdfetn.x|t2      0.080    0.007   11.470    0.000    0.080    0.080
    imdfetn.x|t3      1.182    0.009  128.693    0.000    1.182    1.182
    impcntr.x|t1     -1.219    0.009 -133.512    0.000   -1.219   -1.219
    impcntr.x|t2      0.033    0.007    4.767    0.000    0.033    0.033
    impcntr.x|t3      1.133    0.009  126.885    0.000    1.133    1.133
    rw|t1             1.815    0.013  141.862    0.000    1.815    1.815

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.959    0.010   95.918    0.000    0.959    0.630
   .ipstrgvr          0.874    0.009   99.675    0.000    0.874    0.598
   .ipbhprpr          0.954    0.010   99.369    0.000    0.954    0.603
   .ipfruler          1.390    0.014   96.571    0.000    1.390    0.702
   .imptradr          1.469    0.015   97.052    0.000    1.469    0.739
   .imsmetn.x         0.289                               0.289    0.289
   .imdfetn.x         0.051                               0.051    0.051
   .impcntr.x         0.229                               0.229    0.229
   .rw                0.934                               0.934    0.934
    authoritarian     0.562    0.013   44.409    0.000    1.000    1.000
   .prejudice         0.676    0.003  202.534    0.000    0.950    0.950

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.370
    ipstrgvr          0.402
    ipbhprpr          0.397
    ipfruler          0.298
    imptradr          0.261
    imsmetn.x         0.711
    imdfetn.x         0.949
    impcntr.x         0.771
    rw                0.066
    prejudice         0.050

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.3856193 1.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3832775 0.3998781 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.3320606 0.3464430 0.3443391 1.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.3108583 0.3243223 0.3223527 0.2792772 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1142454 0.1191936 0.1184698 0.1026389 0.09608527 1.0000000 0.0000000 0.0000000    0
r7 0.1319762 0.1376924 0.1368562 0.1185683 0.11099761 0.8215091 1.0000000 0.0000000    0
r8 0.1189264 0.1240774 0.1233239 0.1068443 0.10002218 0.7402784 0.8551689 1.0000000    0
r9 0.1321663 0.1378908 0.1370534 0.1187391 0.11115754 0.1537358 0.1775954 0.1600348    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02607374
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
         [,1]      [,2]       [,3]      [,4]       [,5]      [,6]     [,7]      [,8] [,9]
r1 1.00000000 0.0000000 0.00000000 0.0000000 0.00000000 0.0000000 0.000000 0.0000000    0
r2 0.43255403 1.0000000 0.00000000 0.0000000 0.00000000 0.0000000 0.000000 0.0000000    0
r3 0.37476065 0.3831682 1.00000000 0.0000000 0.00000000 0.0000000 0.000000 0.0000000    0
r4 0.31891261 0.3152448 0.39781357 1.0000000 0.00000000 0.0000000 0.000000 0.0000000    0
r5 0.28434178 0.3200139 0.33036623 0.3101307 1.00000000 0.0000000 0.000000 0.0000000    0
r6 0.13537175 0.1746294 0.13174348 0.1385416 0.06268802 1.0000000 0.000000 0.0000000    0
r7 0.16482147 0.1956817 0.13875927 0.1429364 0.08444777 0.8291476 1.000000 0.0000000    0
r8 0.12841163 0.1691646 0.12036754 0.1232051 0.05665607 0.7492474 0.862569 1.0000000    0
r9 0.09510785 0.1267596 0.06313778 0.1198191 0.11373428 0.1192650 0.195959 0.2101579    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02813533
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.007

# ========================================================================================
> #
> # MODEL 4 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                         # results in 112,133 cases overall 
> #                                                 (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)        # results in 83,071 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,062 in round 4 
> # addmargins(table(traindata$essround))
> # addmargins(table(testdata$essround)) 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 88 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               83071
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              2125.710    2363.287
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.905
  Shift parameter                                           14.874
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            687718.298  416165.591
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.653

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.997       0.994
  Tucker-Lewis Index (TLI)                       0.996       0.993
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.024
  90 Percent confidence interval - lower         0.022       0.023
  90 Percent confidence interval - upper         0.023       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.032       0.032

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.757    0.614
    ipstrgvr          1.022    0.015   70.218    0.000    0.774    0.640
    ipbhprpr          1.039    0.015   67.416    0.000    0.787    0.625
    ipfruler          1.008    0.017   60.907    0.000    0.763    0.542
    imptradr          0.946    0.017   57.254    0.000    0.716    0.508
  prejudice =~                                                          
    imsmetn.x         1.000                               0.843    0.843
    imdfetn.x         1.154    0.003  400.738    0.000    0.974    0.974
    impcntr.x         1.040    0.002  518.357    0.000    0.877    0.877
  trust =~                                                              
    ppltrst.x         1.000                               1.782    0.769
    pplfair.x         0.823    0.013   65.331    0.000    1.467    0.671
    pplhlp.x          0.726    0.011   65.231    0.000    1.294    0.577

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.243    0.019   12.769    0.000    0.184    0.184
    prejudice         0.148    0.017    8.813    0.000    0.125    0.125
    trust            -0.030    0.007   -4.054    0.000   -0.053   -0.053
  prejudice ~                                                           
    authoritarian     0.267    0.008   33.060    0.000    0.240    0.240
  trust ~                                                               
    prejudice        -0.527    0.014  -37.795    0.000   -0.249   -0.249

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.594    0.008  542.374    0.000    4.594    3.725
   .ipstrgvr          4.591    0.008  558.377    0.000    4.591    3.796
   .ipbhprpr          4.312    0.008  535.920    0.000    4.312    3.426
   .ipfruler          3.761    0.008  461.749    0.000    3.761    2.673
   .imptradr          4.151    0.009  463.733    0.000    4.151    2.943
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.906    0.013  381.416    0.000    4.906    2.118
   .pplfair.x         5.641    0.013  446.638    0.000    5.641    2.579
   .pplhlp.x          4.802    0.012  385.188    0.000    4.802    2.141
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.932    0.008 -114.720    0.000   -0.932   -0.932
    imsmetn.x|t2      0.430    0.007   59.416    0.000    0.430    0.430
    imsmetn.x|t3      1.498    0.011  139.965    0.000    1.498    1.498
    imdfetn.x|t1     -1.214    0.009 -132.751    0.000   -1.214   -1.214
    imdfetn.x|t2      0.080    0.007   11.470    0.000    0.080    0.080
    imdfetn.x|t3      1.182    0.009  128.693    0.000    1.182    1.182
    impcntr.x|t1     -1.219    0.009 -133.512    0.000   -1.219   -1.219
    impcntr.x|t2      0.033    0.007    4.767    0.000    0.033    0.033
    impcntr.x|t3      1.133    0.009  126.885    0.000    1.133    1.133
    rw|t1             1.815    0.013  141.862    0.000    1.815    1.815

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.948    0.010   93.945    0.000    0.948    0.623
   .ipstrgvr          0.864    0.009   96.692    0.000    0.864    0.591
   .ipbhprpr          0.965    0.010   98.714    0.000    0.965    0.609
   .ipfruler          1.399    0.015   95.862    0.000    1.399    0.706
   .imptradr          1.476    0.015   96.439    0.000    1.476    0.742
   .imsmetn.x         0.289                               0.289    0.289
   .imdfetn.x         0.052                               0.052    0.052
   .impcntr.x         0.231                               0.231    0.231
   .ppltrst.x         2.191    0.045   48.387    0.000    2.191    0.408
   .pplfair.x         2.633    0.035   75.599    0.000    2.633    0.550
   .pplhlp.x          3.357    0.033  101.484    0.000    3.357    0.667
   .rw                0.932                               0.932    0.932
    authoritarian     0.573    0.013   44.384    0.000    1.000    1.000
   .prejudice         0.670    0.003  195.180    0.000    0.942    0.942
   .trust             2.978    0.061   48.606    0.000    0.938    0.938

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.377
    ipstrgvr          0.409
    ipbhprpr          0.391
    ipfruler          0.294
    imptradr          0.258
    imsmetn.x         0.711
    imdfetn.x         0.948
    impcntr.x         0.769
    ppltrst.x         0.592
    pplfair.x         0.450
    pplhlp.x          0.333
    rw                0.068
    prejudice         0.058
    trust             0.062

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r2   0.39269333  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r3   0.38364447  0.39994553  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r4   0.33267539  0.34681078  0.33881919  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r5   0.31163940  0.32488097  0.31739472  0.27522725  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r6   0.12422914  0.12950764  0.12652338  0.10971412  0.10277659  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r7   0.14342169  0.14951568  0.14607038  0.12666420  0.11865487  0.8213154  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r8   0.12919233  0.13468172  0.13157824  0.11409741  0.10688272  0.7398299  0.8541285  1.0000000  0.0000000  0.0000000  0.00000000
r9  -0.02826403 -0.02946497 -0.02878600 -0.02496164 -0.02338324 -0.1618561 -0.1868618 -0.1683226  1.0000000  0.0000000  0.00000000
r10 -0.02463768 -0.02568454 -0.02509269 -0.02175900 -0.02038312 -0.1410896 -0.1628870 -0.1467264  0.5158523  1.0000000  0.00000000
r11 -0.02119278 -0.02209327 -0.02158417 -0.01871661 -0.01753310 -0.1213621 -0.1401117 -0.1262108  0.4437246  0.3867937  1.00000000
r12  0.13332512  0.13899011  0.13578735  0.11774732  0.11030183  0.1538133  0.1775764  0.1599584 -0.0731272 -0.0637448 -0.05483185
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.0320701
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]         [,5]       [,6]       [,7]        [,8]        [,9]      [,10]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r2   0.43255403  1.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r3   0.37476065  0.38316824  1.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r4   0.31891261  0.31524480  0.39781357  1.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r5   0.28434178  0.32001389  0.33036623  0.31013075  1.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r6   0.13537175  0.17462943  0.13174348  0.13854162  0.062688019  1.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r7   0.16482147  0.19568169  0.13875927  0.14293638  0.084447768  0.8291476  1.0000000  0.00000000  0.00000000  0.0000000
r8   0.12841163  0.16916464  0.12036754  0.12320505  0.056656065  0.7492474  0.8625690  1.00000000  0.00000000  0.0000000
r9  -0.13439398 -0.12932343 -0.07919405 -0.04893672 -0.033506319 -0.1903526 -0.2083819 -0.17864180  1.00000000  0.0000000
r10 -0.09457202 -0.08887091 -0.05250322 -0.06127544 -0.044489951 -0.1435482 -0.1459447 -0.12279910  0.50131447  1.0000000
r11 -0.07627626 -0.06960791 -0.03329506 -0.01725242  0.001050442 -0.1060478 -0.1209496 -0.09901511  0.44233103  0.4482196
r12  0.09510785  0.12675955  0.06313778  0.11981914  0.113734278  0.1192650  0.1959590  0.21015794 -0.06639595 -0.0421467
          [,11] [,12]
r1   0.00000000     0
r2   0.00000000     0
r3   0.00000000     0
r4   0.00000000     0
r5   0.00000000     0
r6   0.00000000     0
r7   0.00000000     0
r8   0.00000000     0
r9   0.00000000     0
r10  0.00000000     0
r11  1.00000000     0
r12 -0.09566355     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03288154
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.026 

# ================================================================================
> # -------------------Target  variable rw1 ----------------------------------------
> #
> # MODEL 1 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 114,667 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 85,035 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,632 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
27183 29364 28488 85035 
> addmargins(table(testdata$essround))

    4   Sum 
29632 29632 
> # scale direction reversed for value items
> #
> library(car)
Loading required package: carData
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
This is lavaan 0.6-8
lavaan is FREE software! Please report any bugs.
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 56 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               85035
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               311.243     591.144
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.528
  Shift parameter                                            1.225
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             29881.023   18958.522
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.577

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.969
  Tucker-Lewis Index (TLI)                       0.983       0.949
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.028
  90 Percent confidence interval - lower         0.018       0.026
  90 Percent confidence interval - upper         0.022       0.029
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.728    0.591
    ipstrgvr          1.014    0.014   74.330    0.000    0.738    0.609
    ipbhprpr          1.135    0.016   72.546    0.000    0.826    0.656
    ipfruler          1.078    0.016   65.490    0.000    0.785    0.557
    imptradr          1.013    0.016   61.798    0.000    0.737    0.522

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.359    0.020   18.298    0.000    0.262    0.262

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.594    0.008  545.084    0.000    4.594    3.729
   .ipstrgvr          4.590    0.008  558.387    0.000    4.590    3.792
   .ipbhprpr          4.312    0.008  537.497    0.000    4.312    3.425
   .ipfruler          3.757    0.008  462.586    0.000    3.757    2.668
   .imptradr          4.146    0.009  463.720    0.000    4.146    2.933
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1|t1            1.917    0.014  134.433    0.000    1.917    1.917

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.988    0.009  105.400    0.000    0.988    0.651
   .ipstrgvr          0.921    0.008  113.070    0.000    0.921    0.629
   .ipbhprpr          0.902    0.009  104.777    0.000    0.902    0.569
   .ipfruler          1.367    0.014  101.187    0.000    1.367    0.689
   .imptradr          1.454    0.014  100.869    0.000    1.454    0.728
   .rw1               0.932                               0.932    0.932
    authoritarian     0.530    0.012   45.598    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.349
    ipstrgvr          0.371
    ipbhprpr          0.431
    ipfruler          0.311
    imptradr          0.272
    rw1               0.068

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3600796 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3877817 0.4000533 1.0000000 0.0000000 0.0000000    0
r4 0.3292535 0.3396730 0.3658051 1.0000000 0.0000000    0
r5 0.3081109 0.3178613 0.3423154 0.2906495 1.0000000    0
r6 0.1545607 0.1594519 0.1717191 0.1458014 0.1364389    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02932434
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000    0
r2 0.4339812 1.0000000 0.00000000 0.0000000 0.0000000    0
r3 0.3737878 0.3816902 1.00000000 0.0000000 0.0000000    0
r4 0.3181783 0.3149109 0.39845225 1.0000000 0.0000000    0
r5 0.2848565 0.3191515 0.32919603 0.3096114 1.0000000    0
r6 0.1104876 0.1351600 0.06341765 0.1295562 0.1264227    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03344947
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.004 

# ---------------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 2 FOR rw1
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 114,667 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 85,035 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,632 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
27183 29364 28488 85035 
> addmargins(table(testdata$essround))

    4   Sum 
29632 29632 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               85035
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                12.444      30.243
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.002       0.000
  Scaling correction factor                                  0.412
  Shift parameter                                            0.015
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            631179.408  476389.868
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.325

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.008       0.013
  90 Percent confidence interval - lower         0.004       0.009
  90 Percent confidence interval - upper         0.012       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.015       0.015

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.844    0.844
    imdfetn.x         1.153    0.003  404.632    0.000    0.973    0.973
    impcntr.x         1.041    0.002  524.276    0.000    0.878    0.878

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    prejudice         0.176    0.015   11.457    0.000    0.149    0.149

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.932    0.008 -114.056    0.000   -0.932   -0.932
    imsmetn.x|t2      0.431    0.007   59.859    0.000    0.431    0.431
    imsmetn.x|t3      1.502    0.011  141.454    0.000    1.502    1.502
    imdfetn.x|t1     -1.209    0.009 -129.607    0.000   -1.209   -1.209
    imdfetn.x|t2      0.086    0.007   12.287    0.000    0.086    0.086
    imdfetn.x|t3      1.186    0.009  130.130    0.000    1.186    1.186
    impcntr.x|t1     -1.217    0.009 -131.766    0.000   -1.217   -1.217
    impcntr.x|t2      0.037    0.007    5.262    0.000    0.037    0.037
    impcntr.x|t3      1.137    0.009  128.334    0.000    1.137    1.137
    rw1|t1            1.917    0.014  134.433    0.000    1.917    1.917

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.287                               0.287    0.287
   .imdfetn.x         0.053                               0.053    0.053
   .impcntr.x         0.228                               0.228    0.228
   .rw1               0.978                               0.978    0.978
    prejudice         0.713    0.003  251.477    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.713
    imdfetn.x         0.947
    impcntr.x         0.772
    rw1               0.022

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw1.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw1.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8215635 1.0000000 0.0000000  0
3 0.7415120 0.8549723 1.0000000  0
4 0.1255359 0.1447444 0.1306408  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.01537461
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw1t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw1t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2       X3 X4
1 1.0000000 0.0000000 0.000000  0
2 0.8280285 1.0000000 0.000000  0
3 0.7491023 0.8619545 1.000000  0
4 0.1125988 0.1814387 0.183868  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02120173
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw1s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
ecvi 
   0 
   
# =================================================================================
> #
> # MODEL 3 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 114,667 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 85,035 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,632 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
27183 29364 28488 85035 
> addmargins(table(testdata$essround))

    4   Sum 
29632 29632 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 64 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               85035
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               579.603     874.645
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.667
  Shift parameter                                            5.822
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            667354.886  393927.800
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.694

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.016       0.020
  90 Percent confidence interval - lower         0.015       0.019
  90 Percent confidence interval - upper         0.017       0.021
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.748    0.607
    ipstrgvr          1.027    0.014   71.613    0.000    0.769    0.635
    ipbhprpr          1.060    0.016   68.336    0.000    0.793    0.630
    ipfruler          1.029    0.017   61.917    0.000    0.770    0.547
    imptradr          0.967    0.017   58.248    0.000    0.724    0.512
  prejudice =~                                                          
    imsmetn.x         1.000                               0.844    0.844
    imdfetn.x         1.154    0.003  403.110    0.000    0.974    0.974
    impcntr.x         1.041    0.002  520.062    0.000    0.878    0.878

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.321    0.021   15.468    0.000    0.240    0.240
    prejudice         0.113    0.017    6.680    0.000    0.095    0.095
  prejudice ~                                                           
    authoritarian     0.250    0.008   31.072    0.000    0.222    0.222

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.594    0.008  545.084    0.000    4.594    3.729
   .ipstrgvr          4.590    0.008  558.387    0.000    4.590    3.792
   .ipbhprpr          4.312    0.008  537.497    0.000    4.312    3.425
   .ipfruler          3.757    0.008  462.586    0.000    3.757    2.668
   .imptradr          4.146    0.009  463.720    0.000    4.146    2.933
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.932    0.008 -114.056    0.000   -0.932   -0.932
    imsmetn.x|t2      0.431    0.007   59.859    0.000    0.431    0.431
    imsmetn.x|t3      1.502    0.011  141.454    0.000    1.502    1.502
    imdfetn.x|t1     -1.209    0.009 -129.607    0.000   -1.209   -1.209
    imdfetn.x|t2      0.086    0.007   12.287    0.000    0.086    0.086
    imdfetn.x|t3      1.186    0.009  130.130    0.000    1.186    1.186
    impcntr.x|t1     -1.217    0.009 -131.766    0.000   -1.217   -1.217
    impcntr.x|t2      0.037    0.007    5.262    0.000    0.037    0.037
    impcntr.x|t3      1.137    0.009  128.334    0.000    1.137    1.137
    rw1|t1            1.917    0.014  134.433    0.000    1.917    1.917

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.958    0.010   96.603    0.000    0.958    0.631
   .ipstrgvr          0.874    0.009  100.366    0.000    0.874    0.597
   .ipbhprpr          0.956    0.010   99.130    0.000    0.956    0.603
   .ipfruler          1.390    0.014   96.417    0.000    1.390    0.701
   .imptradr          1.473    0.015   97.047    0.000    1.473    0.738
   .imsmetn.x         0.288                               0.288    0.288
   .imdfetn.x         0.052                               0.052    0.052
   .impcntr.x         0.228                               0.228    0.228
   .rw1               0.923                               0.923    0.923
    authoritarian     0.560    0.013   44.746    0.000    1.000    1.000
   .prejudice         0.677    0.003  202.795    0.000    0.951    0.951

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.369
    ipstrgvr          0.403
    ipbhprpr          0.397
    ipfruler          0.299
    imptradr          0.262
    imsmetn.x         0.712
    imdfetn.x         0.948
    impcntr.x         0.772
    rw1               0.077
    prejudice         0.049

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.3857436 1.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3825982 0.4000689 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.3321587 0.3473262 0.3444940 1.0000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.3111034 0.3253094 0.3226568 0.2801196 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1138172 0.1190145 0.1180440 0.1024818 0.09598557 1.0000000 0.0000000 0.0000000    0
r7 0.1313235 0.1373201 0.1362004 0.1182445 0.11074911 0.8214287 1.0000000 0.0000000    0
r8 0.1184935 0.1239043 0.1228940 0.1066924 0.09992922 0.7411773 0.8551778 1.0000000    0
r9 0.1587534 0.1660026 0.1646490 0.1429426 0.13388160 0.1254917 0.1447936 0.1306477    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02589268
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]       [,5]      [,6]      [,7]     [,8] [,9]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r2 0.4339812 1.0000000 0.00000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r3 0.3737878 0.3816902 1.00000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r4 0.3181783 0.3149109 0.39845225 1.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r5 0.2848565 0.3191515 0.32919603 0.3096114 1.00000000 0.0000000 0.0000000 0.000000    0
r6 0.1352378 0.1748983 0.13026455 0.1374650 0.06145444 1.0000000 0.0000000 0.000000    0
r7 0.1656496 0.1951632 0.13780591 0.1414270 0.08364998 0.8280285 1.0000000 0.000000    0
r8 0.1286973 0.1709616 0.11897958 0.1224520 0.05546366 0.7491023 0.8619545 1.000000    0
r9 0.1104876 0.1351600 0.06341765 0.1295562 0.12642272 0.1125988 0.1814387 0.183868    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03102035
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.007

# ========================================================================================
> #
> # MODEL 4 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 114,667 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 85,035 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 29,632 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
27183 29364 28488 85035 
> addmargins(table(testdata$essround))

    4   Sum 
29632 29632 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 89 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               85035
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              2101.644    2332.478
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.907
  Shift parameter                                           14.959
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            691218.434  418362.545
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.652

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.997       0.995
  Tucker-Lewis Index (TLI)                       0.996       0.993
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.023
  90 Percent confidence interval - lower         0.021       0.022
  90 Percent confidence interval - upper         0.023       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.032       0.032

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.755    0.613
    ipstrgvr          1.026    0.014   71.028    0.000    0.775    0.640
    ipbhprpr          1.041    0.015   67.653    0.000    0.786    0.625
    ipfruler          1.012    0.017   61.237    0.000    0.764    0.543
    imptradr          0.952    0.017   57.682    0.000    0.719    0.509
  prejudice =~                                                          
    imsmetn.x         1.000                               0.844    0.844
    imdfetn.x         1.153    0.003  403.680    0.000    0.973    0.973
    impcntr.x         1.040    0.002  518.474    0.000    0.878    0.878
  trust =~                                                              
    ppltrst.x         1.000                               1.775    0.766
    pplfair.x         0.827    0.013   65.132    0.000    1.467    0.671
    pplhlp.x          0.731    0.011   64.833    0.000    1.298    0.578

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.317    0.021   15.221    0.000    0.239    0.239
    prejudice         0.086    0.018    4.699    0.000    0.072    0.072
    trust            -0.044    0.008   -5.613    0.000   -0.079   -0.079
  prejudice ~                                                           
    authoritarian     0.267    0.008   33.039    0.000    0.239    0.239
  trust ~                                                               
    prejudice        -0.517    0.014  -37.045    0.000   -0.246   -0.246

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.594    0.008  545.084    0.000    4.594    3.729
   .ipstrgvr          4.590    0.008  558.387    0.000    4.590    3.792
   .ipbhprpr          4.312    0.008  537.497    0.000    4.312    3.425
   .ipfruler          3.757    0.008  462.586    0.000    3.757    2.668
   .imptradr          4.146    0.009  463.720    0.000    4.146    2.933
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.896    0.013  383.100    0.000    4.896    2.114
   .pplfair.x         5.638    0.013  447.883    0.000    5.638    2.578
   .pplhlp.x          4.794    0.013  382.907    0.000    4.794    2.134
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.932    0.008 -114.056    0.000   -0.932   -0.932
    imsmetn.x|t2      0.431    0.007   59.859    0.000    0.431    0.431
    imsmetn.x|t3      1.502    0.011  141.454    0.000    1.502    1.502
    imdfetn.x|t1     -1.209    0.009 -129.607    0.000   -1.209   -1.209
    imdfetn.x|t2      0.086    0.007   12.287    0.000    0.086    0.086
    imdfetn.x|t3      1.186    0.009  130.130    0.000    1.186    1.186
    impcntr.x|t1     -1.217    0.009 -131.766    0.000   -1.217   -1.217
    impcntr.x|t2      0.037    0.007    5.262    0.000    0.037    0.037
    impcntr.x|t3      1.137    0.009  128.334    0.000    1.137    1.137
    rw1|t1            1.917    0.014  134.433    0.000    1.917    1.917

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.948    0.010   94.824    0.000    0.948    0.624
   .ipstrgvr          0.864    0.009   97.413    0.000    0.864    0.590
   .ipbhprpr          0.966    0.010   98.539    0.000    0.966    0.610
   .ipfruler          1.399    0.015   95.680    0.000    1.399    0.705
   .imptradr          1.480    0.015   96.464    0.000    1.480    0.741
   .imsmetn.x         0.288                               0.288    0.288
   .imdfetn.x         0.053                               0.053    0.053
   .impcntr.x         0.230                               0.230    0.230
   .ppltrst.x         2.214    0.045   49.415    0.000    2.214    0.413
   .pplfair.x         2.632    0.035   75.927    0.000    2.632    0.550
   .pplhlp.x          3.359    0.033  101.328    0.000    3.359    0.666
   .rw1               0.918                               0.918    0.918
    authoritarian     0.571    0.013   44.743    0.000    1.000    1.000
   .prejudice         0.672    0.003  195.853    0.000    0.943    0.943
   .trust             2.959    0.061   48.369    0.000    0.940    0.940

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.376
    ipstrgvr          0.410
    ipbhprpr          0.390
    ipfruler          0.295
    imptradr          0.259
    imsmetn.x         0.712
    imdfetn.x         0.947
    impcntr.x         0.770
    ppltrst.x         0.587
    pplfair.x         0.450
    pplhlp.x          0.334
    rw1               0.082
    prejudice         0.057
    trust             0.060

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]       [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r2   0.39265021  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r3   0.38307212  0.40012902  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r4   0.33274469  0.34756068  0.33908248  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r5   0.31195255  0.32584273  0.31789431  0.27612984  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r6   0.12362044  0.12912484  0.12597504  0.10942463  0.10258704  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r7   0.14254974  0.14889700  0.14526489  0.12618021  0.11829562  0.8212261  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r8   0.12857988  0.13430511  0.13102895  0.11381456  0.10670266  0.7407461  0.8541723  1.0000000  0.0000000  0.00000000  0.00000000
r9  -0.02760244 -0.02883148 -0.02812818 -0.02443275 -0.02290602 -0.1590171 -0.1833665 -0.1653966  1.0000000  0.00000000  0.00000000
r10 -0.02415858 -0.02523428 -0.02461873 -0.02138436 -0.02004812 -0.1391771 -0.1604885 -0.1447606  0.5138997  1.00000000  0.00000000
r11 -0.02081710 -0.02174401 -0.02121360 -0.01842659 -0.01727517 -0.1199269 -0.1382906 -0.1247381  0.4428200  0.38757086  1.00000000
r12  0.16013686  0.16726721  0.16318699  0.14174773  0.13289037  0.1255497  0.1447745  0.1305866 -0.0847051 -0.07413675 -0.06388256
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.03191197
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]         [,5]       [,6]       [,7]        [,8]        [,9]       [,10]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r2   0.43398116  1.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r3   0.37378780  0.38169021  1.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r4   0.31817832  0.31491086  0.39845225  1.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r5   0.28485653  0.31915145  0.32919603  0.30961142  1.000000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r6   0.13523775  0.17489826  0.13026455  0.13746501  0.061454443  1.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r7   0.16564957  0.19516316  0.13780591  0.14142697  0.083649985  0.8280285  1.0000000  0.00000000  0.00000000  0.00000000
r8   0.12869728  0.17096158  0.11897958  0.12245195  0.055463656  0.7491023  0.8619545  1.00000000  0.00000000  0.00000000
r9  -0.13503622 -0.12944516 -0.07845264 -0.04921870 -0.033187667 -0.1904293 -0.2082176 -0.17937539  1.00000000  0.00000000
r10 -0.09504068 -0.08903731 -0.05220299 -0.06031117 -0.045225328 -0.1425872 -0.1464965 -0.12325933  0.50255125  1.00000000
r11 -0.07709082 -0.06850790 -0.03238216 -0.01703781  0.002627169 -0.1059305 -0.1209370 -0.09915579  0.44177947  0.44660753
r12  0.11048757  0.13515998  0.06341765  0.12955621  0.126422715  0.1125988  0.1814387  0.18386800 -0.08346523 -0.06203462
         [,11] [,12]
r1   0.0000000     0
r2   0.0000000     0
r3   0.0000000     0
r4   0.0000000     0
r5   0.0000000     0
r6   0.0000000     0
r7   0.0000000     0
r8   0.0000000     0
r9   0.0000000     0
r10  0.0000000     0
r11  1.0000000     0
r12 -0.1038656     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03434241
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.025

# ================================================================================
> # -------------------Target  variable rw2 ----------------------------------------
> #
> # MODEL 1 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 124,726 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 92,474 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 32,252 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
29077 32320 31077 92474 
> addmargins(table(testdata$essround))

    4   Sum 
32252 32252 
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 56 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               92474
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               326.924     623.211
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.526
  Shift parameter                                            1.308
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             31819.824   20232.388
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.573

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.970
  Tucker-Lewis Index (TLI)                       0.983       0.949
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.027
  90 Percent confidence interval - lower         0.018       0.025
  90 Percent confidence interval - upper         0.021       0.029
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.025       0.025

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.726    0.592
    ipstrgvr          1.006    0.013   76.836    0.000    0.730    0.605
    ipbhprpr          1.139    0.015   76.279    0.000    0.827    0.658
    ipfruler          1.077    0.016   68.702    0.000    0.782    0.557
    imptradr          1.013    0.016   64.839    0.000    0.736    0.522

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.047    0.027    1.710    0.087    0.034    0.034

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.613    0.008  571.371    0.000    4.613    3.758
   .ipstrgvr          4.597    0.008  586.959    0.000    4.597    3.807
   .ipbhprpr          4.316    0.008  562.955    0.000    4.316    3.433
   .ipfruler          3.775    0.008  487.419    0.000    3.775    2.688
   .imptradr          4.158    0.009  487.156    0.000    4.158    2.948
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2|t1            2.427    0.018  138.109    0.000    2.427    2.427

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.979    0.009  111.711    0.000    0.979    0.650
   .ipstrgvr          0.925    0.008  117.411    0.000    0.925    0.634
   .ipbhprpr          0.897    0.008  112.300    0.000    0.897    0.567
   .ipfruler          1.360    0.013  106.887    0.000    1.360    0.690
   .imptradr          1.447    0.014  107.051    0.000    1.447    0.728
   .rw2               0.999                               0.999    0.999
    authoritarian     0.527    0.011   47.696    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.350
    ipstrgvr          0.366
    ipbhprpr          0.433
    ipfruler          0.310
    imptradr          0.272
    rw2               0.001

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5] [,6]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000    0
r2 0.35785173 1.00000000 0.00000000 0.00000000 0.00000000    0
r3 0.38922692 0.39790828 1.00000000 0.00000000 0.00000000    0
r4 0.32957413 0.33692499 0.36646539 1.00000000 0.00000000    0
r5 0.30881046 0.31569820 0.34337751 0.29075158 1.00000000    0
r6 0.02016667 0.02061647 0.02242405 0.01898735 0.01779112    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02534461
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
          [,1]       [,2]       [,3]       [,4]       [,5] [,6]
r1 1.000000000 0.00000000 0.00000000 0.00000000 0.00000000    0
r2 0.438635986 1.00000000 0.00000000 0.00000000 0.00000000    0
r3 0.376757860 0.37920963 1.00000000 0.00000000 0.00000000    0
r4 0.322434780 0.32018489 0.40063741 1.00000000 0.00000000    0
r5 0.288993600 0.32461637 0.33539269 0.31509581 1.00000000    0
r6 0.005219718 0.08481894 0.03311904 0.05134731 0.05410851    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02801756
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.004

# ========================================================================================
> #
> # MODEL 2 FOR rw2
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 124,726 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 92,474 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 32,252 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
29077 32320 31077 92474 
> addmargins(table(testdata$essround))

    4   Sum 
32252 32252 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 19 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               92474
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                13.007      28.191
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.001       0.000
  Scaling correction factor                                  0.462
  Shift parameter                                            0.022
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            741768.994  568146.034
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.306

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.008       0.012
  90 Percent confidence interval - lower         0.004       0.008
  90 Percent confidence interval - upper         0.012       0.016
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.022       0.022

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.851    0.851
    imdfetn.x         1.143    0.003  448.418    0.000    0.973    0.973
    impcntr.x         1.037    0.002  581.134    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    prejudice         0.304    0.021   14.341    0.000    0.259    0.259

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.938    0.008 -120.606    0.000   -0.938   -0.938
    imsmetn.x|t2      0.402    0.007   58.685    0.000    0.402    0.402
    imsmetn.x|t3      1.450    0.010  146.596    0.000    1.450    1.450
    imdfetn.x|t1     -1.212    0.009 -138.444    0.000   -1.212   -1.212
    imdfetn.x|t2      0.060    0.007    9.045    0.000    0.060    0.060
    imdfetn.x|t3      1.148    0.009  134.006    0.000    1.148    1.148
    impcntr.x|t1     -1.213    0.009 -138.906    0.000   -1.213   -1.213
    impcntr.x|t2      0.018    0.007    2.662    0.008    0.018    0.018
    impcntr.x|t3      1.102    0.008  131.790    0.000    1.102    1.102
    rw2|t1            2.427    0.018  138.109    0.000    2.427    2.427

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.276                               0.276    0.276
   .imdfetn.x         0.054                               0.054    0.054
   .impcntr.x         0.221                               0.221    0.221
   .rw2               0.933                               0.933    0.933
    prejudice         0.724    0.003  278.534    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.724
    imdfetn.x         0.946
    impcntr.x         0.779
    rw2               0.067

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw2.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw2.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8278732 1.0000000 0.0000000  0
3 0.7511554 0.8583835 1.0000000  0
4 0.2202725 0.2517166 0.2283904  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.02231227
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw2t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw2t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8353155 1.0000000 0.0000000  0
3 0.7558986 0.8668294 1.0000000  0
4 0.1091100 0.2018797 0.2683922  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.04073103
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw2s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
ecvi 
   0 

# =================================================================================
> #
> # MODEL 3 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 124,726 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 92,474 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 32,252 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
29077 32320 31077 92474 
> addmargins(table(testdata$essround))

    4   Sum 
32252 32252 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 61 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               92474
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               622.066     923.201
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.678
  Shift parameter                                            5.992
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            779775.608  461207.920
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.691

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.016       0.020
  90 Percent confidence interval - lower         0.015       0.019
  90 Percent confidence interval - upper         0.017       0.021
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.025       0.025

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.746    0.607
    ipstrgvr          1.021    0.014   74.742    0.000    0.761    0.630
    ipbhprpr          1.067    0.015   72.221    0.000    0.795    0.633
    ipfruler          1.031    0.016   65.259    0.000    0.769    0.547
    imptradr          0.967    0.016   61.249    0.000    0.721    0.511
  prejudice =~                                                          
    imsmetn.x         1.000                               0.851    0.851
    imdfetn.x         1.144    0.003  447.205    0.000    0.973    0.973
    impcntr.x         1.037    0.002  578.405    0.000    0.882    0.882

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian    -0.028    0.028   -1.005    0.315   -0.021   -0.021
    prejudice         0.309    0.022   13.821    0.000    0.263    0.263
  prejudice ~                                                           
    authoritarian     0.238    0.008   30.655    0.000    0.209    0.209

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.613    0.008  571.371    0.000    4.613    3.758
   .ipstrgvr          4.597    0.008  586.959    0.000    4.597    3.807
   .ipbhprpr          4.316    0.008  562.955    0.000    4.316    3.433
   .ipfruler          3.775    0.008  487.419    0.000    3.775    2.688
   .imptradr          4.158    0.009  487.156    0.000    4.158    2.948
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.938    0.008 -120.606    0.000   -0.938   -0.938
    imsmetn.x|t2      0.402    0.007   58.685    0.000    0.402    0.402
    imsmetn.x|t3      1.450    0.010  146.596    0.000    1.450    1.450
    imdfetn.x|t1     -1.212    0.009 -138.444    0.000   -1.212   -1.212
    imdfetn.x|t2      0.060    0.007    9.045    0.000    0.060    0.060
    imdfetn.x|t3      1.148    0.009  134.006    0.000    1.148    1.148
    impcntr.x|t1     -1.213    0.009 -138.906    0.000   -1.213   -1.213
    impcntr.x|t2      0.018    0.007    2.662    0.008    0.018    0.018
    impcntr.x|t3      1.102    0.008  131.790    0.000    1.102    1.102
    rw2|t1            2.427    0.018  138.109    0.000    2.427    2.427

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.951    0.009  102.529    0.000    0.951    0.631
   .ipstrgvr          0.879    0.008  106.877    0.000    0.879    0.603
   .ipbhprpr          0.948    0.009  106.453    0.000    0.948    0.600
   .ipfruler          1.381    0.014  101.991    0.000    1.381    0.700
   .imptradr          1.468    0.014  103.038    0.000    1.468    0.738
   .imsmetn.x         0.276                               0.276    0.276
   .imdfetn.x         0.053                               0.053    0.053
   .impcntr.x         0.221                               0.221    0.221
   .rw2               0.933                               0.933    0.933
    authoritarian     0.556    0.012   46.929    0.000    1.000    1.000
   .prejudice         0.692    0.003  225.087    0.000    0.956    0.956

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.369
    ipstrgvr          0.397
    ipbhprpr          0.400
    ipfruler          0.300
    imptradr          0.262
    imsmetn.x         0.724
    imdfetn.x         0.947
    impcntr.x         0.779
    rw2               0.067
    prejudice         0.044

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]     [,8] [,9]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.000000    0
r2 0.38284397 1.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.000000    0
r3 0.38430762 0.39872149 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.000000    0
r4 0.33253408 0.34500613 0.34632512 1.00000000 0.00000000 0.0000000 0.0000000 0.000000    0
r5 0.31065705 0.32230857 0.32354079 0.27995370 1.00000000 0.0000000 0.0000000 0.000000    0
r6 0.10794164 0.11199011 0.11241826 0.09727339 0.09087388 1.0000000 0.0000000 0.000000    0
r7 0.12344746 0.12807748 0.12856714 0.11124670 0.10392791 0.8277601 1.0000000 0.000000    0
r8 0.11196344 0.11616275 0.11660685 0.10089770 0.09425975 0.7507556 0.8586017 1.000000    0
r9 0.02066364 0.02143865 0.02152061 0.01862138 0.01739630 0.2201890 0.2518191 0.228393    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02486843
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
          [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.000000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.438635986 1.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.376757860 0.37920963 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.322434780 0.32018489 0.40063741 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.288993600 0.32461637 0.33539269 0.31509581 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.132661015 0.16480203 0.12212359 0.13406038 0.05577266 1.0000000 0.0000000 0.0000000    0
r7 0.159048964 0.18800835 0.12778719 0.13497556 0.07466487 0.8353155 1.0000000 0.0000000    0
r8 0.124859169 0.16294345 0.11104612 0.11443153 0.04835609 0.7558986 0.8668294 1.0000000    0
r9 0.005219718 0.08481894 0.03311904 0.05134731 0.05410851 0.1091100 0.2018797 0.2683922    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03316484
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.007

# ========================================================================================
> #
> # MODEL 4 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, essround <= 4, select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 124,726 cases overall 
> #   (=training + test sample) 
> traindata <-subset(sset1, essround <= 3)    # results in 92,474 cases in rounds 1 to 3.
> testdata  <-subset(sset1, essround == 4)    # results in 32,252 in round 4 
> addmargins(table(traindata$essround))

    1     2     3   Sum 
29077 32320 31077 92474 
> addmargins(table(testdata$essround))

    4   Sum 
32252 32252 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 87 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               92474
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              2350.905    2579.080
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.917
  Shift parameter                                           14.995
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            806382.861  486284.193
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.658

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.997       0.995
  Tucker-Lewis Index (TLI)                       0.996       0.993
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.023
  90 Percent confidence interval - lower         0.022       0.023
  90 Percent confidence interval - upper         0.023       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.032       0.032

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.753    0.613
    ipstrgvr          1.020    0.014   74.173    0.000    0.768    0.636
    ipbhprpr          1.047    0.015   71.435    0.000    0.788    0.627
    ipfruler          1.014    0.016   64.491    0.000    0.763    0.544
    imptradr          0.952    0.016   60.610    0.000    0.716    0.508
  prejudice =~                                                          
    imsmetn.x         1.000                               0.851    0.851
    imdfetn.x         1.143    0.003  447.734    0.000    0.973    0.973
    impcntr.x         1.036    0.002  576.730    0.000    0.882    0.882
  trust =~                                                              
    ppltrst.x         1.000                               1.788    0.765
    pplfair.x         0.842    0.012   70.103    0.000    1.505    0.680
    pplhlp.x          0.739    0.011   69.493    0.000    1.321    0.584

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian    -0.035    0.028   -1.238    0.216   -0.026   -0.026
    prejudice         0.320    0.023   13.799    0.000    0.273    0.273
    trust             0.018    0.010    1.676    0.094    0.031    0.031
  prejudice ~                                                           
    authoritarian     0.256    0.008   32.807    0.000    0.227    0.227
  trust ~                                                               
    prejudice        -0.519    0.013  -39.273    0.000   -0.247   -0.247

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.613    0.008  571.371    0.000    4.613    3.758
   .ipstrgvr          4.597    0.008  586.959    0.000    4.597    3.807
   .ipbhprpr          4.316    0.008  562.955    0.000    4.316    3.433
   .ipfruler          3.775    0.008  487.419    0.000    3.775    2.688
   .imptradr          4.158    0.009  487.156    0.000    4.158    2.948
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.841    0.012  391.759    0.000    4.841    2.072
   .pplfair.x         5.580    0.012  460.410    0.000    5.580    2.522
   .pplhlp.x          4.759    0.012  398.777    0.000    4.759    2.102
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.938    0.008 -120.606    0.000   -0.938   -0.938
    imsmetn.x|t2      0.402    0.007   58.685    0.000    0.402    0.402
    imsmetn.x|t3      1.450    0.010  146.596    0.000    1.450    1.450
    imdfetn.x|t1     -1.212    0.009 -138.444    0.000   -1.212   -1.212
    imdfetn.x|t2      0.060    0.007    9.045    0.000    0.060    0.060
    imdfetn.x|t3      1.148    0.009  134.006    0.000    1.148    1.148
    impcntr.x|t1     -1.213    0.009 -138.906    0.000   -1.213   -1.213
    impcntr.x|t2      0.018    0.007    2.662    0.008    0.018    0.018
    impcntr.x|t3      1.102    0.008  131.790    0.000    1.102    1.102
    rw2|t1            2.427    0.018  138.109    0.000    2.427    2.427

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.940    0.009  100.420    0.000    0.940    0.624
   .ipstrgvr          0.869    0.008  104.041    0.000    0.869    0.596
   .ipbhprpr          0.959    0.009  105.650    0.000    0.959    0.607
   .ipfruler          1.389    0.014  101.217    0.000    1.389    0.704
   .imptradr          1.475    0.014  102.375    0.000    1.475    0.742
   .imsmetn.x         0.276                               0.276    0.276
   .imdfetn.x         0.054                               0.054    0.054
   .impcntr.x         0.222                               0.222    0.222
   .ppltrst.x         2.261    0.043   52.855    0.000    2.261    0.414
   .pplfair.x         2.632    0.034   77.951    0.000    2.632    0.538
   .pplhlp.x          3.379    0.032  106.297    0.000    3.379    0.659
   .rw2               0.931                               0.931    0.931
    authoritarian     0.566    0.012   46.896    0.000    1.000    1.000
   .prejudice         0.687    0.003  216.450    0.000    0.949    0.949
   .trust             3.001    0.058   51.454    0.000    0.939    0.939

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.376
    ipstrgvr          0.404
    ipbhprpr          0.393
    ipfruler          0.296
    imptradr          0.258
    imsmetn.x         0.724
    imdfetn.x         0.946
    impcntr.x         0.778
    ppltrst.x         0.586
    pplfair.x         0.462
    pplhlp.x          0.341
    rw2               0.069
    prejudice         0.051
    trust             0.061

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]        [,9]       [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r2   0.38978877  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r3   0.38442551  0.39861477  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r4   0.33330456  0.34560693  0.34085159  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r5   0.31145332  0.32294915  0.31850556  0.27615066  1.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r6   0.11823789  0.12260208  0.12091515  0.10483584  0.09796286  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r7   0.13514235  0.14013050  0.13820239  0.11982422  0.11196861  0.8275661  1.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r8   0.12253364  0.12705640  0.12530818  0.10864468  0.10152200  0.7503546  0.8576328  1.0000000  0.00000000  0.00000000  0.00000000
r9  -0.02625858 -0.02722779 -0.02685315 -0.02328222 -0.02175585 -0.1607986 -0.1837880 -0.1666407  1.00000000  0.00000000  0.00000000
r10 -0.02333281 -0.02419403 -0.02386113 -0.02068808 -0.01933178 -0.1428822 -0.1633101 -0.1480733  0.52043894  1.00000000  0.00000000
r11 -0.02002200 -0.02076102 -0.02047536 -0.01775254 -0.01658870 -0.1226080 -0.1401372 -0.1270625  0.44659135  0.39683146  1.00000000
r12  0.02082228  0.02159084  0.02129376  0.01846212  0.01725175  0.2202874  0.2517819  0.2282908 -0.02636385 -0.02342635 -0.02010227
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.03159072
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
            [,1]        [,2]        [,3]        [,4]          [,5]       [,6]       [,7]       [,8]        [,9]      [,10]
r1   1.000000000  0.00000000  0.00000000  0.00000000  0.0000000000  0.0000000  0.0000000  0.0000000 0.000000000 0.00000000
r2   0.438635986  1.00000000  0.00000000  0.00000000  0.0000000000  0.0000000  0.0000000  0.0000000 0.000000000 0.00000000
r3   0.376757860  0.37920963  1.00000000  0.00000000  0.0000000000  0.0000000  0.0000000  0.0000000 0.000000000 0.00000000
r4   0.322434780  0.32018489  0.40063741  1.00000000  0.0000000000  0.0000000  0.0000000  0.0000000 0.000000000 0.00000000
r5   0.288993600  0.32461637  0.33539269  0.31509581  1.0000000000  0.0000000  0.0000000  0.0000000 0.000000000 0.00000000
r6   0.132661015  0.16480203  0.12212359  0.13406038  0.0557726638  1.0000000  0.0000000  0.0000000 0.000000000 0.00000000
r7   0.159048964  0.18800835  0.12778719  0.13497556  0.0746648711  0.8353155  1.0000000  0.0000000 0.000000000 0.00000000
r8   0.124859169  0.16294345  0.11104612  0.11443153  0.0483560924  0.7558986  0.8668294  1.0000000 0.000000000 0.00000000
r9  -0.132776769 -0.12114152 -0.07716904 -0.05060013 -0.0345943102 -0.1913089 -0.2028815 -0.1753558 1.000000000 0.00000000
r10 -0.093230237 -0.08708045 -0.05112625 -0.06146751 -0.0400508406 -0.1485206 -0.1441542 -0.1229583 0.503256927 1.00000000
r11 -0.077129712 -0.07288785 -0.02849930 -0.02428518 -0.0003234614 -0.1098307 -0.1211728 -0.0997247 0.442644308 0.45640857
r12  0.005219718  0.08481894  0.03311904  0.05134731  0.0541085120  0.1091100  0.2018797  0.2683922 0.008506519 0.07632216
          [,11] [,12]
r1   0.00000000     0
r2   0.00000000     0
r3   0.00000000     0
r4   0.00000000     0
r5   0.00000000     0
r6   0.00000000     0
r7   0.00000000     0
r8   0.00000000     0
r9   0.00000000     0
r10  0.00000000     0
r11  1.00000000     0
r12 -0.04934028     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03715624
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.026

# =====================================================================================

# Testing block 5: Temporal validation set design, structural equation models 
> # run sequentially # SRMR as criterion
> #
> # ------------------- SEM in LONGITUDINAL VALIDATION SET DESIGN ---------------------------------------
> #
> # -------------------Target  variable rw  ------------------------------------------------
> # PERIOD B 
> #
> # MODEL 1 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                         select = c(LNR, cntry, essround, 
+                                                  impsafe.x, ipstrgv.x, ipbhprp.x,  
+                                                  ipfrule.x, imptrad.x, 
+                                                  imsmetn.x, imdfetn.x, impcntr.x, 
+                                                  ppltrst.x, pplfair.x, pplhlp.x,
+                                                  rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 92,278 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 59,183 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,095 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29062 30121 59183 
> addmargins(table(testdata$essround))

    6   Sum 
33095 33095 
> #
> #
> # scale direction reversed for value items
> #
> library(car)
Loading required package: carData
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
This is lavaan 0.6-8
lavaan is FREE software! Please report any bugs.
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 55 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               59183
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               156.494     322.787
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.486
  Shift parameter                                            0.991
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             21487.828   14077.695
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.527

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.993       0.978
  Tucker-Lewis Index (TLI)                       0.989       0.963
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.017       0.024
  90 Percent confidence interval - lower         0.014       0.022
  90 Percent confidence interval - upper         0.019       0.027
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.023       0.023

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.758    0.607
    ipstrgvr          0.989    0.016   61.617    0.000    0.750    0.619
    ipbhprpr          1.034    0.018   58.921    0.000    0.784    0.632
    ipfruler          1.045    0.019   54.518    0.000    0.792    0.564
    imptradr          0.916    0.018   50.547    0.000    0.695    0.497

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.237    0.021   11.076    0.000    0.180    0.180

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.570    0.010  460.876    0.000    4.570    3.658
   .ipstrgvr          4.582    0.010  480.543    0.000    4.582    3.782
   .ipbhprpr          4.336    0.009  468.646    0.000    4.336    3.496
   .ipfruler          3.735    0.009  393.244    0.000    3.735    2.657
   .imptradr          4.176    0.010  403.181    0.000    4.176    2.985
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw|t1             1.858    0.014  129.539    0.000    1.858    1.858

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.985    0.011   90.966    0.000    0.985    0.631
   .ipstrgvr          0.905    0.010   94.030    0.000    0.905    0.616
   .ipbhprpr          0.923    0.011   86.019    0.000    0.923    0.600
   .ipfruler          1.348    0.016   82.276    0.000    1.348    0.682
   .imptradr          1.474    0.017   85.993    0.000    1.474    0.753
   .rw                0.968                               0.968    0.968
    authoritarian     0.575    0.015   39.084    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.369
    ipstrgvr          0.384
    ipbhprpr          0.400
    ipfruler          0.318
    imptradr          0.247
    rw                0.032

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3760036 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3839606 0.3916427 1.0000000 0.0000000 0.0000000    0
r4 0.3421958 0.3490423 0.3564288 1.0000000 0.0000000    0
r5 0.3016699 0.3077056 0.3142172 0.2800387 1.0000000    0
r6 0.1092364 0.1114220 0.1137799 0.1014036 0.0893945    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02320513
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4150857 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3639990 0.3267089 1.0000000 0.0000000 0.0000000    0
r4 0.2942613 0.2579960 0.3583714 1.0000000 0.0000000    0
r5 0.2727259 0.3004444 0.3151574 0.3145841 1.0000000    0
r6 0.1069713 0.1375626 0.1207406 0.1311432 0.1468591    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03362361
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.003

# ========================================================================================
> #
> # MODEL 2 FOR rw    
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 92,278 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 59,183 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,095 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29062 30121 59183 
> addmargins(table(testdata$essround)) 

    6   Sum 
33095 33095 
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               59183
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                14.851      45.895
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.001       0.000
  Scaling correction factor                                  0.324
  Shift parameter                                            0.068
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            570800.053  412372.305
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.384

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.010       0.019
  90 Percent confidence interval - lower         0.006       0.015
  90 Percent confidence interval - upper         0.016       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.018       0.018

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.855    0.855
    imdfetn.x         1.146    0.003  369.975    0.000    0.980    0.980
    impcntr.x         1.034    0.002  528.756    0.000    0.884    0.884

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    prejudice         0.221    0.017   13.406    0.000    0.189    0.189

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.824    0.009  -89.844    0.000   -0.824   -0.824
    imsmetn.x|t2      0.493    0.008   58.041    0.000    0.493    0.493
    imsmetn.x|t3      1.502    0.012  120.698    0.000    1.502    1.502
    imdfetn.x|t1     -1.110    0.010 -109.574    0.000   -1.110   -1.110
    imdfetn.x|t2      0.172    0.008   21.078    0.000    0.172    0.172
    imdfetn.x|t3      1.244    0.011  117.290    0.000    1.244    1.244
    impcntr.x|t1     -1.145    0.010 -110.792    0.000   -1.145   -1.145
    impcntr.x|t2      0.085    0.008   10.422    0.000    0.085    0.085
    impcntr.x|t3      1.130    0.010  110.471    0.000    1.130    1.130
    rw|t1             1.858    0.014  129.539    0.000    1.858    1.858

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.269                               0.269    0.269
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.218                               0.218    0.218
   .rw                0.964                               0.964    0.964
    prejudice         0.731    0.003  232.141    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.731
    imdfetn.x         0.960
    impcntr.x         0.782
    rw                0.036

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8377913 1.0000000 0.0000000  0
3 0.7559701 0.8662415 1.0000000  0
4 0.1618236 0.1854284 0.1673189  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.01773829
> #
> # same model for testdata to get its observed covariance matrix
> #
> rwt.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- as.data.frame(rwt.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1       X2        X3 X4
1 1.0000000 0.000000 0.0000000  0
2 0.8505239 1.000000 0.0000000  0
3 0.7634508 0.865325 1.0000000  0
4 0.1975407 0.256625 0.2145123  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.0296493
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rws.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
ecvi 
   0 
    
=================================================================================
> #
> # MODEL 3 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 92,278 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 59,183 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,095 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29062 30121 59183 
> addmargins(table(testdata$essround))

    6   Sum 
33095 33095 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 65 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               59183
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               327.661     496.872
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.668
  Shift parameter                                            6.405
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            597179.948  355290.705
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.681

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.014       0.018
  90 Percent confidence interval - lower         0.013       0.017
  90 Percent confidence interval - upper         0.016       0.019
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.022       0.022

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.775    0.621
    ipstrgvr          1.000    0.017   59.635    0.000    0.775    0.640
    ipbhprpr          0.994    0.018   55.307    0.000    0.771    0.622
    ipfruler          1.006    0.019   51.624    0.000    0.780    0.555
    imptradr          0.862    0.018   47.509    0.000    0.668    0.478
  prejudice =~                                                          
    imsmetn.x         1.000                               0.855    0.855
    imdfetn.x         1.147    0.003  370.927    0.000    0.980    0.980
    impcntr.x         1.034    0.002  527.059    0.000    0.884    0.884

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.185    0.023    8.158    0.000    0.144    0.144
    prejudice         0.183    0.018    9.944    0.000    0.156    0.156
  prejudice ~                                                           
    authoritarian     0.253    0.009   27.771    0.000    0.230    0.230

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.570    0.010  460.876    0.000    4.570    3.658
   .ipstrgvr          4.582    0.010  480.543    0.000    4.582    3.782
   .ipbhprpr          4.336    0.009  468.646    0.000    4.336    3.496
   .ipfruler          3.735    0.009  393.244    0.000    3.735    2.657
   .imptradr          4.176    0.010  403.181    0.000    4.176    2.985
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.824    0.009  -89.844    0.000   -0.824   -0.824
    imsmetn.x|t2      0.493    0.008   58.041    0.000    0.493    0.493
    imsmetn.x|t3      1.502    0.012  120.698    0.000    1.502    1.502
    imdfetn.x|t1     -1.110    0.010 -109.574    0.000   -1.110   -1.110
    imdfetn.x|t2      0.172    0.008   21.078    0.000    0.172    0.172
    imdfetn.x|t3      1.244    0.011  117.290    0.000    1.244    1.244
    impcntr.x|t1     -1.145    0.010 -110.792    0.000   -1.145   -1.145
    impcntr.x|t2      0.085    0.008   10.422    0.000    0.085    0.085
    impcntr.x|t3      1.130    0.010  110.471    0.000    1.130    1.130
    rw|t1             1.858    0.014  129.539    0.000    1.858    1.858

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.959    0.012   81.308    0.000    0.959    0.615
   .ipstrgvr          0.867    0.010   83.500    0.000    0.867    0.591
   .ipbhprpr          0.944    0.012   78.315    0.000    0.944    0.614
   .ipfruler          1.367    0.017   79.517    0.000    1.367    0.692
   .imptradr          1.511    0.018   82.748    0.000    1.511    0.772
   .imsmetn.x         0.269                               0.269    0.269
   .imdfetn.x         0.039                               0.039    0.039
   .impcntr.x         0.219                               0.219    0.219
   .rw                0.945                               0.945    0.945
    authoritarian     0.601    0.016   38.034    0.000    1.000    1.000
   .prejudice         0.692    0.004  180.793    0.000    0.947    0.947

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.385
    ipstrgvr          0.409
    ipbhprpr          0.386
    ipfruler          0.308
    imptradr          0.228
    imsmetn.x         0.731
    imdfetn.x         0.961
    impcntr.x         0.781
    rw                0.055
    prejudice         0.053

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.3970761 1.0000000 0.0000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3857232 0.3976398 1.0000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.3444742 0.3551164 0.3449632 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.2964242 0.3055820 0.2968450 0.26510059 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1219236 0.1256903 0.1220967 0.10903972 0.09383000 1.0000000 0.0000000 0.0000000    0
r7 0.1397990 0.1441179 0.1399974 0.12502617 0.10758653 0.8379305 1.0000000 0.0000000    0
r8 0.1260480 0.1299421 0.1262269 0.11272826 0.09700403 0.7555093 0.8662755 1.0000000    0
r9 0.1114341 0.1148768 0.1115923 0.09965867 0.08575749 0.1617895 0.1855096 0.1672624    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02225764
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]       [,4]      [,5]      [,6]     [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000 0.0000000    0
r2 0.4150857 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000 0.0000000    0
r3 0.3639990 0.3267089 1.0000000 0.00000000 0.0000000 0.0000000 0.000000 0.0000000    0
r4 0.2942613 0.2579960 0.3583714 1.00000000 0.0000000 0.0000000 0.000000 0.0000000    0
r5 0.2727259 0.3004444 0.3151574 0.31458410 1.0000000 0.0000000 0.000000 0.0000000    0
r6 0.1390851 0.1230341 0.1180364 0.09147768 0.1023995 1.0000000 0.000000 0.0000000    0
r7 0.1496043 0.1443847 0.1184066 0.08553829 0.1198126 0.8505239 1.000000 0.0000000    0
r8 0.1359264 0.1364920 0.1016768 0.07089423 0.1003204 0.7634508 0.865325 1.0000000    0
r9 0.1069713 0.1375626 0.1207406 0.13114319 0.1468591 0.1975407 0.256625 0.2145123    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03016322
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.005 

# ========================================================================================
> #
> # MODEL 4 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 92,278 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 59,183 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,095 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29062 30121 59183 
> addmargins(table(testdata$essround))

    6   Sum 
33095 33095 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 85 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               59183
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              1310.635    1500.137
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.882
  Shift parameter                                           14.561
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            614947.630  375077.967
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.640

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.021       0.022
  90 Percent confidence interval - lower         0.020       0.021
  90 Percent confidence interval - upper         0.022       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.782    0.626
    ipstrgvr          0.999    0.017   59.236    0.000    0.781    0.645
    ipbhprpr          0.981    0.018   54.790    0.000    0.767    0.618
    ipfruler          0.990    0.019   51.034    0.000    0.774    0.551
    imptradr          0.846    0.018   46.952    0.000    0.662    0.473
  prejudice =~                                                          
    imsmetn.x         1.000                               0.855    0.855
    imdfetn.x         1.146    0.003  370.767    0.000    0.980    0.980
    impcntr.x         1.033    0.002  525.002    0.000    0.883    0.883
  trust =~                                                              
    ppltrst.x         1.000                               1.737    0.763
    pplfair.x         0.831    0.015   55.135    0.000    1.443    0.681
    pplhlp.x          0.711    0.013   54.488    0.000    1.236    0.568

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.181    0.023    7.980    0.000    0.142    0.142
    prejudice         0.170    0.019    8.750    0.000    0.145    0.145
    trust            -0.022    0.009   -2.565    0.010   -0.038   -0.038
  prejudice ~                                                           
    authoritarian     0.266    0.009   29.016    0.000    0.243    0.243
  trust ~                                                               
    prejudice        -0.502    0.016  -32.042    0.000   -0.247   -0.247

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.570    0.010  460.876    0.000    4.570    3.658
   .ipstrgvr          4.582    0.010  480.543    0.000    4.582    3.782
   .ipbhprpr          4.336    0.009  468.646    0.000    4.336    3.496
   .ipfruler          3.735    0.009  393.244    0.000    3.735    2.657
   .imptradr          4.176    0.010  403.181    0.000    4.176    2.985
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.959    0.015  337.810    0.000    4.959    2.179
   .pplfair.x         5.716    0.014  398.433    0.000    5.716    2.697
   .pplhlp.x          4.905    0.014  350.006    0.000    4.905    2.255
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.824    0.009  -89.844    0.000   -0.824   -0.824
    imsmetn.x|t2      0.493    0.008   58.041    0.000    0.493    0.493
    imsmetn.x|t3      1.502    0.012  120.698    0.000    1.502    1.502
    imdfetn.x|t1     -1.110    0.010 -109.574    0.000   -1.110   -1.110
    imdfetn.x|t2      0.172    0.008   21.078    0.000    0.172    0.172
    imdfetn.x|t3      1.244    0.011  117.290    0.000    1.244    1.244
    impcntr.x|t1     -1.145    0.010 -110.792    0.000   -1.145   -1.145
    impcntr.x|t2      0.085    0.008   10.422    0.000    0.085    0.085
    impcntr.x|t3      1.130    0.010  110.471    0.000    1.130    1.130
    rw|t1             1.858    0.014  129.539    0.000    1.858    1.858

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.949    0.012   79.464    0.000    0.949    0.608
   .ipstrgvr          0.858    0.011   81.204    0.000    0.858    0.584
   .ipbhprpr          0.950    0.012   77.391    0.000    0.950    0.618
   .ipfruler          1.376    0.017   79.089    0.000    1.376    0.697
   .imptradr          1.519    0.018   82.356    0.000    1.519    0.776
   .imsmetn.x         0.269                               0.269    0.269
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.220                               0.220    0.220
   .ppltrst.x         2.164    0.051   42.460    0.000    2.164    0.418
   .pplfair.x         2.409    0.039   62.282    0.000    2.409    0.537
   .pplhlp.x          3.205    0.038   84.587    0.000    3.205    0.677
   .rw                0.944                               0.944    0.944
    authoritarian     0.611    0.016   37.985    0.000    1.000    1.000
   .prejudice         0.688    0.004  174.832    0.000    0.941    0.941
   .trust             2.832    0.068   41.423    0.000    0.939    0.939

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.392
    ipstrgvr          0.416
    ipbhprpr          0.382
    ipfruler          0.303
    imptradr          0.224
    imsmetn.x         0.731
    imdfetn.x         0.960
    impcntr.x         0.780
    ppltrst.x         0.582
    pplfair.x         0.463
    pplhlp.x          0.323
    rw                0.056
    prejudice         0.059
    trust             0.061

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]        [,9]       [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r2   0.40347692  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r3   0.38708984  0.39865039  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r4   0.34479814  0.35509563  0.34067355  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r5   0.29600769  0.30484804  0.29246674  0.26051314  1.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r6   0.13024069  0.13413036  0.12868270  0.11462341  0.09840369  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r7   0.14926464  0.15372247  0.14747909  0.13136618  0.11277729  0.8378438  1.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r8   0.13454643  0.13856470  0.13293694  0.11841285  0.10165691  0.7552284  0.8655429  1.0000000  0.00000000  0.00000000  0.00000000
r9  -0.02874419 -0.02960265 -0.02840035 -0.02529745 -0.02171775 -0.1613453 -0.1849126 -0.1666793  1.00000000  0.00000000  0.00000000
r10 -0.02564501 -0.02641090 -0.02533823 -0.02256989 -0.01937615 -0.1439491 -0.1649754 -0.1487080  0.51951333  1.00000000  0.00000000
r11 -0.02139683 -0.02203585 -0.02114087 -0.01883111 -0.01616643 -0.1201034 -0.1376467 -0.1240741  0.43345424  0.38671936  1.00000000
r12  0.11230447  0.11565847  0.11096104  0.09883793  0.08485193  0.1618503  0.1854914  0.1672010 -0.06321403 -0.05639832 -0.04705575
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02878384
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]         [,5]       [,6]       [,7]        [,8]       [,9]       [,10]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000
r2   0.41508565  1.00000000  0.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000
r3   0.36399902  0.32670891  1.00000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000
r4   0.29426131  0.25799598  0.35837143  1.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000
r5   0.27272585  0.30044441  0.31515743  0.31458410  1.000000000  0.0000000  0.0000000  0.00000000  0.0000000  0.00000000
r6   0.13908506  0.12303412  0.11803638  0.09147768  0.102399529  1.0000000  0.0000000  0.00000000  0.0000000  0.00000000
r7   0.14960429  0.14438468  0.11840657  0.08553829  0.119812565  0.8505239  1.0000000  0.00000000  0.0000000  0.00000000
r8   0.13592641  0.13649202  0.10167684  0.07089423  0.100320413  0.7634508  0.8653250  1.00000000  0.0000000  0.00000000
r9  -0.14462492 -0.11932459 -0.07064283 -0.03976027 -0.049505899 -0.2028275 -0.2230869 -0.19115955  1.0000000  0.00000000
r10 -0.10046393 -0.08441450 -0.04416086 -0.06459681 -0.057193506 -0.1529582 -0.1524371 -0.13109270  0.4929867  1.00000000
r11 -0.06133818 -0.06561724 -0.01820106 -0.01951963  0.002714257 -0.1000202 -0.1048346 -0.08451782  0.4224722  0.45279923
r12  0.10697128  0.13756263  0.12074059  0.13114319  0.146859133  0.1975407  0.2566250  0.21451227 -0.1107536 -0.04200744
          [,11] [,12]
r1   0.00000000     0
r2   0.00000000     0
r3   0.00000000     0
r4   0.00000000     0
r5   0.00000000     0
r6   0.00000000     0
r7   0.00000000     0
r8   0.00000000     0
r9   0.00000000     0
r10  0.00000000     0
r11  1.00000000     0
r12 -0.03392545     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03570574
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.023


> # -------------------Target  variable rw1 ----------------------------------------
> #
> # MODEL 1 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,015 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 60,307 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,708 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29632 30675 60307 
> addmargins(table(testdata$essround))

    6   Sum 
33708 33708 
> # scale direction reversed for value items
> #
> library(car)
Loading required package: carData
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
This is lavaan 0.6-8
lavaan is FREE software! Please report any bugs.
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 56 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               60307
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               162.480     338.958
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.481
  Shift parameter                                            0.987
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             21863.722   14299.102
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.530

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.993       0.977
  Tucker-Lewis Index (TLI)                       0.988       0.962
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.017       0.025
  90 Percent confidence interval - lower         0.015       0.022
  90 Percent confidence interval - upper         0.019       0.027
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.024       0.024

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.757    0.607
    ipstrgvr          0.991    0.016   62.248    0.000    0.750    0.619
    ipbhprpr          1.034    0.017   59.365    0.000    0.782    0.631
    ipfruler          1.045    0.019   54.985    0.000    0.791    0.563
    imptradr          0.919    0.018   51.014    0.000    0.696    0.498

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.273    0.025   11.105    0.000    0.206    0.206

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.572    0.010  465.958    0.000    4.572    3.665
   .ipstrgvr          4.581    0.009  484.927    0.000    4.581    3.781
   .ipbhprpr          4.338    0.009  473.125    0.000    4.338    3.499
   .ipfruler          3.735    0.009  397.139    0.000    3.735    2.659
   .imptradr          4.177    0.010  407.065    0.000    4.177    2.987
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1|t1            1.977    0.016  120.008    0.000    1.977    1.977

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.983    0.011   91.835    0.000    0.983    0.632
   .ipstrgvr          0.905    0.010   94.835    0.000    0.905    0.617
   .ipbhprpr          0.925    0.011   86.873    0.000    0.925    0.602
   .ipfruler          1.346    0.016   83.019    0.000    1.346    0.682
   .imptradr          1.471    0.017   86.873    0.000    1.471    0.752
   .rw1               0.957                               0.957    0.957
    authoritarian     0.573    0.015   39.460    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.368
    ipstrgvr          0.383
    ipbhprpr          0.398
    ipfruler          0.318
    imptradr          0.248
    rw1               0.043

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3758268 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3830894 0.3908137 1.0000000 0.0000000 0.0000000    0
r4 0.3420154 0.3489116 0.3556540 1.0000000 0.0000000    0
r5 0.3019619 0.3080504 0.3140033 0.2803365 1.0000000    0
r6 0.1252582 0.1277838 0.1302531 0.1162876 0.1026692    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02423381
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4148256 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3643139 0.3270454 1.0000000 0.0000000 0.0000000    0
r4 0.2938462 0.2604470 0.3591422 1.0000000 0.0000000    0
r5 0.2738979 0.3017011 0.3151656 0.3164571 1.0000000    0
r6 0.1261850 0.1657245 0.1381479 0.1587696 0.2058653    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03915113
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.003


# ========================================================================================
> #
> # MODEL 2 FOR rw1
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,015 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 60,307 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,708 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29632 30675 60307 
> addmargins(table(testdata$essround))

    6   Sum 
33708 33708 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               60307
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 5.408      16.844
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.067       0.000
  Scaling correction factor                                  0.322
  Shift parameter                                            0.069
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            574147.671  414692.357
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.385

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.005       0.011
  90 Percent confidence interval - lower         0.000       0.007
  90 Percent confidence interval - upper         0.011       0.016
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.012       0.012

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.855    0.855
    imdfetn.x         1.145    0.003  372.971    0.000    0.979    0.979
    impcntr.x         1.033    0.002  530.359    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    prejudice         0.185    0.018   10.064    0.000    0.158    0.158

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.827    0.009  -90.866    0.000   -0.827   -0.827
    imsmetn.x|t2      0.491    0.008   58.316    0.000    0.491    0.491
    imsmetn.x|t3      1.500    0.012  121.528    0.000    1.500    1.500
    imdfetn.x|t1     -1.112    0.010 -110.603    0.000   -1.112   -1.112
    imdfetn.x|t2      0.169    0.008   20.957    0.000    0.169    0.169
    imdfetn.x|t3      1.242    0.011  118.010    0.000    1.242    1.242
    impcntr.x|t1     -1.147    0.010 -111.873    0.000   -1.147   -1.147
    impcntr.x|t2      0.085    0.008   10.515    0.000    0.085    0.085
    impcntr.x|t3      1.131    0.010  111.428    0.000    1.131    1.131
    rw1|t1            1.977    0.016  120.008    0.000    1.977    1.977

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.269                               0.269    0.269
   .imdfetn.x         0.041                               0.041    0.041
   .impcntr.x         0.220                               0.220    0.220
   .rw1               0.975                               0.975    0.975
    prejudice         0.731    0.003  233.988    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.731
    imdfetn.x         0.959
    impcntr.x         0.780
    rw1               0.025

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw1.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw1.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8374511 1.0000000 0.0000000  0
3 0.7553630 0.8650987 1.0000000  0
4 0.1351388 0.1547711 0.1396002  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.01186841
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw1t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw1t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8506641 1.0000000 0.0000000  0
3 0.7635930 0.8648209 1.0000000  0
4 0.1775491 0.2216354 0.1680503  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02705787
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw1s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
ecvi 
   0


=================================================================================
> #
> # MODEL 3 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,015 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 60,307 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,708 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29632 30675 60307 
> addmargins(table(testdata$essround))

    6   Sum 
33708 33708 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 66 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               60307
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               333.488     505.263
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.669
  Shift parameter                                            6.441
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            600940.168  357565.547
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.681

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.014       0.018
  90 Percent confidence interval - lower         0.013       0.017
  90 Percent confidence interval - upper         0.016       0.019
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.022       0.022

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.775    0.621
    ipstrgvr          1.001    0.017   60.306    0.000    0.775    0.640
    ipbhprpr          0.993    0.018   55.813    0.000    0.769    0.620
    ipfruler          1.006    0.019   52.118    0.000    0.779    0.555
    imptradr          0.862    0.018   48.004    0.000    0.668    0.478
  prejudice =~                                                          
    imsmetn.x         1.000                               0.855    0.855
    imdfetn.x         1.146    0.003  374.057    0.000    0.980    0.980
    impcntr.x         1.033    0.002  529.151    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.231    0.026    8.835    0.000    0.179    0.179
    prejudice         0.137    0.021    6.623    0.000    0.117    0.117
  prejudice ~                                                           
    authoritarian     0.252    0.009   27.915    0.000    0.229    0.229

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.572    0.010  465.958    0.000    4.572    3.665
   .ipstrgvr          4.581    0.009  484.927    0.000    4.581    3.781
   .ipbhprpr          4.338    0.009  473.125    0.000    4.338    3.499
   .ipfruler          3.735    0.009  397.139    0.000    3.735    2.659
   .imptradr          4.177    0.010  407.065    0.000    4.177    2.987
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.827    0.009  -90.866    0.000   -0.827   -0.827
    imsmetn.x|t2      0.491    0.008   58.316    0.000    0.491    0.491
    imsmetn.x|t3      1.500    0.012  121.528    0.000    1.500    1.500
    imdfetn.x|t1     -1.112    0.010 -110.603    0.000   -1.112   -1.112
    imdfetn.x|t2      0.169    0.008   20.957    0.000    0.169    0.169
    imdfetn.x|t3      1.242    0.011  118.010    0.000    1.242    1.242
    impcntr.x|t1     -1.147    0.010 -111.873    0.000   -1.147   -1.147
    impcntr.x|t2      0.085    0.008   10.515    0.000    0.085    0.085
    impcntr.x|t3      1.131    0.010  111.428    0.000    1.131    1.131
    rw1|t1            1.977    0.016  120.008    0.000    1.977    1.977

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.956    0.012   82.098    0.000    0.956    0.614
   .ipstrgvr          0.867    0.010   84.298    0.000    0.867    0.591
   .ipbhprpr          0.946    0.012   79.228    0.000    0.946    0.615
   .ipfruler          1.366    0.017   80.268    0.000    1.366    0.692
   .imptradr          1.509    0.018   83.546    0.000    1.509    0.772
   .imsmetn.x         0.269                               0.269    0.269
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.220                               0.220    0.220
   .rw1               0.945                               0.945    0.945
    authoritarian     0.600    0.016   38.460    0.000    1.000    1.000
   .prejudice         0.693    0.004  182.564    0.000    0.948    0.948

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.386
    ipstrgvr          0.409
    ipbhprpr          0.385
    ipfruler          0.308
    imptradr          0.228
    imsmetn.x         0.731
    imdfetn.x         0.960
    impcntr.x         0.780
    rw1               0.055
    prejudice         0.052

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]       [,5]      [,6]      [,7]     [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r2 0.3973166 1.0000000 0.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r3 0.3851952 0.3968499 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r4 0.3444413 0.3548630 0.3440368 1.0000000 0.00000000 0.0000000 0.0000000 0.000000    0
r5 0.2967042 0.3056815 0.2963557 0.2650012 1.00000000 0.0000000 0.0000000 0.000000    0
r6 0.1214082 0.1250816 0.1212656 0.1084356 0.09340721 1.0000000 0.0000000 0.000000    0
r7 0.1391282 0.1433378 0.1389648 0.1242623 0.10704041 0.8375779 1.0000000 0.000000    0
r8 0.1254019 0.1291961 0.1252546 0.1120026 0.09647984 0.7549427 0.8651300 1.000000    0
r9 0.1278772 0.1317463 0.1277270 0.1142134 0.09838423 0.1351135 0.1548339 0.139558    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02208296
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.4148256 1.0000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3643139 0.3270454 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.2938462 0.2604470 0.35914221 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.2738979 0.3017011 0.31516559 0.31645714 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1380707 0.1201696 0.11597314 0.08990127 0.10071359 1.0000000 0.0000000 0.0000000    0
r7 0.1489822 0.1413146 0.11705088 0.08477343 0.11871275 0.8506641 1.0000000 0.0000000    0
r8 0.1351822 0.1340597 0.09963022 0.06970697 0.09929733 0.7635930 0.8648209 1.0000000    0
r9 0.1261850 0.1657245 0.13814787 0.15876963 0.20586530 0.1775491 0.2216354 0.1680503    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03284858
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.005

========================================================================================
> #
> # MODEL 4 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,015 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 60,307 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 33,708 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
29632 30675 60307 
> addmargins(table(testdata$essround))

    6   Sum 
33708 33708 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 86 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               60307
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              1323.602    1512.817
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.883
  Shift parameter                                           14.582
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            618984.197  377852.584
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.638

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.021       0.022
  90 Percent confidence interval - lower         0.020       0.021
  90 Percent confidence interval - upper         0.022       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.781    0.626
    ipstrgvr          1.000    0.017   59.909    0.000    0.781    0.644
    ipbhprpr          0.980    0.018   55.291    0.000    0.765    0.617
    ipfruler          0.990    0.019   51.527    0.000    0.773    0.551
    imptradr          0.847    0.018   47.447    0.000    0.661    0.473
  prejudice =~                                                          
    imsmetn.x         1.000                               0.855    0.855
    imdfetn.x         1.145    0.003  373.906    0.000    0.979    0.979
    impcntr.x         1.032    0.002  527.048    0.000    0.883    0.883
  trust =~                                                              
    ppltrst.x         1.000                               1.740    0.764
    pplfair.x         0.831    0.015   55.724    0.000    1.445    0.681
    pplhlp.x          0.708    0.013   55.049    0.000    1.232    0.566

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.228    0.026    8.696    0.000    0.178    0.178
    prejudice         0.112    0.022    5.158    0.000    0.096    0.096
    trust            -0.044    0.009   -4.695    0.000   -0.076   -0.076
  prejudice ~                                                           
    authoritarian     0.265    0.009   29.175    0.000    0.242    0.242
  trust ~                                                               
    prejudice        -0.501    0.016  -32.202    0.000   -0.246   -0.246

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.572    0.010  465.958    0.000    4.572    3.665
   .ipstrgvr          4.581    0.009  484.927    0.000    4.581    3.781
   .ipbhprpr          4.338    0.009  473.125    0.000    4.338    3.499
   .ipfruler          3.735    0.009  397.139    0.000    3.735    2.659
   .imptradr          4.177    0.010  407.065    0.000    4.177    2.987
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.957    0.015  340.516    0.000    4.957    2.176
   .pplfair.x         5.713    0.014  401.444    0.000    5.713    2.693
   .pplhlp.x          4.906    0.014  352.836    0.000    4.906    2.254
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.827    0.009  -90.866    0.000   -0.827   -0.827
    imsmetn.x|t2      0.491    0.008   58.316    0.000    0.491    0.491
    imsmetn.x|t3      1.500    0.012  121.528    0.000    1.500    1.500
    imdfetn.x|t1     -1.112    0.010 -110.603    0.000   -1.112   -1.112
    imdfetn.x|t2      0.169    0.008   20.957    0.000    0.169    0.169
    imdfetn.x|t3      1.242    0.011  118.010    0.000    1.242    1.242
    impcntr.x|t1     -1.147    0.010 -111.873    0.000   -1.147   -1.147
    impcntr.x|t2      0.085    0.008   10.515    0.000    0.085    0.085
    impcntr.x|t3      1.131    0.010  111.428    0.000    1.131    1.131
    rw1|t1            1.977    0.016  120.008    0.000    1.977    1.977

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.946    0.012   80.214    0.000    0.946    0.608
   .ipstrgvr          0.858    0.010   82.022    0.000    0.858    0.585
   .ipbhprpr          0.951    0.012   78.311    0.000    0.951    0.619
   .ipfruler          1.375    0.017   79.854    0.000    1.375    0.697
   .imptradr          1.518    0.018   83.144    0.000    1.518    0.776
   .imsmetn.x         0.269                               0.269    0.269
   .imdfetn.x         0.041                               0.041    0.041
   .impcntr.x         0.221                               0.221    0.221
   .ppltrst.x         2.161    0.050   42.826    0.000    2.161    0.417
   .pplfair.x         2.412    0.038   62.807    0.000    2.412    0.536
   .pplhlp.x          3.218    0.038   85.601    0.000    3.218    0.679
   .rw1               0.940                               0.940    0.940
    authoritarian     0.610    0.016   38.412    0.000    1.000    1.000
   .prejudice         0.688    0.004  176.647    0.000    0.941    0.941
   .trust             2.843    0.068   41.889    0.000    0.939    0.939

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.392
    ipstrgvr          0.415
    ipbhprpr          0.381
    ipfruler          0.303
    imptradr          0.224
    imsmetn.x         0.731
    imdfetn.x         0.959
    impcntr.x         0.779
    ppltrst.x         0.583
    pplfair.x         0.464
    pplhlp.x          0.321
    rw1               0.060
    prejudice         0.059
    trust             0.061

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]        [,9]       [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r2   0.40363434  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r3   0.38659857  0.39783416  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r4   0.34479621  0.35481691  0.33984152  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r5   0.29628335  0.30489414  0.29202579  0.26044945  1.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r6   0.12969210  0.13346130  0.12782844  0.11400653  0.09796580  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r7   0.14855308  0.15287043  0.14641839  0.13058637  0.11221286  0.8374846  1.0000000  0.0000000  0.00000000  0.00000000  0.0000000
r8   0.13386058  0.13775093  0.13193702  0.11767086  0.10111456  0.7546540  0.8644025  1.0000000  0.00000000  0.00000000  0.0000000
r9  -0.02853791 -0.02936730 -0.02812782 -0.02508640 -0.02155674 -0.1608856 -0.1842831 -0.1660567  1.00000000  0.00000000  0.0000000
r10 -0.02545124 -0.02619092 -0.02508551 -0.02237305 -0.01922516 -0.1434842 -0.1643510 -0.1480960  0.52030682  1.00000000  0.0000000
r11 -0.02115504 -0.02176986 -0.02085104 -0.01859645 -0.01597993 -0.1192639 -0.1366083 -0.1230972  0.43247844  0.38570144  1.0000000
r12  0.12888063  0.13262625  0.12702863  0.11329320  0.09735284  0.1351629  0.1548195  0.1395072 -0.08449498 -0.07535597 -0.0626358
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02860571
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]          [,5]        [,6]       [,7]        [,8]       [,9]       [,10]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.0000000000  0.00000000  0.0000000  0.00000000  0.0000000  0.00000000
r2   0.41482560  1.00000000  0.00000000  0.00000000  0.0000000000  0.00000000  0.0000000  0.00000000  0.0000000  0.00000000
r3   0.36431385  0.32704544  1.00000000  0.00000000  0.0000000000  0.00000000  0.0000000  0.00000000  0.0000000  0.00000000
r4   0.29384622  0.26044704  0.35914221  1.00000000  0.0000000000  0.00000000  0.0000000  0.00000000  0.0000000  0.00000000
r5   0.27389785  0.30170115  0.31516559  0.31645714  1.0000000000  0.00000000  0.0000000  0.00000000  0.0000000  0.00000000
r6   0.13807066  0.12016965  0.11597314  0.08990127  0.1007135901  1.00000000  0.0000000  0.00000000  0.0000000  0.00000000
r7   0.14898221  0.14131457  0.11705088  0.08477343  0.1187127519  0.85066408  1.0000000  0.00000000  0.0000000  0.00000000
r8   0.13518224  0.13405973  0.09963022  0.06970697  0.0992973254  0.76359304  0.8648209  1.00000000  0.0000000  0.00000000
r9  -0.14496950 -0.12100398 -0.07312013 -0.04129645 -0.0515453170 -0.20181320 -0.2226756 -0.19166582  1.0000000  0.00000000
r10 -0.10002758 -0.08657281 -0.04500159 -0.06579161 -0.0585816560 -0.15095046 -0.1507201 -0.13066359  0.4942916  1.00000000
r11 -0.06023323 -0.06615634 -0.02032189 -0.02211489  0.0003378436 -0.09803705 -0.1025170 -0.08060076  0.4203227  0.45175621
r12  0.12618498  0.16572452  0.13814787  0.15876963  0.2058652997  0.17754914  0.2216354  0.16805034 -0.1172433 -0.05275433
          [,11] [,12]
r1   0.00000000     0
r2   0.00000000     0
r3   0.00000000     0
r4   0.00000000     0
r5   0.00000000     0
r6   0.00000000     0
r7   0.00000000     0
r8   0.00000000     0
r9   0.00000000     0
r10  0.00000000     0
r11  1.00000000     0
r12 -0.03728588     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03733133
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.023 
#
================================================================================
> # -------------------Target  variable rw2 ----------------------------------------
> #
> # MODEL 1 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 102,694 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 65,886 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 36,808 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
32252 33634 65886 
> addmargins(table(testdata$essround))

    6   Sum 
36808 36808 
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 56 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               65886
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               165.361     328.873
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.504
  Shift parameter                                            1.048
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             23618.699   15606.862
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.514

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.993       0.979
  Tucker-Lewis Index (TLI)                       0.989       0.966
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.016       0.023
  90 Percent confidence interval - lower         0.014       0.021
  90 Percent confidence interval - upper         0.018       0.025
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.022       0.022

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.755    0.609
    ipstrgvr          0.987    0.015   65.014    0.000    0.745    0.617
    ipbhprpr          1.038    0.017   61.981    0.000    0.783    0.633
    ipfruler          1.050    0.018   57.697    0.000    0.792    0.564
    imptradr          0.929    0.017   53.787    0.000    0.701    0.501

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.097    0.028    3.454    0.001    0.073    0.073

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.596    0.009  485.936    0.000    4.596    3.707
   .ipstrgvr          4.591    0.009  504.875    0.000    4.591    3.800
   .ipbhprpr          4.346    0.009  491.689    0.000    4.346    3.514
   .ipfruler          3.751    0.009  413.141    0.000    3.751    2.672
   .imptradr          4.179    0.010  423.234    0.000    4.179    2.985
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2|t1            2.405    0.019  128.765    0.000    2.405    2.405

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.967    0.010   96.496    0.000    0.967    0.629
   .ipstrgvr          0.904    0.009   98.913    0.000    0.904    0.620
   .ipbhprpr          0.916    0.010   90.389    0.000    0.916    0.599
   .ipfruler          1.344    0.015   87.047    0.000    1.344    0.682
   .imptradr          1.468    0.016   90.498    0.000    1.468    0.749
   .rw2               0.995                               0.995    0.995
    authoritarian     0.570    0.014   41.379    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.371
    ipstrgvr          0.380
    ipbhprpr          0.401
    ipfruler          0.318
    imptradr          0.251
    rw2               0.005

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5] [,6]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000    0
r2 0.37548105 1.00000000 0.00000000 0.00000000 0.00000000    0
r3 0.38560283 0.39069442 1.00000000 0.00000000 0.00000000    0
r4 0.34344141 0.34797629 0.35735663 1.00000000 0.00000000    0
r5 0.30501466 0.30904214 0.31737294 0.28267170 1.00000000    0
r6 0.04455038 0.04513863 0.04635543 0.04128697 0.03666748    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02238661
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]      [,2]         [,3]        [,4]        [,5] [,6]
r1  1.000000000 0.0000000  0.000000000  0.00000000  0.00000000    0
r2  0.415008134 1.0000000  0.000000000  0.00000000  0.00000000    0
r3  0.364735964 0.3282801  1.000000000  0.00000000  0.00000000    0
r4  0.295984558 0.2571446  0.365631094  1.00000000  0.00000000    0
r5  0.274758780 0.3074062  0.317456148  0.31569179  1.00000000    0
r6 -0.001878335 0.0304640 -0.003930534 -0.02396811 -0.06318551    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.04231475
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.003


========================================================================================
> #
> # MODEL 2 FOR rw2
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 102,694 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 65,886 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 36,808 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
32252 33634 65886 
> addmargins(table(testdata$essround))

    6   Sum 
36808 36808 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 18 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               65886
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                28.533      70.210
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.407
  Shift parameter                                            0.029
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            671431.464  498947.100
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.346

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.014       0.023
  90 Percent confidence interval - lower         0.010       0.018
  90 Percent confidence interval - upper         0.019       0.027
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.035       0.035

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.860    0.860
    imdfetn.x         1.140    0.003  402.379    0.000    0.981    0.981
    impcntr.x         1.032    0.002  579.092    0.000    0.887    0.887

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    prejudice         0.267    0.023   11.687    0.000    0.230    0.230

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.834    0.009  -95.267    0.000   -0.834   -0.834
    imsmetn.x|t2      0.466    0.008   57.864    0.000    0.466    0.466
    imsmetn.x|t3      1.464    0.011  128.318    0.000    1.464    1.464
    imdfetn.x|t1     -1.109    0.010 -114.669    0.000   -1.109   -1.109
    imdfetn.x|t2      0.155    0.008   19.982    0.000    0.155    0.155
    imdfetn.x|t3      1.215    0.010  123.203    0.000    1.215    1.215
    impcntr.x|t1     -1.140    0.010 -115.319    0.000   -1.140   -1.140
    impcntr.x|t2      0.072    0.008    9.353    0.000    0.072    0.072
    impcntr.x|t3      1.107    0.010  115.527    0.000    1.107    1.107
    rw2|t1            2.405    0.019  128.765    0.000    2.405    2.405

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.261                               0.261    0.261
   .imdfetn.x         0.039                               0.039    0.039
   .impcntr.x         0.213                               0.213    0.213
   .rw2               0.947                               0.947    0.947
    prejudice         0.739    0.003  251.664    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.739
    imdfetn.x         0.961
    impcntr.x         0.787
    rw2               0.053

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw2.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw2.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8431127 1.0000000 0.0000000  0
3 0.7626511 0.8696955 1.0000000  0
4 0.1977591 0.2255162 0.2039943  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.03526043
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw2t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw2t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8527783 1.0000000 0.0000000  0
3 0.7694596 0.8684742 1.0000000  0
4 0.1970057 0.3036027 0.3124011  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.04241623
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw2s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.001
=================================================================================
> #
> # MODEL 3 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 102,694 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 65,886 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 36,808 cases in round 4 
> addmargins(table(traindata$essround))

    4     5   Sum 
32252 33634 65886 
> addmargins(table(testdata$essround))

    6   Sum 
36808 36808 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 60 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               65886
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               391.724     576.611
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.687
  Shift parameter                                            6.385
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            699929.432  417714.489
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.676

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.015       0.018
  90 Percent confidence interval - lower         0.014       0.017
  90 Percent confidence interval - upper         0.016       0.020
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.772    0.623
    ipstrgvr          0.998    0.016   62.791    0.000    0.770    0.638
    ipbhprpr          0.997    0.017   58.398    0.000    0.770    0.622
    ipfruler          1.011    0.018   54.856    0.000    0.781    0.556
    imptradr          0.872    0.017   50.625    0.000    0.673    0.481
  prejudice =~                                                          
    imsmetn.x         1.000                               0.860    0.860
    imdfetn.x         1.141    0.003  402.873    0.000    0.981    0.981
    impcntr.x         1.031    0.002  576.674    0.000    0.887    0.887

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.032    0.027    1.156    0.248    0.024    0.024
    prejudice         0.261    0.023   11.374    0.000    0.225    0.225
  prejudice ~                                                           
    authoritarian     0.241    0.009   27.652    0.000    0.216    0.216

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.596    0.009  485.936    0.000    4.596    3.707
   .ipstrgvr          4.591    0.009  504.875    0.000    4.591    3.800
   .ipbhprpr          4.346    0.009  491.689    0.000    4.346    3.514
   .ipfruler          3.751    0.009  413.141    0.000    3.751    2.672
   .imptradr          4.179    0.010  423.234    0.000    4.179    2.985
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.834    0.009  -95.267    0.000   -0.834   -0.834
    imsmetn.x|t2      0.466    0.008   57.864    0.000    0.466    0.466
    imsmetn.x|t3      1.464    0.011  128.318    0.000    1.464    1.464
    imdfetn.x|t1     -1.109    0.010 -114.669    0.000   -1.109   -1.109
    imdfetn.x|t2      0.155    0.008   19.982    0.000    0.155    0.155
    imdfetn.x|t3      1.215    0.010  123.203    0.000    1.215    1.215
    impcntr.x|t1     -1.140    0.010 -115.319    0.000   -1.140   -1.140
    impcntr.x|t2      0.072    0.008    9.353    0.000    0.072    0.072
    impcntr.x|t3      1.107    0.010  115.527    0.000    1.107    1.107
    rw2|t1            2.405    0.019  128.765    0.000    2.405    2.405

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.941    0.011   86.069    0.000    0.941    0.612
   .ipstrgvr          0.866    0.010   88.137    0.000    0.866    0.594
   .ipbhprpr          0.937    0.011   83.293    0.000    0.937    0.613
   .ipfruler          1.362    0.016   84.373    0.000    1.362    0.691
   .imptradr          1.506    0.017   87.333    0.000    1.506    0.769
   .imsmetn.x         0.261                               0.261    0.261
   .imdfetn.x         0.038                               0.038    0.038
   .impcntr.x         0.214                               0.214    0.214
   .rw2               0.947                               0.947    0.947
    authoritarian     0.596    0.015   40.325    0.000    1.000    1.000
   .prejudice         0.704    0.004  198.577    0.000    0.953    0.953

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.388
    ipstrgvr          0.406
    ipbhprpr          0.387
    ipfruler          0.309
    imptradr          0.231
    imsmetn.x         0.739
    imdfetn.x         0.962
    impcntr.x         0.786
    rw2               0.053
    prejudice         0.047

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]     [,7]      [,8] [,9]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.000000 0.0000000    0
r2 0.39694115 1.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.000000 0.0000000    0
r3 0.38746192 0.39674932 1.00000000 0.00000000 0.00000000 0.0000000 0.000000 0.0000000    0
r4 0.34617291 0.35447063 0.34600562 1.00000000 0.00000000 0.0000000 0.000000 0.0000000    0
r5 0.29944857 0.30662631 0.29930386 0.26740922 1.00000000 0.0000000 0.000000 0.0000000    0
r6 0.11572608 0.11850002 0.11567015 0.10334402 0.08939527 1.0000000 0.000000 0.0000000    0
r7 0.13204900 0.13521420 0.13198519 0.11792049 0.10200429 0.8432815 1.000000 0.0000000    0
r8 0.11935199 0.12221284 0.11929431 0.10658198 0.09219618 0.7621967 0.869703 1.0000000    0
r9 0.04549275 0.04658321 0.04547077 0.04062528 0.03514192 0.1977218 0.225610 0.2039168    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02659288
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]      [,2]         [,3]        [,4]        [,5]      [,6]      [,7]      [,8] [,9]
r1  1.000000000 0.0000000  0.000000000  0.00000000  0.00000000 0.0000000 0.0000000 0.0000000    0
r2  0.415008134 1.0000000  0.000000000  0.00000000  0.00000000 0.0000000 0.0000000 0.0000000    0
r3  0.364735964 0.3282801  1.000000000  0.00000000  0.00000000 0.0000000 0.0000000 0.0000000    0
r4  0.295984558 0.2571446  0.365631094  1.00000000  0.00000000 0.0000000 0.0000000 0.0000000    0
r5  0.274758780 0.3074062  0.317456148  0.31569179  1.00000000 0.0000000 0.0000000 0.0000000    0
r6  0.131989184 0.1158312  0.114608538  0.08821907  0.09899390 1.0000000 0.0000000 0.0000000    0
r7  0.142466558 0.1369713  0.114831284  0.08322701  0.11405808 0.8527783 1.0000000 0.0000000    0
r8  0.127459747 0.1257971  0.095860801  0.06784914  0.09022167 0.7694596 0.8684742 1.0000000    0
r9 -0.001878335 0.0304640 -0.003930534 -0.02396811 -0.06318551 0.1970057 0.3036027 0.3124011    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03724994
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.005

========================================================================================
> #
> # MODEL 4 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 4 | essround == 5 | essround == 6 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 102,694 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 4 | essround == 5 ))    # results in 65,886 cases in rounds 4 and 5.
> testdata  <-subset(sset1,  essround == 6)    # results in 36,808 cases in round 4  
> addmargins(table(traindata$essround))

    4     5   Sum 
32252 33634 65886 
> addmargins(table(testdata$essround))

    6   Sum 
36808 36808 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 88 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               65886
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              1449.633    1634.187
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.895
  Shift parameter                                           14.658
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            719578.563  439329.387
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.638

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.021       0.022
  90 Percent confidence interval - lower         0.020       0.021
  90 Percent confidence interval - upper         0.022       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.031       0.031

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.778    0.628
    ipstrgvr          0.997    0.016   62.399    0.000    0.776    0.642
    ipbhprpr          0.985    0.017   57.872    0.000    0.766    0.619
    ipfruler          0.996    0.018   54.205    0.000    0.775    0.552
    imptradr          0.857    0.017   50.009    0.000    0.667    0.476
  prejudice =~                                                          
    imsmetn.x         1.000                               0.860    0.860
    imdfetn.x         1.140    0.003  403.414    0.000    0.981    0.981
    impcntr.x         1.030    0.002  575.193    0.000    0.886    0.886
  trust =~                                                              
    ppltrst.x         1.000                               1.729    0.755
    pplfair.x         0.852    0.015   58.200    0.000    1.474    0.688
    pplhlp.x          0.733    0.013   57.094    0.000    1.268    0.577

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.027    0.027    0.998    0.318    0.021    0.021
    prejudice         0.285    0.025   11.423    0.000    0.245    0.245
    trust             0.048    0.013    3.676    0.000    0.082    0.082
  prejudice ~                                                           
    authoritarian     0.254    0.009   29.035    0.000    0.230    0.230
  trust ~                                                               
    prejudice        -0.495    0.015  -33.772    0.000   -0.246   -0.246

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.596    0.009  485.936    0.000    4.596    3.707
   .ipstrgvr          4.591    0.009  504.875    0.000    4.591    3.800
   .ipbhprpr          4.346    0.009  491.689    0.000    4.346    3.514
   .ipfruler          3.751    0.009  413.141    0.000    3.751    2.672
   .imptradr          4.179    0.010  423.234    0.000    4.179    2.985
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.905    0.014  349.307    0.000    4.905    2.142
   .pplfair.x         5.667    0.014  410.972    0.000    5.667    2.644
   .pplhlp.x          4.876    0.014  359.823    0.000    4.876    2.218
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.834    0.009  -95.267    0.000   -0.834   -0.834
    imsmetn.x|t2      0.466    0.008   57.864    0.000    0.466    0.466
    imsmetn.x|t3      1.464    0.011  128.318    0.000    1.464    1.464
    imdfetn.x|t1     -1.109    0.010 -114.669    0.000   -1.109   -1.109
    imdfetn.x|t2      0.155    0.008   19.982    0.000    0.155    0.155
    imdfetn.x|t3      1.215    0.010  123.203    0.000    1.215    1.215
    impcntr.x|t1     -1.140    0.010 -115.319    0.000   -1.140   -1.140
    impcntr.x|t2      0.072    0.008    9.353    0.000    0.072    0.072
    impcntr.x|t3      1.107    0.010  115.527    0.000    1.107    1.107
    rw2|t1            2.405    0.019  128.765    0.000    2.405    2.405

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.931    0.011   84.084    0.000    0.931    0.606
   .ipstrgvr          0.857    0.010   86.014    0.000    0.857    0.588
   .ipbhprpr          0.943    0.011   82.427    0.000    0.943    0.616
   .ipfruler          1.370    0.016   83.830    0.000    1.370    0.695
   .imptradr          1.515    0.017   86.923    0.000    1.515    0.773
   .imsmetn.x         0.261                               0.261    0.261
   .imdfetn.x         0.038                               0.038    0.038
   .impcntr.x         0.215                               0.215    0.215
   .ppltrst.x         2.255    0.048   46.661    0.000    2.255    0.430
   .pplfair.x         2.421    0.038   64.165    0.000    2.421    0.527
   .pplhlp.x          3.225    0.037   87.822    0.000    3.225    0.667
   .rw2               0.940                               0.940    0.940
    authoritarian     0.605    0.015   40.257    0.000    1.000    1.000
   .prejudice         0.700    0.004  192.275    0.000    0.947    0.947
   .trust             2.809    0.065   43.335    0.000    0.939    0.939

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.394
    ipstrgvr          0.412
    ipbhprpr          0.384
    ipfruler          0.305
    imptradr          0.227
    imsmetn.x         0.739
    imdfetn.x         0.962
    impcntr.x         0.785
    ppltrst.x         0.570
    pplfair.x         0.473
    pplhlp.x          0.333
    rw2               0.060
    prejudice         0.053
    trust             0.061

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r2   0.40306728  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r3   0.38870802  0.39779328  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r4   0.34652444  0.35462375  0.34199029  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r5   0.29890253  0.30588877  0.29499149  0.26297827  1.00000000  0.0000000  0.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r6   0.12410467  0.12700536  0.12248080  0.10918888  0.09418334  1.0000000  0.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r7   0.14151810  0.14482580  0.13966639  0.12450944  0.10739844  0.8432558  1.0000000  0.0000000 0.00000000 0.00000000 0.00000000
r8   0.12788761  0.13087673  0.12621425  0.11251716  0.09705423  0.7620366  0.8689598  1.0000000 0.00000000 0.00000000 0.00000000
r9  -0.02681459 -0.02744132 -0.02646373 -0.02359182 -0.02034966 -0.1597785 -0.1821975 -0.1646489 1.00000000 0.00000000 0.00000000
r10 -0.02442304 -0.02499388 -0.02410348 -0.02148771 -0.01853471 -0.1455282 -0.1659476 -0.1499642 0.51925783 1.00000000 0.00000000
r11 -0.02048361 -0.02096237 -0.02021559 -0.01802174 -0.01554506 -0.1220545 -0.1391803 -0.1257750 0.43550166 0.39666006 1.00000000
r12  0.04581362  0.04688442  0.04521416  0.04030741  0.03476807  0.1978045  0.2255589  0.2038339 0.01564498 0.01424963 0.01195117
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.03086404
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
            [,1]        [,2]         [,3]        [,4]         [,5]       [,6]       [,7]        [,8]        [,9]      [,10]
r1   1.000000000  0.00000000  0.000000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000 0.00000000
r2   0.415008134  1.00000000  0.000000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000 0.00000000
r3   0.364735964  0.32828010  1.000000000  0.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000 0.00000000
r4   0.295984558  0.25714458  0.365631094  1.00000000  0.000000000  0.0000000  0.0000000  0.00000000  0.00000000 0.00000000
r5   0.274758780  0.30740617  0.317456148  0.31569179  1.000000000  0.0000000  0.0000000  0.00000000  0.00000000 0.00000000
r6   0.131989184  0.11583119  0.114608538  0.08821907  0.098993897  1.0000000  0.0000000  0.00000000  0.00000000 0.00000000
r7   0.142466558  0.13697134  0.114831284  0.08322701  0.114058083  0.8527783  1.0000000  0.00000000  0.00000000 0.00000000
r8   0.127459747  0.12579712  0.095860801  0.06784914  0.090221666  0.7694596  0.8684742  1.00000000  0.00000000 0.00000000
r9  -0.139525574 -0.11706790 -0.067085317 -0.03743651 -0.048179491 -0.2019903 -0.2151447 -0.18797171  1.00000000 0.00000000
r10 -0.103101547 -0.08933074 -0.044727629 -0.06621164 -0.063003032 -0.1540717 -0.1520113 -0.12809732  0.49872927 1.00000000
r11 -0.060565158 -0.07039961 -0.015875965 -0.02228511 -0.008590083 -0.1053795 -0.1046583 -0.08557734  0.43709969 0.45888701
r12 -0.001878335  0.03046400 -0.003930534 -0.02396811 -0.063185514  0.1970057  0.3036027  0.31240110 -0.04092379 0.02822054
           [,11] [,12]
r1   0.000000000     0
r2   0.000000000     0
r3   0.000000000     0
r4   0.000000000     0
r5   0.000000000     0
r6   0.000000000     0
r7   0.000000000     0
r8   0.000000000     0
r9   0.000000000     0
r10  0.000000000     0
r11  1.000000000     0
r12 -0.005221844     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03960096
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.022

# ----------ENDE TESTING BLOCK 5 ------------------------------------
# -------------------------------------------------------------------

Testing block 6: Temporal validation set design, structural equation models 
> # run sequentially # SRMR as criterion
> #
> # ------------------- SEM in LONGITUDINAL VALIDATION SET DESIGN ------------------
> #
> # -------------------Target  variable rw  ----------------------------------------
> # PERIOD C 
> #
> # MODEL 1 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,939 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 63,660 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,279 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33095 30565 63660 
> addmargins(table(testdata$essround))

    8   Sum 
31279 31279 
> #
> #
> # scale direction reversed for value items
> #
> library(car)
Loading required package: carData
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
This is lavaan 0.6-8
lavaan is FREE software! Please report any bugs.
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 54 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               63660
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               217.665     419.074
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.521
  Shift parameter                                            0.986
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             20228.958   13280.980
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.524

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.969
  Tucker-Lewis Index (TLI)                       0.983       0.948
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.027
  90 Percent confidence interval - lower         0.017       0.025
  90 Percent confidence interval - upper         0.021       0.029
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.025       0.025

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.748    0.605
    ipstrgvr          0.884    0.014   62.580    0.000    0.661    0.580
    ipbhprpr          1.005    0.018   57.179    0.000    0.752    0.599
    ipfruler          1.023    0.019   52.725    0.000    0.766    0.531
    imptradr          0.981    0.019   52.301    0.000    0.734    0.519

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.276    0.020   13.534    0.000    0.207    0.207

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.652    0.010  456.111    0.000    4.652    3.759
   .ipstrgvr          4.765    0.009  505.266    0.000    4.765    4.179
   .ipbhprpr          4.375    0.010  458.588    0.000    4.375    3.488
   .ipfruler          3.727    0.010  383.389    0.000    3.727    2.584
   .imptradr          4.196    0.011  394.600    0.000    4.196    2.969
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw|t1             1.647    0.014  116.741    0.000    1.647    1.647

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.972    0.011   87.092    0.000    0.972    0.634
   .ipstrgvr          0.863    0.009   99.743    0.000    0.863    0.664
   .ipbhprpr          1.008    0.012   84.284    0.000    1.008    0.641
   .ipfruler          1.495    0.018   82.701    0.000    1.495    0.718
   .imptradr          1.459    0.017   87.242    0.000    1.459    0.730
   .rw                0.957                               0.957    0.957
    authoritarian     0.560    0.014   39.218    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.366
    ipstrgvr          0.336
    ipbhprpr          0.359
    ipfruler          0.282
    imptradr          0.270
    rw                0.043

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3506562 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3624143 0.3476113 1.0000000 0.0000000 0.0000000    0
r4 0.3209470 0.3078378 0.3181602 1.0000000 0.0000000    0
r5 0.3140135 0.3011874 0.3112868 0.2756695 1.0000000    0
r6 0.1250966 0.1199869 0.1240103 0.1098211 0.1074486    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02517428
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4275354 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3647397 0.3177362 1.0000000 0.0000000 0.0000000    0
r4 0.3050798 0.2724790 0.3741968 1.0000000 0.0000000    0
r5 0.2907951 0.2938566 0.3211437 0.3058895 1.0000000    0
r6 0.1115272 0.1883467 0.1162671 0.1115722 0.1933875    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03475041
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.004
# ------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 2 FOR rw    
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,939 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 63,660 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,279 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33095 30565 63660 
> addmargins(table(testdata$essround)) 

    8   Sum 
31279 31279 
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               63660
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 4.268      11.056
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.118       0.004
  Scaling correction factor                                  0.387
  Shift parameter                                            0.024
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            462099.173  343316.854
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.346

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.004       0.008
  90 Percent confidence interval - lower         0.000       0.004
  90 Percent confidence interval - upper         0.010       0.014
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.009       0.009

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.861    0.861
    imdfetn.x         1.138    0.003  333.270    0.000    0.980    0.980
    impcntr.x         1.010    0.002  469.047    0.000    0.870    0.870

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    prejudice         0.335    0.015   21.830    0.000    0.288    0.288

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.706    0.009  -78.930    0.000   -0.706   -0.706
    imsmetn.x|t2      0.634    0.009   72.679    0.000    0.634    0.634
    imsmetn.x|t3      1.575    0.014  115.871    0.000    1.575    1.575
    imdfetn.x|t1     -0.986    0.010 -100.675    0.000   -0.986   -0.986
    imdfetn.x|t2      0.302    0.008   36.518    0.000    0.302    0.302
    imdfetn.x|t3      1.294    0.011  113.652    0.000    1.294    1.294
    impcntr.x|t1     -1.045    0.010 -102.884    0.000   -1.045   -1.045
    impcntr.x|t2      0.144    0.008   17.534    0.000    0.144    0.144
    impcntr.x|t3      1.104    0.010  107.646    0.000    1.104    1.104
    rw|t1             1.647    0.014  116.741    0.000    1.647    1.647

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.259                               0.259    0.259
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.243                               0.243    0.243
   .rw                0.917                               0.917    0.917
    prejudice         0.741    0.003  219.073    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.741
    imdfetn.x         0.960
    impcntr.x         0.757
    rw                0.083

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8436531 1.0000000 0.0000000  0
3 0.7489741 0.8523030 1.0000000  0
4 0.2482257 0.2824711 0.2507707  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.009426963
> #
> # same model for testdata to get its observed covariance matrix
> #
> rwt.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- as.data.frame(rwt.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8268118 1.0000000 0.0000000  0
3 0.7478603 0.8590605 1.0000000  0
4 0.2664927 0.3620502 0.3277977  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03595859
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rws.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
ecvi 
   0 
   # --------------------------------------------------------------------
   
=================================================================================
> #
> # MODEL 3 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,939 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 63,660 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,279 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33095 30565 63660 
> addmargins(table(testdata$essround))

    8   Sum 
31279 31279 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 66 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               63660
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               277.372     413.075
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.681
  Shift parameter                                            6.062
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            487595.790  297373.986
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.640

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.013       0.016
  90 Percent confidence interval - lower         0.011       0.014
  90 Percent confidence interval - upper         0.014       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.019       0.019

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.759    0.614
    ipstrgvr          0.885    0.015   57.859    0.000    0.672    0.590
    ipbhprpr          0.963    0.018   52.787    0.000    0.732    0.583
    ipfruler          0.997    0.020   48.755    0.000    0.757    0.525
    imptradr          0.970    0.020   48.753    0.000    0.737    0.521
  prejudice =~                                                          
    imsmetn.x         1.000                               0.861    0.861
    imdfetn.x         1.138    0.003  336.478    0.000    0.980    0.980
    impcntr.x         1.010    0.002  466.502    0.000    0.870    0.870

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.190    0.022    8.749    0.000    0.144    0.144
    prejudice         0.293    0.017   17.160    0.000    0.252    0.252
  prejudice ~                                                           
    authoritarian     0.283    0.010   28.983    0.000    0.249    0.249

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.652    0.010  456.111    0.000    4.652    3.759
   .ipstrgvr          4.765    0.009  505.266    0.000    4.765    4.179
   .ipbhprpr          4.375    0.010  458.588    0.000    4.375    3.488
   .ipfruler          3.727    0.010  383.389    0.000    3.727    2.584
   .imptradr          4.196    0.011  394.600    0.000    4.196    2.969
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.706    0.009  -78.930    0.000   -0.706   -0.706
    imsmetn.x|t2      0.634    0.009   72.679    0.000    0.634    0.634
    imsmetn.x|t3      1.575    0.014  115.871    0.000    1.575    1.575
    imdfetn.x|t1     -0.986    0.010 -100.675    0.000   -0.986   -0.986
    imdfetn.x|t2      0.302    0.008   36.518    0.000    0.302    0.302
    imdfetn.x|t3      1.294    0.011  113.652    0.000    1.294    1.294
    impcntr.x|t1     -1.045    0.010 -102.884    0.000   -1.045   -1.045
    impcntr.x|t2      0.144    0.008   17.534    0.000    0.144    0.144
    impcntr.x|t3      1.104    0.010  107.646    0.000    1.104    1.104
    rw|t1             1.647    0.014  116.741    0.000    1.647    1.647

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.955    0.012   79.314    0.000    0.955    0.624
   .ipstrgvr          0.848    0.009   89.299    0.000    0.848    0.652
   .ipbhprpr          1.038    0.013   80.025    0.000    1.038    0.660
   .ipfruler          1.508    0.019   79.258    0.000    1.508    0.725
   .imptradr          1.454    0.018   82.540    0.000    1.454    0.728
   .imsmetn.x         0.259                               0.259    0.259
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.243                               0.243    0.243
   .rw                0.897                               0.897    0.897
    authoritarian     0.577    0.015   37.231    0.000    1.000    1.000
   .prejudice         0.695    0.004  166.556    0.000    0.938    0.938

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.376
    ipstrgvr          0.348
    ipbhprpr          0.340
    ipfruler          0.275
    imptradr          0.272
    imsmetn.x         0.741
    imdfetn.x         0.960
    impcntr.x         0.757
    rw                0.103
    prejudice         0.062

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3617500 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3577962 0.3438644 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3218807 0.3093473 0.3059663 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.3198777 0.3074224 0.3040624 0.2735406 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1316976 0.1265695 0.1251862 0.1126200 0.1119192 1.0000000 0.0000000 0.0000000    0
r7 0.1499207 0.1440831 0.1425084 0.1282034 0.1274056 0.8435844 1.0000000 0.0000000    0
r8 0.1330775 0.1278957 0.1264979 0.1138000 0.1130919 0.7488095 0.8524233 1.0000000    0
r9 0.1270659 0.1221182 0.1207835 0.1086593 0.1079832 0.2481735 0.2825136 0.2507738    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.01947056
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4275354 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3647397 0.3177362 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3050798 0.2724790 0.3741968 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.2907951 0.2938566 0.3211437 0.3058895 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1553032 0.1364689 0.1212409 0.1504276 0.1553684 1.0000000 0.0000000 0.0000000    0
r7 0.1927533 0.1827816 0.1424718 0.1698963 0.2082271 0.8268118 1.0000000 0.0000000    0
r8 0.1555687 0.1546150 0.1208643 0.1544565 0.1748061 0.7478603 0.8590605 1.0000000    0
r9 0.1115272 0.1883467 0.1162671 0.1115722 0.1933875 0.2664927 0.3620502 0.3277977    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03678721
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.005
# ------------------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 4 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 94,939 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 63,660 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,279 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33095 30565 63660 
> addmargins(table(testdata$essround))

    8   Sum 
31279 31279 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 86 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               63660
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              1302.906    1496.748
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.879
  Shift parameter                                           14.503
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            507091.081  307518.120
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.649

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.995
  Tucker-Lewis Index (TLI)                       0.997       0.994
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.021
  90 Percent confidence interval - lower         0.019       0.020
  90 Percent confidence interval - upper         0.021       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.767    0.620
    ipstrgvr          0.884    0.015   57.154    0.000    0.678    0.595
    ipbhprpr          0.945    0.018   51.847    0.000    0.725    0.578
    ipfruler          0.980    0.020   47.878    0.000    0.751    0.521
    imptradr          0.954    0.020   47.859    0.000    0.732    0.518
  prejudice =~                                                          
    imsmetn.x         1.000                               0.861    0.861
    imdfetn.x         1.138    0.003  339.688    0.000    0.980    0.980
    impcntr.x         1.009    0.002  463.828    0.000    0.869    0.869
  trust =~                                                              
    ppltrst.x         1.000                               1.710    0.762
    pplfair.x         0.868    0.016   55.637    0.000    1.485    0.698
    pplhlp.x          0.727    0.013   53.917    0.000    1.244    0.565

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.182    0.022    8.383    0.000    0.140    0.140
    prejudice         0.273    0.018   14.785    0.000    0.235    0.235
    trust            -0.032    0.009   -3.662    0.000   -0.054   -0.054
  prejudice ~                                                           
    authoritarian     0.300    0.010   30.611    0.000    0.267    0.267
  trust ~                                                               
    prejudice        -0.581    0.016  -36.729    0.000   -0.293   -0.293

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.652    0.010  456.111    0.000    4.652    3.759
   .ipstrgvr          4.765    0.009  505.266    0.000    4.765    4.179
   .ipbhprpr          4.375    0.010  458.588    0.000    4.375    3.488
   .ipfruler          3.727    0.010  383.389    0.000    3.727    2.584
   .imptradr          4.196    0.011  394.600    0.000    4.196    2.969
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.012    0.015  339.543    0.000    5.012    2.234
   .pplfair.x         5.713    0.015  385.430    0.000    5.713    2.684
   .pplhlp.x          4.965    0.015  338.977    0.000    4.965    2.254
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.706    0.009  -78.930    0.000   -0.706   -0.706
    imsmetn.x|t2      0.634    0.009   72.679    0.000    0.634    0.634
    imsmetn.x|t3      1.575    0.014  115.871    0.000    1.575    1.575
    imdfetn.x|t1     -0.986    0.010 -100.675    0.000   -0.986   -0.986
    imdfetn.x|t2      0.302    0.008   36.518    0.000    0.302    0.302
    imdfetn.x|t3      1.294    0.011  113.652    0.000    1.294    1.294
    impcntr.x|t1     -1.045    0.010 -102.884    0.000   -1.045   -1.045
    impcntr.x|t2      0.144    0.008   17.534    0.000    0.144    0.144
    impcntr.x|t3      1.104    0.010  107.646    0.000    1.104    1.104
    rw|t1             1.647    0.014  116.741    0.000    1.647    1.647

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.943    0.012   77.455    0.000    0.943    0.616
   .ipstrgvr          0.840    0.010   86.846    0.000    0.840    0.646
   .ipbhprpr          1.048    0.013   79.512    0.000    1.048    0.666
   .ipfruler          1.517    0.019   78.732    0.000    1.517    0.729
   .imptradr          1.462    0.018   81.591    0.000    1.462    0.732
   .imsmetn.x         0.259                               0.259    0.259
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.245                               0.245    0.245
   .ppltrst.x         2.110    0.051   41.694    0.000    2.110    0.419
   .pplfair.x         2.326    0.040   58.513    0.000    2.326    0.513
   .pplhlp.x          3.303    0.039   84.868    0.000    3.303    0.681
   .rw                0.896                               0.896    0.896
    authoritarian     0.588    0.016   37.026    0.000    1.000    1.000
   .prejudice         0.688    0.004  159.630    0.000    0.929    0.929
   .trust             2.673    0.064   41.589    0.000    0.914    0.914

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.384
    ipstrgvr          0.354
    ipbhprpr          0.334
    ipfruler          0.271
    imptradr          0.268
    imsmetn.x         0.741
    imdfetn.x         0.960
    impcntr.x         0.755
    ppltrst.x         0.581
    pplfair.x         0.487
    pplhlp.x          0.319
    rw                0.104
    prejudice         0.071
    trust             0.086

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]       [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r2   0.36856385  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r3   0.35806583  0.34358681  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r4   0.32278517  0.30973279  0.30091049  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r5   0.32086033  0.30788579  0.29911610  0.26964382  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r6   0.14259589  0.13682978  0.13293237  0.11983439  0.11911979  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r7   0.16227089  0.15570918  0.15127403  0.13636881  0.13555562  0.8433579  1.0000000  0.0000000  0.0000000  0.00000000  0.0000000
r8   0.14393128  0.13811117  0.13417727  0.12095662  0.12023533  0.7480428  0.8512558  1.0000000  0.0000000  0.00000000  0.0000000
r9  -0.03692786 -0.03543462 -0.03442531 -0.03103335 -0.03084829 -0.1919223 -0.2184032 -0.1937196  1.0000000  0.00000000  0.0000000
r10 -0.03379838 -0.03243168 -0.03150791 -0.02840340 -0.02823402 -0.1756577 -0.1998945 -0.1773027  0.5316399  1.00000000  0.0000000
r11 -0.02736365 -0.02625715 -0.02550925 -0.02299580 -0.02285867 -0.1422150 -0.1618374 -0.1435468  0.4304232  0.39394667  1.0000000
r12  0.12832590  0.12313682  0.11962944  0.10784221  0.10719912  0.2482920  0.2825507  0.2506172 -0.1022564 -0.09359062 -0.0757723
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02837518
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r2   0.42753539  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r3   0.36473965  0.31773623  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r4   0.30507984  0.27247897  0.37419685  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r5   0.29079505  0.29385662  0.32114368  0.30588950  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r6   0.15530320  0.13646886  0.12124088  0.15042762  0.15536842  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r7   0.19275334  0.18278163  0.14247181  0.16989630  0.20822710  0.8268118  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r8   0.15556874  0.15461505  0.12086433  0.15445649  0.17480614  0.7478603  0.8590605  1.0000000  0.0000000  0.0000000  0.0000000
r9  -0.13128089 -0.11123809 -0.06654466 -0.05113961 -0.07212727 -0.2345425 -0.2482199 -0.2164529  1.0000000  0.0000000  0.0000000
r10 -0.10792046 -0.09094119 -0.04997369 -0.08030238 -0.07290908 -0.2247271 -0.2277145 -0.1972156  0.5184269  1.0000000  0.0000000
r11 -0.07467271 -0.07167084 -0.03340225 -0.03436197 -0.02689284 -0.1499469 -0.1595786 -0.1375284  0.4414489  0.4499561  1.0000000
r12  0.11152718  0.18834673  0.11626708  0.11157222  0.19338751  0.2664927  0.3620502  0.3277977 -0.1838727 -0.1219981 -0.1375875
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03795082
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
ecvi 
0.02
# ----------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------

================================================================================ 
> # -------------------Target  variable rw1 ----------------------------------------
> #
> # MODEL 1 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 96,787 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 64,849 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,938 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33708 31141 64849 
> addmargins(table(testdata$essround))

    8   Sum 
31938 31938 
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 55 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               64849
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               217.328     415.929
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.524
  Shift parameter                                            1.021
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             20632.062   13529.571
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.526

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.990       0.970
  Tucker-Lewis Index (TLI)                       0.983       0.950
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.026
  90 Percent confidence interval - lower         0.017       0.024
  90 Percent confidence interval - upper         0.021       0.029
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.745    0.602
    ipstrgvr          0.889    0.014   62.920    0.000    0.662    0.581
    ipbhprpr          1.011    0.018   57.640    0.000    0.753    0.600
    ipfruler          1.032    0.019   53.199    0.000    0.769    0.533
    imptradr          0.989    0.019   52.707    0.000    0.736    0.521

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.334    0.023   14.484    0.000    0.249    0.249

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.655    0.010  459.961    0.000    4.655    3.765
   .ipstrgvr          4.768    0.009  508.581    0.000    4.768    4.183
   .ipbhprpr          4.377    0.009  461.605    0.000    4.377    3.490
   .ipfruler          3.732    0.010  385.962    0.000    3.732    2.587
   .imptradr          4.200    0.011  396.719    0.000    4.200    2.973
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1|t1            1.796    0.016  110.403    0.000    1.796    1.796

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.974    0.011   87.922    0.000    0.974    0.637
   .ipstrgvr          0.861    0.009  100.841    0.000    0.861    0.663
   .ipbhprpr          1.006    0.012   84.773    0.000    1.006    0.640
   .ipfruler          1.490    0.018   83.489    0.000    1.490    0.716
   .imptradr          1.454    0.017   87.890    0.000    1.454    0.728
   .rw1               0.938                               0.938    0.938
    authoritarian     0.555    0.014   39.407    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.363
    ipstrgvr          0.337
    ipbhprpr          0.360
    ipfruler          0.284
    imptradr          0.272
    rw1               0.062

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3499255 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3616014 0.3486455 1.0000000 0.0000000 0.0000000    0
r4 0.3210673 0.3095636 0.3198928 1.0000000 0.0000000    0
r5 0.3139759 0.3027263 0.3128273 0.2777606 1.0000000    0
r6 0.1498368 0.1444683 0.1492887 0.1325540 0.1296263    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02560659
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4277410 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3665471 0.3190161 1.0000000 0.0000000 0.0000000    0
r4 0.3052172 0.2718732 0.3740260 1.0000000 0.0000000    0
r5 0.2905716 0.2953438 0.3223175 0.3062221 1.0000000    0
r6 0.1401724 0.2008344 0.1514914 0.1376468 0.2429933    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03729905
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.004
# --------------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 2 FOR rw1
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 96,787 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 64,849 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,938 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33708 31141 64849 
> addmargins(table(testdata$essround))

    8   Sum 
31938 31938 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               64849
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 2.766       7.153
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.251       0.028
  Scaling correction factor                                  0.388
  Shift parameter                                            0.022
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            466480.572  347288.706
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.343

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.002       0.006
  90 Percent confidence interval - lower         0.000       0.002
  90 Percent confidence interval - upper         0.009       0.012
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.008       0.008

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.861    0.861
    imdfetn.x         1.137    0.003  334.992    0.000    0.980    0.980
    impcntr.x         1.009    0.002  472.203    0.000    0.869    0.869

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    prejudice         0.261    0.018   14.884    0.000    0.225    0.225

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.708    0.009  -79.569    0.000   -0.708   -0.708
    imsmetn.x|t2      0.635    0.009   73.259    0.000    0.635    0.635
    imsmetn.x|t3      1.577    0.013  116.870    0.000    1.577    1.577
    imdfetn.x|t1     -0.987    0.010 -101.344    0.000   -0.987   -0.987
    imdfetn.x|t2      0.301    0.008   36.642    0.000    0.301    0.301
    imdfetn.x|t3      1.296    0.011  114.701    0.000    1.296    1.296
    impcntr.x|t1     -1.045    0.010 -103.571    0.000   -1.045   -1.045
    impcntr.x|t2      0.142    0.008   17.441    0.000    0.142    0.142
    impcntr.x|t3      1.103    0.010  108.311    0.000    1.103    1.103
    rw1|t1            1.796    0.016  110.403    0.000    1.796    1.796

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.258                               0.258    0.258
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.244                               0.244    0.244
   .rw1               0.950                               0.950    0.950
    prejudice         0.742    0.003  220.835    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.742
    imdfetn.x         0.960
    impcntr.x         0.756
    rw1               0.050

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw1.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw1.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8437326 1.0000000 0.0000000  0
3 0.7487203 0.8516389 1.0000000  0
4 0.1933785 0.2199602 0.1951906  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.00823829
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw1t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw1t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8272949 1.0000000 0.0000000  0
3 0.7484041 0.8588492 1.0000000  0
4 0.2387190 0.3083136 0.2606587  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03804003
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw1s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
ecvi 
   0
# -----------------------------------------------------------------------------

=================================================================================
> #
> # MODEL 3 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 96,787 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 64,849 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,938 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33708 31141 64849 
> addmargins(table(testdata$essround))

    8   Sum 
31938 31938 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 66 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               64849
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               278.601     414.951
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.681
  Shift parameter                                            6.010
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            492377.938  301027.858
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.636

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.013       0.016
  90 Percent confidence interval - lower         0.011       0.014
  90 Percent confidence interval - upper         0.014       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.020       0.020

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.757    0.612
    ipstrgvr          0.889    0.015   58.360    0.000    0.672    0.590
    ipbhprpr          0.968    0.018   53.440    0.000    0.732    0.584
    ipfruler          1.003    0.020   49.307    0.000    0.759    0.526
    imptradr          0.977    0.020   49.161    0.000    0.740    0.523
  prejudice =~                                                          
    imsmetn.x         1.000                               0.861    0.861
    imdfetn.x         1.138    0.003  337.863    0.000    0.980    0.980
    impcntr.x         1.010    0.002  469.849    0.000    0.869    0.869

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.272    0.025   11.101    0.000    0.206    0.206
    prejudice         0.202    0.019   10.439    0.000    0.174    0.174
  prejudice ~                                                           
    authoritarian     0.281    0.010   28.919    0.000    0.247    0.247

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.655    0.010  459.961    0.000    4.655    3.765
   .ipstrgvr          4.768    0.009  508.581    0.000    4.768    4.183
   .ipbhprpr          4.377    0.009  461.605    0.000    4.377    3.490
   .ipfruler          3.732    0.010  385.962    0.000    3.732    2.587
   .imptradr          4.200    0.011  396.719    0.000    4.200    2.973
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.708    0.009  -79.569    0.000   -0.708   -0.708
    imsmetn.x|t2      0.635    0.009   73.259    0.000    0.635    0.635
    imsmetn.x|t3      1.577    0.013  116.870    0.000    1.577    1.577
    imdfetn.x|t1     -0.987    0.010 -101.344    0.000   -0.987   -0.987
    imdfetn.x|t2      0.301    0.008   36.642    0.000    0.301    0.301
    imdfetn.x|t3      1.296    0.011  114.701    0.000    1.296    1.296
    impcntr.x|t1     -1.045    0.010 -103.571    0.000   -1.045   -1.045
    impcntr.x|t2      0.142    0.008   17.441    0.000    0.142    0.142
    impcntr.x|t3      1.103    0.010  108.311    0.000    1.103    1.103
    rw1|t1            1.796    0.016  110.403    0.000    1.796    1.796

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.956    0.012   80.257    0.000    0.956    0.625
   .ipstrgvr          0.847    0.009   90.512    0.000    0.847    0.652
   .ipbhprpr          1.036    0.013   80.864    0.000    1.036    0.659
   .ipfruler          1.504    0.019   80.015    0.000    1.504    0.723
   .imptradr          1.450    0.017   83.338    0.000    1.450    0.726
   .imsmetn.x         0.259                               0.259    0.259
   .imdfetn.x         0.040                               0.040    0.040
   .impcntr.x         0.244                               0.244    0.244
   .rw1               0.910                               0.910    0.910
    authoritarian     0.573    0.015   37.508    0.000    1.000    1.000
   .prejudice         0.696    0.004  168.091    0.000    0.939    0.939

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.375
    ipstrgvr          0.348
    ipbhprpr          0.341
    ipfruler          0.277
    imptradr          0.274
    imsmetn.x         0.741
    imdfetn.x         0.960
    impcntr.x         0.756
    rw1               0.090
    prejudice         0.061

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3611331 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3574274 0.3445772 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3221923 0.3106089 0.3074216 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.3203262 0.3088099 0.3056411 0.2755111 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1303257 0.1256403 0.1243510 0.1120925 0.1114433 1.0000000 0.0000000 0.0000000    0
r7 0.1482963 0.1429648 0.1414978 0.1275489 0.1268102 0.8436550 1.0000000 0.0000000    0
r8 0.1315793 0.1268488 0.1255472 0.1131708 0.1125153 0.7485525 0.8517701 1.0000000    0
r9 0.1522809 0.1468061 0.1452997 0.1309761 0.1302175 0.1933350 0.2199939 0.1951947    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.01970596
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4277410 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3665471 0.3190161 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3052172 0.2718732 0.3740260 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.2905716 0.2953438 0.3223175 0.3062221 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1538896 0.1372405 0.1217815 0.1507654 0.1570472 1.0000000 0.0000000 0.0000000    0
r7 0.1923419 0.1848979 0.1438135 0.1689694 0.2089175 0.8272949 1.0000000 0.0000000    0
r8 0.1559206 0.1567913 0.1216724 0.1541881 0.1754761 0.7484041 0.8588492 1.0000000    0
r9 0.1401724 0.2008344 0.1514914 0.1376468 0.2429933 0.2387190 0.3083136 0.2606587    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03875835
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.005
# -------------------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 4 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 96,787 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 64,849 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 31,938 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
33708 31141 64849 
> addmargins(table(testdata$essround))

    8   Sum 
31938 31938 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 88 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               64849
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              1361.108    1555.969
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.883
  Shift parameter                                           14.530
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            512101.337  311657.071
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.643

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.997       0.995
  Tucker-Lewis Index (TLI)                       0.997       0.994
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.022
  90 Percent confidence interval - lower         0.019       0.021
  90 Percent confidence interval - upper         0.021       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.764    0.618
    ipstrgvr          0.887    0.015   57.671    0.000    0.678    0.595
    ipbhprpr          0.949    0.018   52.508    0.000    0.726    0.579
    ipfruler          0.986    0.020   48.421    0.000    0.754    0.523
    imptradr          0.961    0.020   48.269    0.000    0.735    0.520
  prejudice =~                                                          
    imsmetn.x         1.000                               0.861    0.861
    imdfetn.x         1.138    0.003  341.031    0.000    0.980    0.980
    impcntr.x         1.009    0.002  466.822    0.000    0.868    0.868
  trust =~                                                              
    ppltrst.x         1.000                               1.714    0.763
    pplfair.x         0.867    0.015   56.027    0.000    1.486    0.697
    pplhlp.x          0.724    0.013   54.350    0.000    1.240    0.563

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.266    0.025   10.817    0.000    0.203    0.203
    prejudice         0.174    0.021    8.193    0.000    0.149    0.149
    trust            -0.042    0.010   -4.414    0.000   -0.072   -0.072
  prejudice ~                                                           
    authoritarian     0.299    0.010   30.661    0.000    0.266    0.266
  trust ~                                                               
    prejudice        -0.580    0.016  -36.912    0.000   -0.291   -0.291

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.655    0.010  459.961    0.000    4.655    3.765
   .ipstrgvr          4.768    0.009  508.581    0.000    4.768    4.183
   .ipbhprpr          4.377    0.009  461.605    0.000    4.377    3.490
   .ipfruler          3.732    0.010  385.962    0.000    3.732    2.587
   .imptradr          4.200    0.011  396.719    0.000    4.200    2.973
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.007    0.015  341.481    0.000    5.007    2.230
   .pplfair.x         5.709    0.015  387.757    0.000    5.709    2.680
   .pplhlp.x          4.962    0.015  341.319    0.000    4.962    2.253
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.708    0.009  -79.569    0.000   -0.708   -0.708
    imsmetn.x|t2      0.635    0.009   73.259    0.000    0.635    0.635
    imsmetn.x|t3      1.577    0.013  116.870    0.000    1.577    1.577
    imdfetn.x|t1     -0.987    0.010 -101.344    0.000   -0.987   -0.987
    imdfetn.x|t2      0.301    0.008   36.642    0.000    0.301    0.301
    imdfetn.x|t3      1.296    0.011  114.701    0.000    1.296    1.296
    impcntr.x|t1     -1.045    0.010 -103.571    0.000   -1.045   -1.045
    impcntr.x|t2      0.142    0.008   17.441    0.000    0.142    0.142
    impcntr.x|t3      1.103    0.010  108.311    0.000    1.103    1.103
    rw1|t1            1.796    0.016  110.403    0.000    1.796    1.796

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.944    0.012   78.452    0.000    0.944    0.618
   .ipstrgvr          0.839    0.010   88.047    0.000    0.839    0.646
   .ipbhprpr          1.046    0.013   80.388    0.000    1.046    0.665
   .ipfruler          1.512    0.019   79.450    0.000    1.512    0.727
   .imptradr          1.457    0.018   82.338    0.000    1.457    0.730
   .imsmetn.x         0.259                               0.259    0.259
   .imdfetn.x         0.041                               0.041    0.041
   .impcntr.x         0.246                               0.246    0.246
   .ppltrst.x         2.104    0.050   41.876    0.000    2.104    0.417
   .pplfair.x         2.331    0.039   59.224    0.000    2.331    0.514
   .pplhlp.x          3.313    0.039   85.846    0.000    3.313    0.683
   .rw1               0.906                               0.906    0.906
    authoritarian     0.584    0.016   37.306    0.000    1.000    1.000
   .prejudice         0.689    0.004  160.988    0.000    0.929    0.929
   .trust             2.687    0.064   41.909    0.000    0.915    0.915

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.382
    ipstrgvr          0.354
    ipbhprpr          0.335
    ipfruler          0.273
    imptradr          0.270
    imsmetn.x         0.741
    imdfetn.x         0.959
    impcntr.x         0.754
    ppltrst.x         0.583
    pplfair.x         0.486
    pplhlp.x          0.317
    rw1               0.094
    prejudice         0.071
    trust             0.085

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r2   0.36779550  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r3   0.35766844  0.34426680  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r4   0.32306810  0.31096291  0.30240072  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r5   0.32137189  0.30933026  0.30081301  0.27171278  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r6   0.14148982  0.13618828  0.13243840  0.11962650  0.11899842  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r7   0.16095904  0.15492799  0.15066213  0.13608729  0.13537278  0.8433784  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r8   0.14270299  0.13735598  0.13357396  0.12065220  0.12001874  0.7477220  0.8506097  1.0000000  0.0000000  0.0000000  0.00000000
r9  -0.03655551 -0.03518579 -0.03421697 -0.03090687 -0.03074460 -0.1915402 -0.2178964 -0.1931825  1.0000000  0.0000000  0.00000000
r10 -0.03339964 -0.03214817 -0.03126299 -0.02823865 -0.02809039 -0.1750044 -0.1990852 -0.1765049  0.5322619  1.0000000  0.00000000
r11 -0.02697196 -0.02596134 -0.02524651 -0.02280420 -0.02268447 -0.1413252 -0.1607718 -0.1425370  0.4298294  0.3927219  1.00000000
r12  0.15370400  0.14794479  0.14387121  0.12995331  0.12927102  0.1934226  0.2200379  0.1950811 -0.1006047 -0.0919194 -0.07422974
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02895133
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r2   0.42774097  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r3   0.36654713  0.31901609  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r4   0.30521722  0.27187316  0.37402604  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r5   0.29057161  0.29534384  0.32231748  0.30622211  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r6   0.15388957  0.13724053  0.12178149  0.15076541  0.15704718  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r7   0.19234193  0.18489785  0.14381353  0.16896945  0.20891750  0.8272949  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r8   0.15592063  0.15679129  0.12167237  0.15418811  0.17547613  0.7484041  0.8588492  1.0000000  0.0000000  0.0000000  0.0000000
r9  -0.13029710 -0.11115793 -0.06737567 -0.05170297 -0.07117884 -0.2341795 -0.2479774 -0.2173052  1.0000000  0.0000000  0.0000000
r10 -0.10906576 -0.09127094 -0.05050746 -0.08211876 -0.07343862 -0.2247103 -0.2282690 -0.1978889  0.5190461  1.0000000  0.0000000
r11 -0.07550313 -0.07260664 -0.03334430 -0.03684458 -0.02703090 -0.1514432 -0.1603295 -0.1382941  0.4410891  0.4519533  1.0000000
r12  0.14017241  0.20083442  0.15149140  0.13764679  0.24299334  0.2387190  0.3083136  0.2606587 -0.1930689 -0.1278560 -0.1444546
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03978528
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
ecvi 
0.02
# ---------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------

================================================================================
> # -------------------Target  variable rw2 ----------------------------------------
> #
> # MODEL 1 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 105,184 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 70,393 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 34,791 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
36808 33585 70393 
> addmargins(table(testdata$essround))

    8   Sum 
34791 34791 
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 57 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               70393
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               243.437     421.776
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.579
  Shift parameter                                            1.239
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             21591.255   14374.032
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.503

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.989       0.971
  Tucker-Lewis Index (TLI)                       0.982       0.952
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.026
  90 Percent confidence interval - lower         0.017       0.023
  90 Percent confidence interval - upper         0.021       0.028
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.746    0.606
    ipstrgvr          0.882    0.014   64.843    0.000    0.658    0.578
    ipbhprpr          1.014    0.017   60.413    0.000    0.756    0.604
    ipfruler          1.027    0.019   55.179    0.000    0.766    0.531
    imptradr          0.988    0.018   54.579    0.000    0.737    0.520

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.052    0.026    2.001    0.045    0.039    0.039

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.679    0.010  475.820    0.000    4.679    3.801
   .ipstrgvr          4.772    0.009  526.713    0.000    4.772    4.190
   .ipbhprpr          4.381    0.009  478.027    0.000    4.381    3.496
   .ipfruler          3.745    0.009  400.210    0.000    3.745    2.597
   .imptradr          4.204    0.010  409.406    0.000    4.204    2.967
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2|t1            2.163    0.018  118.875    0.000    2.163    2.163

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.958    0.010   91.359    0.000    0.958    0.633
   .ipstrgvr          0.864    0.008  104.060    0.000    0.864    0.666
   .ipbhprpr          0.999    0.011   89.134    0.000    0.999    0.636
   .ipfruler          1.492    0.017   86.201    0.000    1.492    0.718
   .imptradr          1.465    0.016   90.898    0.000    1.465    0.730
   .rw2               0.999                               0.999    0.999
    authoritarian     0.556    0.014   40.989    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.367
    ipstrgvr          0.334
    ipbhprpr          0.364
    ipfruler          0.282
    imptradr          0.270
    rw2               0.001

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5] [,6]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000    0
r2 0.35014259 1.00000000 0.00000000 0.00000000 0.00000000    0
r3 0.36577054 0.34869813 1.00000000 0.00000000 0.00000000    0
r4 0.32193650 0.30691005 0.32060840 1.00000000 0.00000000    0
r5 0.31517531 0.30046444 0.31387510 0.27626023 1.00000000    0
r6 0.02333301 0.02224394 0.02323676 0.02045206 0.02002253    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02696889
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]       [,4]       [,5] [,6]
r1 1.0000000 0.0000000 0.00000000 0.00000000 0.00000000    0
r2 0.4284608 1.0000000 0.00000000 0.00000000 0.00000000    0
r3 0.3635923 0.3177075 1.00000000 0.00000000 0.00000000    0
r4 0.3080646 0.2754201 0.37320185 1.00000000 0.00000000    0
r5 0.2914257 0.3001428 0.32176981 0.30770587 1.00000000    0
r6 0.0252074 0.1061955 0.02013757 0.02420474 0.07534144    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03294987
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.004
# --------------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 2 FOR rw2
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 105,184 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 70,393 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 34,791 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
36808 33585 70393 
> addmargins(table(testdata$essround))

    8   Sum 
34791 34791 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 18 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               70393
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                17.670      43.476
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.407
  Shift parameter                                            0.068
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            520285.635  389978.929
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.334

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.011       0.017
  90 Percent confidence interval - lower         0.006       0.013
  90 Percent confidence interval - upper         0.015       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.865    0.865
    imdfetn.x         1.132    0.003  355.722    0.000    0.979    0.979
    impcntr.x         1.009    0.002  500.199    0.000    0.873    0.873

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    prejudice         0.402    0.022   18.694    0.000    0.348    0.348

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.720    0.009  -83.117    0.000   -0.720   -0.720
    imsmetn.x|t2      0.601    0.008   72.401    0.000    0.601    0.601
    imsmetn.x|t3      1.526    0.013  121.866    0.000    1.526    1.526
    imdfetn.x|t1     -0.991    0.009 -104.638    0.000   -0.991   -0.991
    imdfetn.x|t2      0.278    0.008   35.105    0.000    0.278    0.278
    imdfetn.x|t3      1.256    0.011  117.739    0.000    1.256    1.256
    impcntr.x|t1     -1.052    0.010 -107.545    0.000   -1.052   -1.052
    impcntr.x|t2      0.125    0.008   15.904    0.000    0.125    0.125
    impcntr.x|t3      1.071    0.010  110.308    0.000    1.071    1.071
    rw2|t1            2.163    0.018  118.875    0.000    2.163    2.163

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.252                               0.252    0.252
   .imdfetn.x         0.041                               0.041    0.041
   .impcntr.x         0.238                               0.238    0.238
   .rw2               0.879                               0.879    0.879
    prejudice         0.748    0.003  235.449    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.748
    imdfetn.x         0.959
    impcntr.x         0.762
    rw2               0.121

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw2.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw2.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8468549 1.0000000 0.0000000  0
3 0.7548788 0.8546963 1.0000000  0
4 0.3009427 0.3407363 0.3037293  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.02589311
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw2t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw2t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8322945 1.0000000 0.0000000  0
3 0.7535236 0.8619307 1.0000000  0
4 0.2364439 0.3550823 0.3558568  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.0271097
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw2s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.001
# -------------------------------------------------------------------------------------

=================================================================================
> #
> # MODEL 3 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 105,184 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 70,393 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 34,791 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
36808 33585 70393 
> addmargins(table(testdata$essround))

    8   Sum 
34791 34791 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 67 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               70393
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               320.487     458.087
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.709
  Shift parameter                                            6.086
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            547132.034  337053.459
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.623

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.999
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.013       0.016
  90 Percent confidence interval - lower         0.012       0.014
  90 Percent confidence interval - upper         0.014       0.017
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.024       0.024

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.757    0.615
    ipstrgvr          0.884    0.015   60.688    0.000    0.669    0.588
    ipbhprpr          0.972    0.017   56.066    0.000    0.736    0.588
    ipfruler          1.000    0.019   51.536    0.000    0.758    0.525
    imptradr          0.975    0.019   51.332    0.000    0.738    0.521
  prejudice =~                                                          
    imsmetn.x         1.000                               0.865    0.865
    imdfetn.x         1.133    0.003  360.742    0.000    0.979    0.979
    impcntr.x         1.009    0.002  498.166    0.000    0.873    0.873

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian    -0.062    0.028   -2.235    0.025   -0.047   -0.047
    prejudice         0.415    0.024   17.563    0.000    0.359    0.359
  prejudice ~                                                           
    authoritarian     0.272    0.009   29.164    0.000    0.239    0.239

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.679    0.010  475.820    0.000    4.679    3.801
   .ipstrgvr          4.772    0.009  526.713    0.000    4.772    4.190
   .ipbhprpr          4.381    0.009  478.027    0.000    4.381    3.496
   .ipfruler          3.745    0.009  400.210    0.000    3.745    2.597
   .imptradr          4.204    0.010  409.406    0.000    4.204    2.967
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.720    0.009  -83.117    0.000   -0.720   -0.720
    imsmetn.x|t2      0.601    0.008   72.401    0.000    0.601    0.601
    imsmetn.x|t3      1.526    0.013  121.866    0.000    1.526    1.526
    imdfetn.x|t1     -0.991    0.009 -104.638    0.000   -0.991   -0.991
    imdfetn.x|t2      0.278    0.008   35.105    0.000    0.278    0.278
    imdfetn.x|t3      1.256    0.011  117.739    0.000    1.256    1.256
    impcntr.x|t1     -1.052    0.010 -107.545    0.000   -1.052   -1.052
    impcntr.x|t2      0.125    0.008   15.904    0.000    0.125    0.125
    impcntr.x|t3      1.071    0.010  110.308    0.000    1.071    1.071
    rw2|t1            2.163    0.018  118.875    0.000    2.163    2.163

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.941    0.011   83.175    0.000    0.941    0.621
   .ipstrgvr          0.849    0.009   93.796    0.000    0.849    0.655
   .ipbhprpr          1.028    0.012   84.622    0.000    1.028    0.655
   .ipfruler          1.505    0.018   83.112    0.000    1.505    0.724
   .imptradr          1.463    0.017   86.504    0.000    1.463    0.729
   .imsmetn.x         0.252                               0.252    0.252
   .imdfetn.x         0.041                               0.041    0.041
   .impcntr.x         0.238                               0.238    0.238
   .rw2               0.877                               0.877    0.877
    authoritarian     0.573    0.015   39.142    0.000    1.000    1.000
   .prejudice         0.705    0.004  180.659    0.000    0.943    0.943

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.379
    ipstrgvr          0.345
    ipbhprpr          0.345
    ipfruler          0.276
    imptradr          0.271
    imsmetn.x         0.748
    imdfetn.x         0.959
    impcntr.x         0.762
    rw2               0.123
    prejudice         0.057

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.36157715 1.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.36148752 0.34530467 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.32321868 0.30874903 0.30867249 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.32047647 0.30612958 0.30605369 0.27365335 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.12690190 0.12122083 0.12119078 0.10836093 0.10744159 1.0000000 0.0000000 0.0000000    0
r7 0.14375763 0.13732198 0.13728794 0.12275397 0.12171251 0.8468717 1.0000000 0.0000000    0
r8 0.12808808 0.12235391 0.12232358 0.10937380 0.10844587 0.7545629 0.8547876 1.0000000    0
r9 0.02389352 0.02282387 0.02281821 0.02040256 0.02022947 0.3008759 0.3408398 0.3036883    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02351137
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.4284608 1.0000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.3635923 0.3177075 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.3080646 0.2754201 0.37320185 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.2914257 0.3001428 0.32176981 0.30770587 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.1530991 0.1254479 0.10867220 0.14627181 0.14481273 1.0000000 0.0000000 0.0000000    0
r7 0.1929634 0.1747167 0.13030714 0.16434979 0.19874992 0.8322945 1.0000000 0.0000000    0
r8 0.1562761 0.1454463 0.10707784 0.14626555 0.16454669 0.7535236 0.8619307 1.0000000    0
r9 0.0252074 0.1061955 0.02013757 0.02420474 0.07534144 0.2364439 0.3550823 0.3558568    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03388834
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.006
# -----------------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 4 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 6 | essround == 7 | essround == 8 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 105,184 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, (essround == 6 | essround == 7 ))    # results in 70,393 cases in rounds 6 and 7.
> testdata  <-subset(sset1,  essround == 8)    # results in 34,791 cases in round 8 
> addmargins(table(traindata$essround))

    6     7   Sum 
36808 33585 70393 
> addmargins(table(testdata$essround))

    8   Sum 
34791 34791 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 85 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               70393
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                              1442.643    1633.238
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.891
  Shift parameter                                           14.628
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            568334.870  343402.552
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.655

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.995
  Tucker-Lewis Index (TLI)                       0.997       0.994
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.021
  90 Percent confidence interval - lower         0.019       0.020
  90 Percent confidence interval - upper         0.021       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.030       0.030

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.765    0.622
    ipstrgvr          0.882    0.015   59.908    0.000    0.675    0.593
    ipbhprpr          0.953    0.017   55.011    0.000    0.729    0.582
    ipfruler          0.983    0.019   50.624    0.000    0.752    0.522
    imptradr          0.959    0.019   50.400    0.000    0.733    0.518
  prejudice =~                                                          
    imsmetn.x         1.000                               0.865    0.865
    imdfetn.x         1.132    0.003  365.533    0.000    0.979    0.979
    impcntr.x         1.008    0.002  495.659    0.000    0.872    0.872
  trust =~                                                              
    ppltrst.x         1.000                               1.720    0.759
    pplfair.x         0.886    0.015   59.372    0.000    1.524    0.706
    pplhlp.x          0.745    0.013   58.315    0.000    1.282    0.577

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian    -0.071    0.028   -2.544    0.011   -0.054   -0.054
    prejudice         0.424    0.023   18.069    0.000    0.367    0.367
    trust             0.010    0.013    0.804    0.422    0.018    0.018
  prejudice ~                                                           
    authoritarian     0.291    0.009   30.939    0.000    0.257    0.257
  trust ~                                                               
    prejudice        -0.576    0.015  -38.143    0.000   -0.289   -0.289

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.679    0.010  475.820    0.000    4.679    3.801
   .ipstrgvr          4.772    0.009  526.713    0.000    4.772    4.190
   .ipbhprpr          4.381    0.009  478.027    0.000    4.381    3.496
   .ipfruler          3.745    0.009  400.210    0.000    3.745    2.597
   .imptradr          4.204    0.010  409.406    0.000    4.204    2.967
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         4.960    0.014  348.925    0.000    4.960    2.190
   .pplfair.x         5.659    0.014  391.704    0.000    5.659    2.623
   .pplhlp.x          4.926    0.014  348.766    0.000    4.926    2.216
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.720    0.009  -83.117    0.000   -0.720   -0.720
    imsmetn.x|t2      0.601    0.008   72.401    0.000    0.601    0.601
    imsmetn.x|t3      1.526    0.013  121.866    0.000    1.526    1.526
    imdfetn.x|t1     -0.991    0.009 -104.638    0.000   -0.991   -0.991
    imdfetn.x|t2      0.278    0.008   35.105    0.000    0.278    0.278
    imdfetn.x|t3      1.256    0.011  117.739    0.000    1.256    1.256
    impcntr.x|t1     -1.052    0.010 -107.545    0.000   -1.052   -1.052
    impcntr.x|t2      0.125    0.008   15.904    0.000    0.125    0.125
    impcntr.x|t3      1.071    0.010  110.308    0.000    1.071    1.071
    rw2|t1            2.163    0.018  118.875    0.000    2.163    2.163

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.930    0.011   80.992    0.000    0.930    0.614
   .ipstrgvr          0.842    0.009   91.155    0.000    0.842    0.649
   .ipbhprpr          1.039    0.012   83.972    0.000    1.039    0.662
   .ipfruler          1.513    0.018   82.582    0.000    1.513    0.728
   .imptradr          1.470    0.017   85.554    0.000    1.470    0.732
   .imsmetn.x         0.252                               0.252    0.252
   .imdfetn.x         0.042                               0.042    0.042
   .impcntr.x         0.240                               0.240    0.240
   .ppltrst.x         2.173    0.048   45.542    0.000    2.173    0.423
   .pplfair.x         2.333    0.039   59.860    0.000    2.333    0.501
   .pplhlp.x          3.296    0.037   88.439    0.000    3.296    0.667
   .rw2               0.876                               0.876    0.876
    authoritarian     0.585    0.015   38.916    0.000    1.000    1.000
   .prejudice         0.698    0.004  172.975    0.000    0.934    0.934
   .trust             2.710    0.061   44.165    0.000    0.916    0.916

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.386
    ipstrgvr          0.351
    ipbhprpr          0.338
    ipfruler          0.272
    imptradr          0.268
    imsmetn.x         0.748
    imdfetn.x         0.958
    impcntr.x         0.760
    ppltrst.x         0.577
    pplfair.x         0.499
    pplhlp.x          0.333
    rw2               0.124
    prejudice         0.066
    trust             0.084

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]        [,9]       [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r2   0.36827481  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r3   0.36160762  0.34473334  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r4   0.32422726  0.30909732  0.30350147  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r5   0.32169715  0.30668528  0.30113309  0.27000415  1.00000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r6   0.13822080  0.13177078  0.12938522  0.11601032  0.11510503  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r7   0.15646801  0.14916649  0.14646600  0.13132541  0.13030061  0.8466626  1.0000000  0.0000000  0.00000000  0.00000000  0.00000000
r8   0.13934809  0.13284547  0.13044045  0.11695647  0.11604380  0.7540252  0.8535677  1.0000000  0.00000000  0.00000000  0.00000000
r9  -0.03512923 -0.03348994 -0.03288364 -0.02948437 -0.02925429 -0.1900875 -0.2151818 -0.1916378  1.00000000  0.00000000  0.00000000
r10 -0.03267833 -0.03115341 -0.03058941 -0.02742730 -0.02721327 -0.1768254 -0.2001690 -0.1782676  0.53629219  1.00000000  0.00000000
r11 -0.02668931 -0.02544386 -0.02498323 -0.02240065 -0.02222584 -0.1444183 -0.1634836 -0.1455961  0.43800483  0.40744605  1.00000000
r12  0.02425244  0.02312071  0.02270213  0.02035535  0.02019651  0.3010537  0.3407973  0.3035091 -0.06433085 -0.05984261 -0.04887513
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.03010071
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]       [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r2   0.42846079  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r3   0.36359231  0.31770750  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r4   0.30806460  0.27542011  0.37320185  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r5   0.29142573  0.30014284  0.32176981  0.30770587  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r6   0.15309909  0.12544788  0.10867220  0.14627181  0.14481273  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r7   0.19296338  0.17471666  0.13030714  0.16434979  0.19874992  0.8322945  1.0000000  0.0000000  0.0000000  0.00000000  0.00000000
r8   0.15627609  0.14544631  0.10707784  0.14626555  0.16454669  0.7535236  0.8619307  1.0000000  0.0000000  0.00000000  0.00000000
r9  -0.13049566 -0.10997754 -0.06399772 -0.05274237 -0.07796766 -0.2391319 -0.2523877 -0.2208235  1.0000000  0.00000000  0.00000000
r10 -0.11616960 -0.09148992 -0.05085471 -0.08339734 -0.07945964 -0.2349217 -0.2395077 -0.2096782  0.5267127  1.00000000  0.00000000
r11 -0.07897967 -0.07704747 -0.03277043 -0.03950985 -0.03392308 -0.1602597 -0.1693200 -0.1466783  0.4548336  0.46611828  1.00000000
r12  0.02520740  0.10619548  0.02013757  0.02420474  0.07534144  0.2364439  0.3550823  0.3558568 -0.1336084 -0.07578585 -0.08498077
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03722769
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
ecvi 
0.02

# ###############################################################################

# PERIOD D

Testing block 7: Temporal validation set design, structural equation models 
> # run sequentially # SRMR as criterion
> #
> # ------------------- SEM in LONGITUDINAL VALIDATION SET DESIGN ------------------
> #
> # -------------------Target  variable rw  ----------------------------------------  
> # PERIOD D 
> #
> # MODEL 1 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 62,320 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,279 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,041 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31279 31279 
> addmargins(table(testdata$essround))

    9   Sum 
31041 31041 
> #
> #
> # scale direction reversed for value items
> #
> library(car)
Loading required package: carData
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
This is lavaan 0.6-8
lavaan is FREE software! Please report any bugs.
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 53 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               31279
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               141.908     284.381
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.501
  Shift parameter                                            0.958
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             10386.836    6785.714
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.532

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.987       0.959
  Tucker-Lewis Index (TLI)                       0.979       0.932
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.031
  90 Percent confidence interval - lower         0.019       0.028
  90 Percent confidence interval - upper         0.025       0.034
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.032       0.032

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.780    0.620
    ipstrgvr          0.884    0.020   43.809    0.000    0.689    0.579
    ipbhprpr          0.986    0.023   42.520    0.000    0.769    0.602
    ipfruler          0.991    0.025   40.058    0.000    0.773    0.535
    imptradr          0.959    0.026   37.456    0.000    0.748    0.520

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.319    0.026   12.087    0.000    0.249    0.249

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.567    0.013  338.442    0.000    4.567    3.634
   .ipstrgvr          4.668    0.013  361.264    0.000    4.668    3.918
   .ipbhprpr          4.274    0.013  335.902    0.000    4.274    3.347
   .ipfruler          3.619    0.013  276.444    0.000    3.619    2.504
   .imptradr          4.136    0.014  289.585    0.000    4.136    2.874
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw|t1             1.613    0.017   94.219    0.000    1.613    1.613

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.971    0.015   66.640    0.000    0.971    0.615
   .ipstrgvr          0.944    0.014   66.947    0.000    0.944    0.665
   .ipbhprpr          1.039    0.016   65.205    0.000    1.039    0.637
   .ipfruler          1.492    0.024   60.967    0.000    1.492    0.714
   .imptradr          1.512    0.025   59.464    0.000    1.512    0.730
   .rw                0.938                               0.938    0.938
    authoritarian     0.608    0.022   28.044    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.385
    ipstrgvr          0.335
    ipbhprpr          0.363
    ipfruler          0.286
    imptradr          0.270
    rw                0.062

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3590446 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3736398 0.3484502 1.0000000 0.0000000 0.0000000    0
r4 0.3318144 0.3094444 0.3220235 1.0000000 0.0000000    0
r5 0.3224022 0.3006669 0.3128891 0.2778641 1.0000000    0
r6 0.1544421 0.1440301 0.1498850 0.1331068 0.1293311    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.03230696
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000    0
r2 0.4109029 1.0000000 0.00000000 0.0000000 0.0000000    0
r3 0.3455826 0.2985600 1.00000000 0.0000000 0.0000000    0
r4 0.2635002 0.2497681 0.32841965 1.0000000 0.0000000    0
r5 0.2671222 0.2930335 0.29547127 0.2706124 1.0000000    0
r6 0.1406554 0.1576216 0.08409704 0.1255062 0.1939906    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.0356211
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.005

========================================================================================
> #
> # MODEL 2 FOR rw    
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 62,320 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,279 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,041 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31279 31279 
> addmargins(table(testdata$essround)) 

    9   Sum 
31041 31041 
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 15 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               31279
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 5.548      13.220
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.062       0.001
  Scaling correction factor                                  0.422
  Shift parameter                                            0.076
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            265929.454  198925.782
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.337

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.008       0.013
  90 Percent confidence interval - lower         0.000       0.007
  90 Percent confidence interval - upper         0.015       0.021
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.013       0.013

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.848    0.848
    imdfetn.x         1.150    0.005  254.004    0.000    0.975    0.975
    impcntr.x         1.039    0.003  333.929    0.000    0.881    0.881

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    prejudice         0.422    0.018   23.212    0.000    0.358    0.358

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.662    0.012  -54.261    0.000   -0.662   -0.662
    imsmetn.x|t2      0.707    0.012   60.868    0.000    0.707    0.707
    imsmetn.x|t3      1.614    0.017   97.768    0.000    1.614    1.614
    imdfetn.x|t1     -0.951    0.014  -69.861    0.000   -0.951   -0.951
    imdfetn.x|t2      0.309    0.011   27.989    0.000    0.309    0.309
    imdfetn.x|t3      1.296    0.014   93.314    0.000    1.296    1.296
    impcntr.x|t1     -0.959    0.014  -70.439    0.000   -0.959   -0.959
    impcntr.x|t2      0.271    0.011   24.539    0.000    0.271    0.271
    impcntr.x|t3      1.254    0.013   93.233    0.000    1.254    1.254
    rw|t1             1.613    0.017   94.219    0.000    1.613    1.613

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.281                               0.281    0.281
   .imdfetn.x         0.050                               0.050    0.050
   .impcntr.x         0.223                               0.223    0.223
   .rw                0.872                               0.872    0.872
    prejudice         0.719    0.005  155.734    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.719
    imdfetn.x         0.950
    impcntr.x         0.777
    rw                0.128

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8266712 1.0000000 0.0000000  0
3 0.7474847 0.8592779 1.0000000  0
4 0.3032179 0.3485669 0.3151778  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.01300004
> #
> # same model for testdata to get its observed covariance matrix
> #
> rwt.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- as.data.frame(rwt.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8364565 1.0000000 0.0000000  0
3 0.7507913 0.8683101 1.0000000  0
4 0.2738877 0.3895052 0.3717389  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.0243385
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rws.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.001

=================================================================================
> #
> # MODEL 3 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 62,320 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,279 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,041 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31279 31279 
> addmargins(table(testdata$essround))

    9   Sum 
31041 31041 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 66 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               31279
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               235.468     391.745
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.610
  Shift parameter                                            5.555
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            280707.910  164730.901
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.704

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.016       0.022
  90 Percent confidence interval - lower         0.015       0.020
  90 Percent confidence interval - upper         0.018       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.775    0.617
    ipstrgvr          0.888    0.022   40.479    0.000    0.689    0.578
    ipbhprpr          0.942    0.025   38.387    0.000    0.730    0.572
    ipfruler          1.010    0.027   36.778    0.000    0.783    0.542
    imptradr          1.014    0.029   35.273    0.000    0.786    0.546
  prejudice =~                                                          
    imsmetn.x         1.000                               0.847    0.847
    imdfetn.x         1.152    0.004  256.479    0.000    0.976    0.976
    impcntr.x         1.039    0.003  331.952    0.000    0.881    0.881

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.200    0.029    6.882    0.000    0.155    0.155
    prejudice         0.366    0.021   17.320    0.000    0.310    0.310
  prejudice ~                                                           
    authoritarian     0.336    0.013   24.991    0.000    0.307    0.307

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.567    0.013  338.442    0.000    4.567    3.634
   .ipstrgvr          4.668    0.013  361.264    0.000    4.668    3.918
   .ipbhprpr          4.274    0.013  335.902    0.000    4.274    3.347
   .ipfruler          3.619    0.013  276.444    0.000    3.619    2.504
   .imptradr          4.136    0.014  289.585    0.000    4.136    2.874
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.662    0.012  -54.261    0.000   -0.662   -0.662
    imsmetn.x|t2      0.707    0.012   60.868    0.000    0.707    0.707
    imsmetn.x|t3      1.614    0.017   97.768    0.000    1.614    1.614
    imdfetn.x|t1     -0.951    0.014  -69.861    0.000   -0.951   -0.951
    imdfetn.x|t2      0.309    0.011   27.989    0.000    0.309    0.309
    imdfetn.x|t3      1.296    0.014   93.314    0.000    1.296    1.296
    impcntr.x|t1     -0.959    0.014  -70.439    0.000   -0.959   -0.959
    impcntr.x|t2      0.271    0.011   24.539    0.000    0.271    0.271
    impcntr.x|t3      1.254    0.013   93.233    0.000    1.254    1.254
    rw|t1             1.613    0.017   94.219    0.000    1.613    1.613

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.978    0.017   58.610    0.000    0.978    0.619
   .ipstrgvr          0.945    0.016   59.149    0.000    0.945    0.666
   .ipbhprpr          1.097    0.018   59.792    0.000    1.097    0.673
   .ipfruler          1.475    0.026   57.336    0.000    1.475    0.706
   .imptradr          1.453    0.026   55.949    0.000    1.453    0.702
   .imsmetn.x         0.282                               0.282    0.282
   .imdfetn.x         0.047                               0.047    0.047
   .impcntr.x         0.225                               0.225    0.225
   .rw                0.850                               0.850    0.850
    authoritarian     0.601    0.023   26.211    0.000    1.000    1.000
   .prejudice         0.650    0.006  108.026    0.000    0.906    0.906

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.381
    ipstrgvr          0.334
    ipbhprpr          0.327
    ipfruler          0.294
    imptradr          0.298
    imsmetn.x         0.718
    imdfetn.x         0.953
    impcntr.x         0.775
    rw                0.150
    prejudice         0.094

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3567021 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3528169 0.3305504 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3344168 0.3133115 0.3098989 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.3370935 0.3158193 0.3123794 0.2960882 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1606211 0.1504842 0.1488451 0.1410825 0.1422118 1.0000000 0.0000000 0.0000000    0
r7 0.1850587 0.1733795 0.1714910 0.1625475 0.1638485 0.8269271 1.0000000 0.0000000    0
r8 0.1669593 0.1564223 0.1547186 0.1466497 0.1478235 0.7460505 0.8595579 1.0000000    0
r9 0.1545904 0.1448341 0.1432565 0.1357854 0.1368723 0.3029385 0.3490289 0.3148926    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02626257
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]       [,2]       [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4109029 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3455826 0.29855996 1.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.2635002 0.24976814 0.32841965 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.2671222 0.29303352 0.29547127 0.2706124 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1279331 0.08310432 0.09430607 0.1055401 0.1424978 1.0000000 0.0000000 0.0000000    0
r7 0.1649577 0.12691395 0.10725299 0.1336551 0.1820019 0.8364565 1.0000000 0.0000000    0
r8 0.1399372 0.11545589 0.09705851 0.1248039 0.1658408 0.7507913 0.8683101 1.0000000    0
r9 0.1406554 0.15762161 0.08409704 0.1255062 0.1939906 0.2738877 0.3895052 0.3717389    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03563337
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.009

========================================================================================
> #
> # MODEL 4 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 62,320 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,279 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,041 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31279 31279 
> addmargins(table(testdata$essround))

    9   Sum 
31041 31041 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=traindata, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 83 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               31279
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               597.447     751.427
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.810
  Shift parameter                                           14.114
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            293899.603  170332.209
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.726

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.998       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.021
  90 Percent confidence interval - lower         0.017       0.020
  90 Percent confidence interval - upper         0.020       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.784    0.624
    ipstrgvr          0.885    0.022   39.820    0.000    0.694    0.583
    ipbhprpr          0.920    0.024   37.774    0.000    0.721    0.565
    ipfruler          0.992    0.027   36.124    0.000    0.778    0.538
    imptradr          1.000    0.029   34.672    0.000    0.784    0.545
  prejudice =~                                                          
    imsmetn.x         1.000                               0.848    0.848
    imdfetn.x         1.151    0.004  256.519    0.000    0.976    0.976
    impcntr.x         1.038    0.003  328.132    0.000    0.880    0.880
  trust =~                                                              
    ppltrst.x         1.000                               1.711    0.757
    pplfair.x         0.894    0.019   46.299    0.000    1.531    0.723
    pplhlp.x          0.734    0.017   43.898    0.000    1.255    0.578

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.192    0.029    6.586    0.000    0.150    0.150
    prejudice         0.323    0.023   13.787    0.000    0.273    0.273
    trust            -0.061    0.011   -5.680    0.000   -0.104   -0.104
  prejudice ~                                                           
    authoritarian     0.351    0.014   25.710    0.000    0.324    0.324
  trust ~                                                               
    prejudice        -0.689    0.022  -31.580    0.000   -0.341   -0.341

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.567    0.013  338.442    0.000    4.567    3.634
   .ipstrgvr          4.668    0.013  361.264    0.000    4.668    3.918
   .ipbhprpr          4.274    0.013  335.902    0.000    4.274    3.347
   .ipfruler          3.619    0.013  276.444    0.000    3.619    2.504
   .imptradr          4.136    0.014  289.585    0.000    4.136    2.874
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.109    0.020  249.614    0.000    5.109    2.259
   .pplfair.x         5.780    0.020  286.099    0.000    5.780    2.731
   .pplhlp.x          5.062    0.020  257.230    0.000    5.062    2.329
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.662    0.012  -54.261    0.000   -0.662   -0.662
    imsmetn.x|t2      0.707    0.012   60.868    0.000    0.707    0.707
    imsmetn.x|t3      1.614    0.017   97.768    0.000    1.614    1.614
    imdfetn.x|t1     -0.951    0.014  -69.861    0.000   -0.951   -0.951
    imdfetn.x|t2      0.309    0.011   27.989    0.000    0.309    0.309
    imdfetn.x|t3      1.296    0.014   93.314    0.000    1.296    1.296
    impcntr.x|t1     -0.959    0.014  -70.439    0.000   -0.959   -0.959
    impcntr.x|t2      0.271    0.011   24.539    0.000    0.271    0.271
    impcntr.x|t3      1.254    0.013   93.233    0.000    1.254    1.254
    rw|t1             1.613    0.017   94.219    0.000    1.613    1.613

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.964    0.017   56.642    0.000    0.964    0.611
   .ipstrgvr          0.938    0.016   57.469    0.000    0.938    0.661
   .ipbhprpr          1.110    0.019   59.382    0.000    1.110    0.681
   .ipfruler          1.484    0.026   56.868    0.000    1.484    0.710
   .imptradr          1.457    0.027   54.955    0.000    1.457    0.703
   .imsmetn.x         0.282                               0.282    0.282
   .imdfetn.x         0.048                               0.048    0.048
   .impcntr.x         0.226                               0.226    0.226
   .ppltrst.x         2.184    0.062   35.204    0.000    2.184    0.427
   .pplfair.x         2.136    0.054   39.753    0.000    2.136    0.477
   .pplhlp.x          3.149    0.052   61.115    0.000    3.149    0.666
   .rw                0.842                               0.842    0.842
    authoritarian     0.615    0.024   26.093    0.000    1.000    1.000
   .prejudice         0.643    0.006  102.543    0.000    0.895    0.895
   .trust             2.588    0.078   33.258    0.000    0.884    0.884

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.389
    ipstrgvr          0.339
    ipbhprpr          0.319
    ipfruler          0.290
    imptradr          0.297
    imsmetn.x         0.718
    imdfetn.x         0.952
    impcntr.x         0.774
    ppltrst.x         0.573
    pplfair.x         0.523
    pplhlp.x          0.334
    rw                0.158
    prejudice         0.105
    trust             0.116

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r2   0.36348676  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r3   0.35239536  0.32902393  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r4   0.33590096  0.31362347  0.30405359  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r5   0.33978775  0.31725248  0.30757187  0.29317550  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r6   0.17158005  0.16020058  0.15531224  0.14804261  0.14975565  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r7   0.19748420  0.18438673  0.17876037  0.17039322  0.17236488  0.8269117  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r8   0.17805763  0.16624856  0.16117566  0.15363159  0.15540930  0.7455682  0.8581297  1.0000000  0.0000000  0.0000000  0.0000000
r9  -0.05228743 -0.04881964 -0.04732996 -0.04511461 -0.04563664 -0.2189395 -0.2519937 -0.2272050  1.0000000  0.0000000  0.0000000
r10 -0.04996418 -0.04665048 -0.04522699 -0.04311007 -0.04360891 -0.2092115 -0.2407970 -0.2171098  0.5473554  1.0000000  0.0000000
r11 -0.03990339 -0.03725693 -0.03612008 -0.03442942 -0.03482781 -0.1670847 -0.1923101 -0.1733925  0.4371398  0.4177167  1.0000000
r12  0.15630303  0.14593676  0.14148366  0.13486130  0.13642181  0.3032212  0.3489997  0.3146685 -0.1621820 -0.1549759 -0.1237699
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02801743
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rwt.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rwt.fit <- sem(rwt.model, data=testdata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> #
> xt <- unlist(rwt.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r2   0.41090289  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r3   0.34558261  0.29855996  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r4   0.26350020  0.24976814  0.32841965  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r5   0.26712223  0.29303352  0.29547127  0.27061242  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r6   0.12793314  0.08310432  0.09430607  0.10554010  0.14249780  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r7   0.16495767  0.12691395  0.10725299  0.13365514  0.18200190  0.8364565  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r8   0.13993724  0.11545589  0.09705851  0.12480391  0.16584083  0.7507913  0.8683101  1.0000000  0.0000000  0.0000000  0.0000000
r9  -0.12729221 -0.09363662 -0.05120430 -0.03433483 -0.06804978 -0.2315635 -0.2558455 -0.2289064  1.0000000  0.0000000  0.0000000
r10 -0.10160288 -0.08121829 -0.05223069 -0.07081756 -0.07798033 -0.2132128 -0.2212779 -0.1972201  0.5108466  1.0000000  0.0000000
r11 -0.07095826 -0.05602396 -0.02122607 -0.03964990 -0.03502856 -0.1497363 -0.1650445 -0.1327551  0.4382497  0.4766645  1.0000000
r12  0.14065540  0.15762161  0.08409704  0.12550623  0.19399061  0.2738877  0.3895052  0.3717389 -0.1509798 -0.1658194 -0.1030644
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03415365
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rws.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rws.fit <- sem(rws.model, data=sset1, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+                meanstructure = TRUE)
> fitmeasures(rws.fit, fit.measures = c("ecvi"))
 ecvi 
0.021

================================================================================ 
> # -------------------Target  variable rw1 ----------------------------------------
> #
> # MODEL 1 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 63,585 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,938 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,647 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31938 31938 
> addmargins(table(testdata$essround))

    9   Sum 
31647 31647 
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 53 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               31938
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               142.197     273.558
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.522
  Shift parameter                                            0.994
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             10732.119    7035.941
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.526

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.988       0.962
  Tucker-Lewis Index (TLI)                       0.979       0.937
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.030
  90 Percent confidence interval - lower         0.018       0.027
  90 Percent confidence interval - upper         0.025       0.033
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.034       0.034

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.779    0.621
    ipstrgvr          0.882    0.020   44.484    0.000    0.687    0.578
    ipbhprpr          0.988    0.023   43.133    0.000    0.769    0.604
    ipfruler          0.990    0.025   40.306    0.000    0.771    0.534
    imptradr          0.961    0.025   38.109    0.000    0.748    0.521

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.383    0.028   13.654    0.000    0.298    0.298

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.571    0.013  343.505    0.000    4.571    3.642
   .ipstrgvr          4.671    0.013  367.101    0.000    4.671    3.928
   .ipbhprpr          4.279    0.013  341.210    0.000    4.279    3.361
   .ipfruler          3.625    0.013  280.467    0.000    3.625    2.511
   .imptradr          4.143    0.014  293.958    0.000    4.143    2.886
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1|t1            1.821    0.020   91.493    0.000    1.821    1.821

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.968    0.014   67.329    0.000    0.968    0.615
   .ipstrgvr          0.942    0.014   67.968    0.000    0.942    0.666
   .ipbhprpr          1.029    0.016   65.946    0.000    1.029    0.635
   .ipfruler          1.490    0.024   61.655    0.000    1.490    0.715
   .imptradr          1.501    0.025   60.402    0.000    1.501    0.728
   .rw1               0.911                               0.911    0.911
    authoritarian     0.607    0.021   28.432    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.385
    ipstrgvr          0.334
    ipbhprpr          0.365
    ipfruler          0.285
    imptradr          0.272
    rw1               0.089

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3585672 1.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3750995 0.3491789 1.0000000 0.0000000 0.0000000    0
r4 0.3315930 0.3086788 0.3229110 1.0000000 0.0000000    0
r5 0.3234733 0.3011202 0.3150038 0.2784676 1.0000000    0
r6 0.1852318 0.1724316 0.1803819 0.1594600 0.1555553    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.03392125
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000    0
r2 0.4113727 1.0000000 0.00000000 0.0000000 0.0000000    0
r3 0.3455108 0.3001472 1.00000000 0.0000000 0.0000000    0
r4 0.2631743 0.2495993 0.32809179 1.0000000 0.0000000    0
r5 0.2672335 0.2932722 0.29277295 0.2684874 1.0000000    0
r6 0.1148413 0.1286392 0.07336286 0.1315864 0.1823466    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.04248533
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.005

========================================================================================
> #
> # MODEL 2 FOR rw1
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 63,585 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,938 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,647 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31938 31938 
> addmargins(table(testdata$essround))

    9   Sum 
31647 31647 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 16 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               31938
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 1.513       4.138
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.469       0.126
  Scaling correction factor                                  0.373
  Shift parameter                                            0.085
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            271585.532  200225.561
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.356

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.000       0.006
  90 Percent confidence interval - lower         0.000       0.000
  90 Percent confidence interval - upper         0.010       0.014
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                     0.000
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.007       0.007

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.849    0.849
    imdfetn.x         1.148    0.004  257.609    0.000    0.975    0.975
    impcntr.x         1.038    0.003  339.232    0.000    0.881    0.881

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    prejudice         0.354    0.021   17.019    0.000    0.301    0.301

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.668    0.012  -55.357    0.000   -0.668   -0.668
    imsmetn.x|t2      0.700    0.011   61.076    0.000    0.700    0.700
    imsmetn.x|t3      1.607    0.016   98.361    0.000    1.607    1.607
    imdfetn.x|t1     -0.957    0.013  -71.139    0.000   -0.957   -0.957
    imdfetn.x|t2      0.305    0.011   27.955    0.000    0.305    0.305
    imdfetn.x|t3      1.291    0.014   94.141    0.000    1.291    1.291
    impcntr.x|t1     -0.963    0.013  -71.533    0.000   -0.963   -0.963
    impcntr.x|t2      0.267    0.011   24.524    0.000    0.267    0.267
    impcntr.x|t3      1.249    0.013   93.917    0.000    1.249    1.249
    rw1|t1            1.821    0.020   91.493    0.000    1.821    1.821

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.279                               0.279    0.279
   .imdfetn.x         0.050                               0.050    0.050
   .impcntr.x         0.223                               0.223    0.223
   .rw1               0.909                               0.909    0.909
    prejudice         0.721    0.005  158.203    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.721
    imdfetn.x         0.950
    impcntr.x         0.777
    rw1               0.091

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw1.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw1.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8273266 1.0000000 0.0000000  0
3 0.7481266 0.8589161 1.0000000  0
4 0.2554155 0.2932398 0.2651679  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.007255389
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw1t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw1t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8360909 1.0000000 0.0000000  0
3 0.7507068 0.8684611 1.0000000  0
4 0.2280875 0.3361144 0.3211493  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.02427662
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw1s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.001

=================================================================================
> #
> # MODEL 3 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 63,585 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,938 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,647 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31938 31938 
> addmargins(table(testdata$essround))

    9   Sum 
31647 31647 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 67 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               31938
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               234.319     388.672
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.612
  Shift parameter                                            5.498
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            286849.997  168483.526
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.703

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.016       0.021
  90 Percent confidence interval - lower         0.014       0.019
  90 Percent confidence interval - upper         0.018       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.026       0.026

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.774    0.616
    ipstrgvr          0.889    0.022   41.273    0.000    0.688    0.578
    ipbhprpr          0.944    0.024   39.087    0.000    0.730    0.574
    ipfruler          1.010    0.027   37.091    0.000    0.781    0.541
    imptradr          1.017    0.028   36.009    0.000    0.787    0.548
  prejudice =~                                                          
    imsmetn.x         1.000                               0.848    0.848
    imdfetn.x         1.151    0.004  260.054    0.000    0.976    0.976
    impcntr.x         1.038    0.003  336.912    0.000    0.880    0.880

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.297    0.031    9.453    0.000    0.230    0.230
    prejudice         0.271    0.024   11.260    0.000    0.230    0.230
  prejudice ~                                                           
    authoritarian     0.338    0.013   25.439    0.000    0.308    0.308

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.571    0.013  343.505    0.000    4.571    3.642
   .ipstrgvr          4.671    0.013  367.101    0.000    4.671    3.928
   .ipbhprpr          4.279    0.013  341.210    0.000    4.279    3.361
   .ipfruler          3.625    0.013  280.467    0.000    3.625    2.511
   .imptradr          4.143    0.014  293.958    0.000    4.143    2.886
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.668    0.012  -55.357    0.000   -0.668   -0.668
    imsmetn.x|t2      0.700    0.011   61.076    0.000    0.700    0.700
    imsmetn.x|t3      1.607    0.016   98.361    0.000    1.607    1.607
    imdfetn.x|t1     -0.957    0.013  -71.139    0.000   -0.957   -0.957
    imdfetn.x|t2      0.305    0.011   27.955    0.000    0.305    0.305
    imdfetn.x|t3      1.291    0.014   94.141    0.000    1.291    1.291
    impcntr.x|t1     -0.963    0.013  -71.533    0.000   -0.963   -0.963
    impcntr.x|t2      0.267    0.011   24.524    0.000    0.267    0.267
    impcntr.x|t3      1.249    0.013   93.917    0.000    1.249    1.249
    rw1|t1            1.821    0.020   91.493    0.000    1.821    1.821

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.977    0.016   59.664    0.000    0.977    0.620
   .ipstrgvr          0.941    0.016   60.141    0.000    0.941    0.665
   .ipbhprpr          1.087    0.018   60.692    0.000    1.087    0.671
   .ipfruler          1.475    0.025   57.953    0.000    1.475    0.707
   .imptradr          1.442    0.025   56.916    0.000    1.442    0.700
   .imsmetn.x         0.281                               0.281    0.281
   .imdfetn.x         0.048                               0.048    0.048
   .impcntr.x         0.225                               0.225    0.225
   .rw1               0.862                               0.862    0.862
    authoritarian     0.598    0.022   26.622    0.000    1.000    1.000
   .prejudice         0.651    0.006  109.650    0.000    0.905    0.905

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.380
    ipstrgvr          0.335
    ipbhprpr          0.329
    ipfruler          0.293
    imptradr          0.300
    imsmetn.x         0.719
    imdfetn.x         0.952
    impcntr.x         0.775
    rw1               0.138
    prejudice         0.095

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
        [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.3565137 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3536669 0.3318843 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.3334222 0.3128865 0.3103881 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.3378023 0.3169968 0.3144655 0.2964648 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1610488 0.1511297 0.1499229 0.1413410 0.1431977 1.0000000 0.0000000 0.0000000    0
r7 0.1853238 0.1739096 0.1725209 0.1626454 0.1647820 0.8275614 1.0000000 0.0000000    0
r8 0.1672093 0.1569108 0.1556578 0.1467476 0.1486754 0.7466714 0.8592177 1.0000000    0
r9 0.1854265 0.1740059 0.1726165 0.1627355 0.1648733 0.2551719 0.2936341 0.2649329    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02649836
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]      [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.0000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4113727 1.0000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3455108 0.3001472 1.00000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.2631743 0.2495993 0.32809179 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.2672335 0.2932722 0.29277295 0.2684874 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1253382 0.0809055 0.09511007 0.1088216 0.1400812 1.0000000 0.0000000 0.0000000    0
r7 0.1632795 0.1250815 0.10748022 0.1350666 0.1802120 0.8360909 1.0000000 0.0000000    0
r8 0.1375887 0.1118480 0.09777132 0.1267025 0.1632929 0.7507068 0.8684611 1.0000000    0
r9 0.1148413 0.1286392 0.07336286 0.1315864 0.1823466 0.2280875 0.3361144 0.3211493    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03927816
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.009

========================================================================================
> #
> # MODEL 4 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 63,585 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 31,938 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 31,647 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
31938 31938 
> addmargins(table(testdata$essround))

    9   Sum 
31647 31647 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw1.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1.fit <- sem(rw1.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                meanstructure = TRUE)
> #
> summary(rw1.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 81 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               31938
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               604.753     759.311
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.811
  Shift parameter                                           14.080
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            300410.777  174158.359
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.725

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.998       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.021
  90 Percent confidence interval - lower         0.017       0.020
  90 Percent confidence interval - upper         0.020       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.782    0.623
    ipstrgvr          0.886    0.022   40.593    0.000    0.693    0.583
    ipbhprpr          0.923    0.024   38.466    0.000    0.722    0.567
    ipfruler          0.993    0.027   36.465    0.000    0.776    0.538
    imptradr          1.003    0.028   35.382    0.000    0.784    0.546
  prejudice =~                                                          
    imsmetn.x         1.000                               0.848    0.848
    imdfetn.x         1.150    0.004  259.946    0.000    0.975    0.975
    impcntr.x         1.037    0.003  333.252    0.000    0.879    0.879
  trust =~                                                              
    ppltrst.x         1.000                               1.708    0.755
    pplfair.x         0.898    0.019   46.934    0.000    1.534    0.725
    pplhlp.x          0.737    0.017   44.491    0.000    1.259    0.579

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.290    0.032    9.190    0.000    0.227    0.227
    prejudice         0.212    0.026    8.106    0.000    0.180    0.180
    trust            -0.081    0.011   -7.214    0.000   -0.138   -0.138
  prejudice ~                                                           
    authoritarian     0.353    0.013   26.187    0.000    0.325    0.325
  trust ~                                                               
    prejudice        -0.688    0.022  -31.987    0.000   -0.342   -0.342

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.571    0.013  343.505    0.000    4.571    3.642
   .ipstrgvr          4.671    0.013  367.101    0.000    4.671    3.928
   .ipbhprpr          4.279    0.013  341.210    0.000    4.279    3.361
   .ipfruler          3.625    0.013  280.467    0.000    3.625    2.511
   .imptradr          4.143    0.014  293.958    0.000    4.143    2.886
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.103    0.020  252.858    0.000    5.103    2.257
   .pplfair.x         5.775    0.020  290.239    0.000    5.775    2.730
   .pplhlp.x          5.053    0.019  260.179    0.000    5.053    2.324
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.668    0.012  -55.357    0.000   -0.668   -0.668
    imsmetn.x|t2      0.700    0.011   61.076    0.000    0.700    0.700
    imsmetn.x|t3      1.607    0.016   98.361    0.000    1.607    1.607
    imdfetn.x|t1     -0.957    0.013  -71.139    0.000   -0.957   -0.957
    imdfetn.x|t2      0.305    0.011   27.955    0.000    0.305    0.305
    imdfetn.x|t3      1.291    0.014   94.141    0.000    1.291    1.291
    impcntr.x|t1     -0.963    0.013  -71.533    0.000   -0.963   -0.963
    impcntr.x|t2      0.267    0.011   24.524    0.000    0.267    0.267
    impcntr.x|t3      1.249    0.013   93.917    0.000    1.249    1.249
    rw1|t1            1.821    0.020   91.493    0.000    1.821    1.821

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.963    0.017   57.689    0.000    0.963    0.612
   .ipstrgvr          0.934    0.016   58.410    0.000    0.934    0.660
   .ipbhprpr          1.100    0.018   60.288    0.000    1.100    0.679
   .ipfruler          1.482    0.026   57.495    0.000    1.482    0.711
   .imptradr          1.446    0.026   55.884    0.000    1.446    0.702
   .imsmetn.x         0.280                               0.280    0.280
   .imdfetn.x         0.049                               0.049    0.049
   .impcntr.x         0.227                               0.227    0.227
   .ppltrst.x         2.197    0.061   36.091    0.000    2.197    0.430
   .pplfair.x         2.121    0.053   40.089    0.000    2.121    0.474
   .pplhlp.x          3.143    0.051   61.969    0.000    3.143    0.665
   .rw1               0.847                               0.847    0.847
    authoritarian     0.612    0.023   26.505    0.000    1.000    1.000
   .prejudice         0.644    0.006  104.032    0.000    0.894    0.894
   .trust             2.576    0.077   33.653    0.000    0.883    0.883

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.388
    ipstrgvr          0.340
    ipbhprpr          0.321
    ipfruler          0.289
    imptradr          0.298
    imsmetn.x         0.720
    imdfetn.x         0.951
    impcntr.x         0.773
    ppltrst.x         0.570
    pplfair.x         0.526
    pplhlp.x          0.335
    rw1               0.153
    prejudice         0.106
    trust             0.117

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw1.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw1.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r2   0.36323082  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r3   0.35319494  0.33034981  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r4   0.33503837  0.31336763  0.30470945  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r5   0.34036626  0.31835090  0.30955503  0.29364185  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r6   0.17204803  0.16091973  0.15647360  0.14842982  0.15079019  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r7   0.19777803  0.18498548  0.17987443  0.17062769  0.17334106  0.8275077  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r8   0.17834361  0.16680810  0.16219928  0.15386116  0.15630791  0.7461937  0.8577879  1.0000000  0.0000000  0.0000000  0.0000000
r9  -0.05235363 -0.04896732 -0.04761438 -0.04516668 -0.04588494 -0.2190488 -0.2518078 -0.2270642  1.0000000  0.0000000  0.0000000
r10 -0.05027176 -0.04702012 -0.04572097 -0.04337061 -0.04406031 -0.2103382 -0.2417945 -0.2180349  0.5476519  1.0000000  0.0000000
r11 -0.04013225 -0.03753644 -0.03649933 -0.03462302 -0.03517361 -0.1679143 -0.1930260 -0.1740586  0.4371938  0.4198086  1.0000000
r12  0.18735229  0.17523409  0.17039246  0.16163316  0.16420350  0.2554129  0.2936102  0.2647589 -0.1697937 -0.1630418 -0.1301573
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02821362
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw1t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1t.fit <- sem(rw1t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw1t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]      [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r2   0.41137275  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r3   0.34551084  0.30014723  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r4   0.26317434  0.24959930  0.32809179  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r5   0.26723351  0.29327221  0.29277295  0.26848745  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r6   0.12533815  0.08090550  0.09511007  0.10882160  0.14008123  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r7   0.16327950  0.12508153  0.10748022  0.13506661  0.18021203  0.8360909  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000
r8   0.13758865  0.11184802  0.09777132  0.12670251  0.16329291  0.7507068  0.8684611  1.0000000  0.0000000  0.0000000  0.0000000
r9  -0.12579334 -0.09281000 -0.05039339 -0.03488868 -0.06691659 -0.2324054 -0.2568728 -0.2286789  1.0000000  0.0000000  0.0000000
r10 -0.10173596 -0.08330735 -0.05396362 -0.07224387 -0.07780210 -0.2145065 -0.2225818 -0.1978597  0.5113645  1.0000000  0.0000000
r11 -0.07160591 -0.05603117 -0.02332997 -0.04157768 -0.03303898 -0.1504459 -0.1654749 -0.1338921  0.4396217  0.4762304  1.0000000
r12  0.11484129  0.12863924  0.07336286  0.13158638  0.18234656  0.2280875  0.3361144  0.3211493 -0.1731178 -0.1550379 -0.1032943
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03640487
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw1s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw1s.fit <- sem(rw1s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+                 meanstructure = TRUE)
> fitmeasures(rw1s.fit, fit.measures = c("ecvi"))
 ecvi 
0.021

 ================================================================================
> # -------------------Target  variable rw2 ----------------------------------------
> #
> # MODEL 1 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 69,018 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 34,791 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 34,227 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
34791 34791 
> addmargins(table(testdata$essround))

    9   Sum 
34227 34227 
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 54 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               34791
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               135.221     262.476
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.518
  Shift parameter                                            1.212
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             11455.208    7443.162
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.540

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.989       0.966
  Tucker-Lewis Index (TLI)                       0.982       0.943
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.028
  90 Percent confidence interval - lower         0.017       0.026
  90 Percent confidence interval - upper         0.023       0.031
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.030       0.030

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.779    0.624
    ipstrgvr          0.881    0.019   46.760    0.000    0.686    0.579
    ipbhprpr          0.980    0.021   45.711    0.000    0.764    0.601
    ipfruler          0.996    0.023   42.985    0.000    0.776    0.539
    imptradr          0.953    0.024   39.945    0.000    0.742    0.519

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.111    0.034    3.237    0.001    0.087    0.087

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.589    0.013  361.617    0.000    4.589    3.678
   .ipstrgvr          4.677    0.012  384.704    0.000    4.677    3.948
   .ipbhprpr          4.283    0.012  357.038    0.000    4.283    3.373
   .ipfruler          3.643    0.012  294.290    0.000    3.643    2.528
   .imptradr          4.153    0.013  308.342    0.000    4.153    2.904
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2|t1            2.039    0.021   95.423    0.000    2.039    2.039

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.950    0.013   71.121    0.000    0.950    0.610
   .ipstrgvr          0.932    0.013   71.540    0.000    0.932    0.664
   .ipbhprpr          1.030    0.015   69.984    0.000    1.030    0.638
   .ipfruler          1.474    0.023   65.422    0.000    1.474    0.710
   .imptradr          1.495    0.023   63.717    0.000    1.495    0.731
   .rw2               0.993                               0.993    0.993
    authoritarian     0.607    0.020   30.168    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.390
    ipstrgvr          0.336
    ipbhprpr          0.362
    ipfruler          0.290
    imptradr          0.269
    rw2               0.007

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0)
> r6  <- c(1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
r5    1    1    1    1    1    0
r6    1    1    1    1    1    1
> #
> #
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5] [,6]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000    0
r2 0.36166426 1.00000000 0.00000000 0.00000000 0.00000000    0
r3 0.37538847 0.34835712 1.00000000 0.00000000 0.00000000    0
r4 0.33623681 0.31202473 0.32386525 1.00000000 0.00000000    0
r5 0.32385178 0.30053153 0.31193591 0.27940213 1.00000000    0
r6 0.05404694 0.05015507 0.05205832 0.04662883 0.04491129    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/21)
> TrainingSRMR
[1] 0.02966272
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]      [,2]       [,3]       [,4]      [,5] [,6]
r1 1.0000000 0.0000000 0.00000000 0.00000000 0.0000000    0
r2 0.4085367 1.0000000 0.00000000 0.00000000 0.0000000    0
r3 0.3510073 0.3011837 1.00000000 0.00000000 0.0000000    0
r4 0.2686527 0.2521620 0.33052680 1.00000000 0.0000000    0
r5 0.2701587 0.2937912 0.29990914 0.26954447 1.0000000    0
r6 0.1227574 0.1710860 0.05095889 0.08258994 0.1402777    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/21)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.04686206
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.004
# ========================================================================================
> #
> # MODEL 2 FOR rw2
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 69,018 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 34,791 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 34,227 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
34791 34791 
> addmargins(table(testdata$essround))

    9   Sum 
34227 34227 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               34791
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                10.722      21.016
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.005       0.000
  Scaling correction factor                                  0.512
  Shift parameter                                            0.064
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            308748.672  238126.962
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.297

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.011       0.017
  90 Percent confidence interval - lower         0.005       0.011
  90 Percent confidence interval - upper         0.018       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.025       0.025

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.853    0.853
    imdfetn.x         1.144    0.004  275.404    0.000    0.976    0.976
    impcntr.x         1.036    0.003  362.211    0.000    0.884    0.884

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    prejudice         0.418    0.025   17.016    0.000    0.356    0.356

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.689    0.012  -59.242    0.000   -0.689   -0.689
    imsmetn.x|t2      0.649    0.011   59.730    0.000    0.649    0.649
    imsmetn.x|t3      1.534    0.015  103.039    0.000    1.534    1.534
    imdfetn.x|t1     -0.976    0.013  -75.117    0.000   -0.976   -0.976
    imdfetn.x|t2      0.269    0.010   25.730    0.000    0.269    0.269
    imdfetn.x|t3      1.242    0.013   97.174    0.000    1.242    1.242
    impcntr.x|t1     -0.979    0.013  -75.355    0.000   -0.979   -0.979
    impcntr.x|t2      0.232    0.010   22.272    0.000    0.232    0.232
    impcntr.x|t3      1.203    0.012   96.356    0.000    1.203    1.203
    rw2|t1            2.039    0.021   95.423    0.000    2.039    2.039

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.273                               0.273    0.273
   .imdfetn.x         0.048                               0.048    0.048
   .impcntr.x         0.219                               0.219    0.219
   .rw2               0.873                               0.873    0.873
    prejudice         0.727    0.004  168.130    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.727
    imdfetn.x         0.952
    impcntr.x         0.781
    rw2               0.127

> #
> r1  <- c(1, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0)
> #
> m01 <- rbind(r1, r2, r3, r4)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6]
r1    1    0    0    0    0    0
r2    1    1    0    0    0    0
r3    1    1    1    0    0    0
r4    1    1    1    1    0    0
> #
> x <- as.data.frame(rw2.fit@SampleStats@cov)
> observed <- x * m01
> #
> y <- as.data.frame(rw2.fit@implied$cov)
> implied <- y * m01
> implied
         X1        X2      X3 X4
1 1.0000000 0.0000000 0.00000  0
2 0.8320868 1.0000000 0.00000  0
3 0.7534371 0.8621066 1.00000  0
4 0.3036838 0.3474847 0.31464  1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/10)
> TrainingSRMR
[1] 0.0250556
> #
> # same model for testdata to get its observed covariance matrix
> #
> rw2t.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- as.data.frame(rw2t.fit@SampleStats@cov)
> observedt <- xt * m01
> observedt
         X1        X2        X3 X4
1 1.0000000 0.0000000 0.0000000  0
2 0.8436073 1.0000000 0.0000000  0
3 0.7604779 0.8717928 1.0000000  0
4 0.2664969 0.3639261 0.3496931  1
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/10)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.01777083
> #                     from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> rw2s.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.001

=================================================================================
> #
> # MODEL 3 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 69,018 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 34,791 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 34,227 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
34791 34791 
> addmargins(table(testdata$essround))

    9   Sum 
34227 34227 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 67 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               34791
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               256.616     411.024
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.633
  Shift parameter                                            5.769
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            324708.340  190964.438
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.700

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.016       0.021
  90 Percent confidence interval - lower         0.015       0.019
  90 Percent confidence interval - upper         0.018       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.783    0.627
    ipstrgvr          0.876    0.020   43.372    0.000    0.685    0.578
    ipbhprpr          0.922    0.022   41.281    0.000    0.722    0.568
    ipfruler          1.005    0.025   39.496    0.000    0.786    0.546
    imptradr          0.992    0.026   37.717    0.000    0.776    0.543
  prejudice =~                                                          
    imsmetn.x         1.000                               0.852    0.852
    imdfetn.x         1.147    0.004  277.470    0.000    0.977    0.977
    impcntr.x         1.036    0.003  358.912    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian    -0.023    0.036   -0.629    0.529   -0.018   -0.018
    prejudice         0.424    0.027   15.806    0.000    0.361    0.361
  prejudice ~                                                           
    authoritarian     0.317    0.012   25.561    0.000    0.291    0.291

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.589    0.013  361.617    0.000    4.589    3.678
   .ipstrgvr          4.677    0.012  384.704    0.000    4.677    3.948
   .ipbhprpr          4.283    0.012  357.038    0.000    4.283    3.373
   .ipfruler          3.643    0.012  294.290    0.000    3.643    2.528
   .imptradr          4.153    0.013  308.342    0.000    4.153    2.904
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.689    0.012  -59.242    0.000   -0.689   -0.689
    imsmetn.x|t2      0.649    0.011   59.730    0.000    0.649    0.649
    imsmetn.x|t3      1.534    0.015  103.039    0.000    1.534    1.534
    imdfetn.x|t1     -0.976    0.013  -75.117    0.000   -0.976   -0.976
    imdfetn.x|t2      0.269    0.010   25.730    0.000    0.269    0.269
    imdfetn.x|t3      1.242    0.013   97.174    0.000    1.242    1.242
    impcntr.x|t1     -0.979    0.013  -75.355    0.000   -0.979   -0.979
    impcntr.x|t2      0.232    0.010   22.272    0.000    0.232    0.232
    impcntr.x|t3      1.203    0.012   96.356    0.000    1.203    1.203
    rw2|t1            2.039    0.021   95.423    0.000    2.039    2.039

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.944    0.015   61.289    0.000    0.944    0.607
   .ipstrgvr          0.934    0.015   63.262    0.000    0.934    0.665
   .ipbhprpr          1.092    0.017   64.423    0.000    1.092    0.677
   .ipfruler          1.458    0.024   61.625    0.000    1.458    0.702
   .imptradr          1.443    0.024   60.145    0.000    1.443    0.706
   .imsmetn.x         0.274                               0.274    0.274
   .imdfetn.x         0.045                               0.045    0.045
   .impcntr.x         0.221                               0.221    0.221
   .rw2               0.873                               0.873    0.873
    authoritarian     0.612    0.021   28.487    0.000    1.000    1.000
   .prejudice         0.664    0.006  119.435    0.000    0.915    0.915

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.393
    ipstrgvr          0.335
    ipbhprpr          0.323
    ipfruler          0.298
    imptradr          0.294
    imsmetn.x         0.726
    imdfetn.x         0.955
    impcntr.x         0.779
    rw2               0.127
    prejudice         0.085

> #
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
> #
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9)
> m01
   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
r1    1    0    0    0    0    0    0    0    0
r2    1    1    0    0    0    0    0    0    0
r3    1    1    1    0    0    0    0    0    0
r4    1    1    1    1    0    0    0    0    0
r5    1    1    1    1    1    0    0    0    0
r6    1    1    1    1    1    1    0    0    0
r7    1    1    1    1    1    1    1    0    0
r8    1    1    1    1    1    1    1    1    0
r9    1    1    1    1    1    1    1    1    1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
         [,1]       [,2]       [,3]       [,4]       [,5]      [,6]      [,7]      [,8] [,9]
r1 1.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r2 0.36282779 1.00000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r3 0.35647719 0.32873536 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r4 0.34230753 0.31566841 0.31014325 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000    0
r5 0.34034561 0.31385917 0.30836567 0.29610840 1.00000000 0.0000000 0.0000000 0.0000000    0
r6 0.15539514 0.14330195 0.14079373 0.13519730 0.13442242 1.0000000 0.0000000 0.0000000    0
r7 0.17826237 0.16438961 0.16151228 0.15509231 0.15420340 0.8323562 1.0000000 0.0000000    0
r8 0.16101074 0.14848053 0.14588167 0.14008300 0.13928012 0.7518036 0.8624356 1.0000000    0
r9 0.05470391 0.05044674 0.04956376 0.04759365 0.04732087 0.3033771 0.3480207 0.3143404    1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/45)
> TrainingSRMR
[1] 0.02738375
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
        [,1]       [,2]       [,3]       [,4]      [,5]      [,6]      [,7]      [,8] [,9]
r1 1.0000000 0.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r2 0.4085367 1.00000000 0.00000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r3 0.3510073 0.30118370 1.00000000 0.00000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r4 0.2686527 0.25216204 0.33052680 1.00000000 0.0000000 0.0000000 0.0000000 0.0000000    0
r5 0.2701587 0.29379119 0.29990914 0.26954447 1.0000000 0.0000000 0.0000000 0.0000000    0
r6 0.1238514 0.07552784 0.08891165 0.10634050 0.1312229 1.0000000 0.0000000 0.0000000    0
r7 0.1578850 0.11643178 0.10040762 0.12713454 0.1661469 0.8436073 1.0000000 0.0000000    0
r8 0.1324221 0.10503774 0.08770318 0.11765149 0.1513611 0.7604779 0.8717928 1.0000000    0
r9 0.1227574 0.17108595 0.05095889 0.08258994 0.1402777 0.2664969 0.3639261 0.3496931    1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/45)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.04063327
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.008 

========================================================================================
> #
> # MODEL 4 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19, (essround == 8 | essround == 9 ),  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)                    # results in 69,018 cases overall (=training + test sample)
> #
> traindata <-subset(sset1, essround == 8 )    # results in 34,791 cases in round 8
> testdata  <-subset(sset1, essround == 9 )    # results in 34,227 cases in round 9 
> addmargins(table(traindata$essround))

    8   Sum 
34791 34791 
> addmargins(table(testdata$essround))

    9   Sum 
34227 34227 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> traindata$impsafer <- car::recode(traindata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipstrgvr <- car::recode(traindata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipbhprpr <- car::recode(traindata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$ipfruler <- car::recode(traindata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> traindata$imptradr <- car::recode(traindata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw2.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2.fit <- sem(rw2.model, data=traindata, sampling.weights="anweight.x.x.x",
+                ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                meanstructure = TRUE)
> #
> summary(rw2.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 84 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               34791
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               692.356     860.366
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.818
  Shift parameter                                           14.342
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            339878.647  196621.349
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.729

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.998       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.022
  90 Percent confidence interval - lower         0.018       0.020
  90 Percent confidence interval - upper         0.021       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.792    0.634
    ipstrgvr          0.872    0.020   42.632    0.000    0.690    0.582
    ipbhprpr          0.899    0.022   40.487    0.000    0.711    0.560
    ipfruler          0.987    0.025   38.723    0.000    0.781    0.542
    imptradr          0.979    0.026   37.052    0.000    0.775    0.542
  prejudice =~                                                          
    imsmetn.x         1.000                               0.852    0.852
    imdfetn.x         1.146    0.004  277.345    0.000    0.977    0.977
    impcntr.x         1.034    0.003  354.950    0.000    0.882    0.882
  trust =~                                                              
    ppltrst.x         1.000                               1.722    0.753
    pplfair.x         0.930    0.019   49.692    0.000    1.601    0.740
    pplhlp.x          0.759    0.016   46.901    0.000    1.306    0.591

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian    -0.032    0.036   -0.891    0.373   -0.026   -0.026
    prejudice         0.420    0.032   13.090    0.000    0.358    0.358
    trust            -0.011    0.016   -0.686    0.493   -0.019   -0.019
  prejudice ~                                                           
    authoritarian     0.334    0.013   26.566    0.000    0.310    0.310
  trust ~                                                               
    prejudice        -0.707    0.021  -34.446    0.000   -0.350   -0.350

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.589    0.013  361.617    0.000    4.589    3.678
   .ipstrgvr          4.677    0.012  384.704    0.000    4.677    3.948
   .ipbhprpr          4.283    0.012  357.038    0.000    4.283    3.373
   .ipfruler          3.643    0.012  294.290    0.000    3.643    2.528
   .imptradr          4.153    0.013  308.342    0.000    4.153    2.904
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.035    0.019  258.400    0.000    5.035    2.202
   .pplfair.x         5.695    0.020  290.505    0.000    5.695    2.632
   .pplhlp.x          4.996    0.019  263.836    0.000    4.996    2.261
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.689    0.012  -59.242    0.000   -0.689   -0.689
    imsmetn.x|t2      0.649    0.011   59.730    0.000    0.649    0.649
    imsmetn.x|t3      1.534    0.015  103.039    0.000    1.534    1.534
    imdfetn.x|t1     -0.976    0.013  -75.117    0.000   -0.976   -0.976
    imdfetn.x|t2      0.269    0.010   25.730    0.000    0.269    0.269
    imdfetn.x|t3      1.242    0.013   97.174    0.000    1.242    1.242
    impcntr.x|t1     -0.979    0.013  -75.355    0.000   -0.979   -0.979
    impcntr.x|t2      0.232    0.010   22.272    0.000    0.232    0.232
    impcntr.x|t3      1.203    0.012   96.356    0.000    1.203    1.203
    rw2|t1            2.039    0.021   95.423    0.000    2.039    2.039

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.930    0.016   58.931    0.000    0.930    0.597
   .ipstrgvr          0.927    0.015   61.432    0.000    0.927    0.661
   .ipbhprpr          1.107    0.017   63.860    0.000    1.107    0.686
   .ipfruler          1.466    0.024   60.990    0.000    1.466    0.706
   .imptradr          1.445    0.024   59.037    0.000    1.445    0.706
   .imsmetn.x         0.274                               0.274    0.274
   .imdfetn.x         0.046                               0.046    0.046
   .impcntr.x         0.223                               0.223    0.223
   .ppltrst.x         2.263    0.059   38.402    0.000    2.263    0.433
   .pplfair.x         2.117    0.053   40.312    0.000    2.117    0.452
   .pplhlp.x          3.177    0.050   63.826    0.000    3.177    0.651
   .rw2               0.872                               0.872    0.872
    authoritarian     0.627    0.022   28.336    0.000    1.000    1.000
   .prejudice         0.656    0.006  113.007    0.000    0.904    0.904
   .trust             2.601    0.074   35.310    0.000    0.878    0.878

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.403
    ipstrgvr          0.339
    ipbhprpr          0.314
    ipfruler          0.294
    imptradr          0.294
    imsmetn.x         0.726
    imdfetn.x         0.954
    impcntr.x         0.777
    ppltrst.x         0.567
    pplfair.x         0.548
    pplhlp.x          0.349
    rw2               0.128
    prejudice         0.096
    trust             0.122

> # 
> r1  <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r2  <- c(1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r3  <- c(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
> r4  <- c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0)
> r5  <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)
> r6  <- c(1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0)
> r7  <- c(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
> r8  <- c(1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0)
> r9  <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0)
> r10 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0)
> r11 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
> r12 <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
> m01 <- rbind(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
> m01
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
r1     1    0    0    0    0    0    0    0    0     0     0     0
r2     1    1    0    0    0    0    0    0    0     0     0     0
r3     1    1    1    0    0    0    0    0    0     0     0     0
r4     1    1    1    1    0    0    0    0    0     0     0     0
r5     1    1    1    1    1    0    0    0    0     0     0     0
r6     1    1    1    1    1    1    0    0    0     0     0     0
r7     1    1    1    1    1    1    1    0    0     0     0     0
r8     1    1    1    1    1    1    1    1    0     0     0     0
r9     1    1    1    1    1    1    1    1    1     0     0     0
r10    1    1    1    1    1    1    1    1    1     1     0     0
r11    1    1    1    1    1    1    1    1    1     1     1     0
r12    1    1    1    1    1    1    1    1    1     1     1     1
> #
> x <- unlist(rw2.fit@SampleStats@cov)
> obs <- x * m01
> observed <- cov2cor(obs)
> #
> y <- unlist(rw2.fit@implied$cov)
> impl <- y * m01
> implied <- cov2cor(impl)
> implied
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]       [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r2   0.36957194  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r3   0.35541820  0.32630616  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r4   0.34398464  0.31580911  0.30371436  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r5   0.34377767  0.31561910  0.30353163  0.29376722  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r6   0.16769849  0.15396243  0.14806603  0.14330285  0.14321663  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r7   0.19217852  0.17643732  0.16968018  0.16422169  0.16412288  0.8322719  1.0000000  0.0000000  0.0000000  0.0000000  0.00000000
r8   0.17347945  0.15926987  0.15317021  0.14824283  0.14815364  0.7512914  0.8609623  1.0000000  0.0000000  0.0000000  0.00000000
r9  -0.05185430 -0.04760696 -0.04578372 -0.04431089 -0.04428423 -0.2245666 -0.2573481 -0.2323080  1.0000000  0.0000000  0.00000000
r10 -0.05096364 -0.04678924 -0.04499732 -0.04354979 -0.04352359 -0.2207094 -0.2529278 -0.2283178  0.5573285  1.0000000  0.00000000
r11 -0.04070656 -0.03737231 -0.03594104 -0.03478484 -0.03476391 -0.1762888 -0.2020228 -0.1823659  0.4451591  0.4375129  1.00000000
r12  0.05542470  0.05088491  0.04893614  0.04736189  0.04733340  0.3036498  0.3479755  0.3141173 -0.1066019 -0.1047709 -0.08368441
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> TrainingSRMR <- sqrt(sum((observed - implied)^2)/78)
> TrainingSRMR
[1] 0.02919783
> #
> # same model for testdata to get its observed covariance matrix
> #
> #
> library(car)
> #
> testdata$impsafer <- car::recode(testdata$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipstrgvr <- car::recode(testdata$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipbhprpr <- car::recode(testdata$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$ipfruler <- car::recode(testdata$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> testdata$imptradr <- car::recode(testdata$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> rw2t.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2t.fit <- sem(rw2t.model, data=testdata, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> #
> xt <- unlist(rw2t.fit@SampleStats@cov)
> obst <- xt * m01
> observedt <- cov2cor(obst)
> observedt
           [,1]        [,2]        [,3]        [,4]        [,5]       [,6]       [,7]       [,8]       [,9]      [,10]     [,11]
r1   1.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.000000
r2   0.40853674  1.00000000  0.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.000000
r3   0.35100725  0.30118370  1.00000000  0.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.000000
r4   0.26865265  0.25216204  0.33052680  1.00000000  0.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.000000
r5   0.27015875  0.29379119  0.29990914  0.26954447  1.00000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.000000
r6   0.12385142  0.07552784  0.08891165  0.10634050  0.13122290  1.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.000000
r7   0.15788504  0.11643178  0.10040762  0.12713454  0.16614692  0.8436073  1.0000000  0.0000000  0.0000000  0.0000000  0.000000
r8   0.13242210  0.10503774  0.08770318  0.11765149  0.15136112  0.7604779  0.8717928  1.0000000  0.0000000  0.0000000  0.000000
r9  -0.12173505 -0.08552113 -0.05195011 -0.03656836 -0.06400954 -0.2409733 -0.2613761 -0.2314394  1.0000000  0.0000000  0.000000
r10 -0.09744574 -0.07456409 -0.05420775 -0.07662995 -0.07940838 -0.2226786 -0.2233932 -0.1980859  0.5202747  1.0000000  0.000000
r11 -0.06766991 -0.04958009 -0.02062161 -0.04017730 -0.03591389 -0.1614764 -0.1712132 -0.1431787  0.4495167  0.4874987  1.000000
r12  0.12275737  0.17108595  0.05095889  0.08258994  0.14027771  0.2664969  0.3639261  0.3496931 -0.1099198 -0.1506478 -0.104997
    [,12]
r1      0
r2      0
r3      0
r4      0
r5      0
r6      0
r7      0
r8      0
r9      0
r10     0
r11     0
r12     1
> #
> #
> TestSRMR <- sqrt(sum((observedt - implied)^2)/78)
> TestSRMR # relates implied covariance matrix from traindata to observed covariance 
[1] 0.03750087
> #                                                    from testdata
> #
> #
> # same model for sset1 (=traindata + testdata combined) to compute ECVI
> #
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> rw2s.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw2s.fit <- sem(rw2s.model, data=sset1, sampling.weights="anweight.x.x.x",
+                 ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+                 meanstructure = TRUE)
> fitmeasures(rw2s.fit, fit.measures = c("ecvi"))
 ecvi 
0.021

# ################## ENDE BLOCK 7 ##########################################


# Block 8: structural equation models 
> # run sequentially (without possibility of out-of-sample testing (last available wave))
> #
> #
> # -------------------Target  variable rw  ----------------------------------------  
> # PERIOD E 
> #
> # MODEL 1 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,041 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31041 31041 
> #
> # scale direction reversed for value items
> #
> library(car)
Loading required package: carData
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
This is lavaan 0.6-8
lavaan is FREE software! Please report any bugs.
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 52 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               31041
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               148.806     266.369
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.560
  Shift parameter                                            0.867
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             10305.549    7186.770
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.435

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.986       0.964
  Tucker-Lewis Index (TLI)                       0.977       0.940
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.030
  90 Percent confidence interval - lower         0.019       0.027
  90 Percent confidence interval - upper         0.026       0.034
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.031       0.031

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.746    0.606
    ipstrgvr          0.909    0.021   42.980    0.000    0.678    0.582
    ipbhprpr          0.966    0.023   41.409    0.000    0.720    0.570
    ipfruler          0.923    0.026   35.744    0.000    0.689    0.486
    imptradr          0.956    0.026   36.854    0.000    0.713    0.502

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.338    0.025   13.270    0.000    0.252    0.252

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.569    0.013  353.584    0.000    4.569    3.714
   .ipstrgvr          4.674    0.012  375.904    0.000    4.674    4.013
   .ipbhprpr          4.264    0.013  339.241    0.000    4.264    3.372
   .ipfruler          3.606    0.013  283.689    0.000    3.606    2.546
   .imptradr          4.173    0.014  293.533    0.000    4.173    2.938
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw|t1             1.543    0.017   90.670    0.000    1.543    1.543

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.956    0.014   66.176    0.000    0.956    0.632
   .ipstrgvr          0.897    0.013   68.314    0.000    0.897    0.661
   .ipbhprpr          1.081    0.016   67.523    0.000    1.081    0.676
   .ipfruler          1.532    0.025   60.593    0.000    1.532    0.764
   .imptradr          1.509    0.024   63.624    0.000    1.509    0.748
   .rw                0.937                               0.937    0.937
    authoritarian     0.556    0.019   28.633    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.368
    ipstrgvr          0.339
    ipbhprpr          0.324
    ipfruler          0.236
    imptradr          0.252
    rw                0.063

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.006
# -------------------------------------------------------------------------

========================================================================================
> #
> # MODEL 2 FOR rw    
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,041 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31041 31041 
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 15 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               31041
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                14.355      35.412
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.001       0.000
  Scaling correction factor                                  0.406
  Shift parameter                                            0.059
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            290981.496  215867.035
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.348

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.014       0.023
  90 Percent confidence interval - lower         0.008       0.017
  90 Percent confidence interval - upper         0.021       0.030
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.020       0.020

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.850    0.850
    imdfetn.x         1.157    0.005  254.282    0.000    0.984    0.984
    impcntr.x         1.039    0.003  364.532    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    prejudice         0.453    0.018   25.290    0.000    0.385    0.385

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.619    0.012  -51.441    0.000   -0.619   -0.619
    imsmetn.x|t2      0.722    0.012   61.727    0.000    0.722    0.722
    imsmetn.x|t3      1.632    0.017   97.707    0.000    1.632    1.632
    imdfetn.x|t1     -0.913    0.013  -68.929    0.000   -0.913   -0.913
    imdfetn.x|t2      0.349    0.011   31.748    0.000    0.349    0.349
    imdfetn.x|t3      1.277    0.014   92.422    0.000    1.277    1.277
    impcntr.x|t1     -0.929    0.013  -69.229    0.000   -0.929   -0.929
    impcntr.x|t2      0.277    0.011   25.357    0.000    0.277    0.277
    impcntr.x|t3      1.207    0.013   89.956    0.000    1.207    1.207
    rw|t1             1.543    0.017   90.670    0.000    1.543    1.543

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.278                               0.278    0.278
   .imdfetn.x         0.032                               0.032    0.032
   .impcntr.x         0.220                               0.220    0.220
   .rw                0.852                               0.852    0.852
    prejudice         0.722    0.004  161.947    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.722
    imdfetn.x         0.968
    impcntr.x         0.780
    rw                0.148

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.001

# -----------------------------------------------------------------------

# =================================================================================
> #
> # MODEL 3 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,041 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31041 31041 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ rw ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 64 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               31041
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               295.719     428.902
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.699
  Shift parameter                                            6.084
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            304279.315  187149.569
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.626

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.019       0.023
  90 Percent confidence interval - lower         0.017       0.021
  90 Percent confidence interval - upper         0.021       0.025
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.748    0.608
    ipstrgvr          0.880    0.022   40.082    0.000    0.658    0.565
    ipbhprpr          0.930    0.025   37.786    0.000    0.695    0.550
    ipfruler          0.934    0.028   33.547    0.000    0.698    0.493
    imptradr          1.013    0.029   35.085    0.000    0.757    0.533
  prejudice =~                                                          
    imsmetn.x         1.000                               0.849    0.849
    imdfetn.x         1.159    0.005  254.868    0.000    0.984    0.984
    impcntr.x         1.040    0.003  362.674    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.223    0.027    8.189    0.000    0.167    0.167
    prejudice         0.403    0.020   19.875    0.000    0.343    0.343
  prejudice ~                                                           
    authoritarian     0.289    0.013   21.750    0.000    0.255    0.255

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.569    0.013  353.584    0.000    4.569    3.714
   .ipstrgvr          4.674    0.012  375.904    0.000    4.674    4.013
   .ipbhprpr          4.264    0.013  339.241    0.000    4.264    3.372
   .ipfruler          3.606    0.013  283.689    0.000    3.606    2.546
   .imptradr          4.173    0.014  293.533    0.000    4.173    2.938
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.619    0.012  -51.441    0.000   -0.619   -0.619
    imsmetn.x|t2      0.722    0.012   61.727    0.000    0.722    0.722
    imsmetn.x|t3      1.632    0.017   97.707    0.000    1.632    1.632
    imdfetn.x|t1     -0.913    0.013  -68.929    0.000   -0.913   -0.913
    imdfetn.x|t2      0.349    0.011   31.748    0.000    0.349    0.349
    imdfetn.x|t3      1.277    0.014   92.422    0.000    1.277    1.277
    impcntr.x|t1     -0.929    0.013  -69.229    0.000   -0.929   -0.929
    impcntr.x|t2      0.277    0.011   25.357    0.000    0.277    0.277
    impcntr.x|t3      1.207    0.013   89.956    0.000    1.207    1.207
    rw|t1             1.543    0.017   90.670    0.000    1.543    1.543

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.954    0.016   60.204    0.000    0.954    0.631
   .ipstrgvr          0.924    0.014   64.079    0.000    0.924    0.681
   .ipbhprpr          1.116    0.018   62.924    0.000    1.116    0.698
   .ipfruler          1.519    0.026   57.684    0.000    1.519    0.757
   .imptradr          1.444    0.024   59.788    0.000    1.444    0.716
   .imsmetn.x         0.279                               0.279    0.279
   .imdfetn.x         0.031                               0.031    0.031
   .impcntr.x         0.220                               0.220    0.220
   .rw                0.826                               0.826    0.826
    authoritarian     0.559    0.021   27.082    0.000    1.000    1.000
   .prejudice         0.674    0.006  121.872    0.000    0.935    0.935

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.369
    ipstrgvr          0.319
    ipbhprpr          0.302
    ipfruler          0.243
    imptradr          0.284
    imsmetn.x         0.721
    imdfetn.x         0.969
    impcntr.x         0.780
    rw                0.174
    prejudice         0.065

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.012
# ---------------------------------------------------------------------

# ========================================================================================
> #
> # MODEL 4 FOR rw
> #
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,041 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31041 31041 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw ~ authoritarian
+ # rw ~ prejudice
+ 
+ # rw ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 85 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               31041
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               699.001     831.657
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.855
  Shift parameter                                           14.025
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            317215.520  190584.094
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.665

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.022
  90 Percent confidence interval - lower         0.019       0.021
  90 Percent confidence interval - upper         0.022       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.755    0.614
    ipstrgvr          0.874    0.022   39.325    0.000    0.660    0.566
    ipbhprpr          0.910    0.025   36.839    0.000    0.687    0.543
    ipfruler          0.920    0.028   32.943    0.000    0.695    0.490
    imptradr          1.004    0.029   34.383    0.000    0.758    0.534
  prejudice =~                                                          
    imsmetn.x         1.000                               0.849    0.849
    imdfetn.x         1.158    0.005  257.334    0.000    0.984    0.984
    impcntr.x         1.039    0.003  359.839    0.000    0.882    0.882
  trust =~                                                              
    ppltrst.x         1.000                               1.679    0.745
    pplfair.x         0.924    0.021   43.009    0.000    1.552    0.733
    pplhlp.x          0.755    0.018   42.361    0.000    1.268    0.589

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw ~                                                                  
    authoritarian     0.213    0.027    7.802    0.000    0.161    0.161
    prejudice         0.368    0.022   16.549    0.000    0.313    0.313
    trust            -0.050    0.010   -4.825    0.000   -0.085   -0.085
  prejudice ~                                                           
    authoritarian     0.308    0.013   22.983    0.000    0.273    0.273
  trust ~                                                               
    prejudice        -0.666    0.022  -30.831    0.000   -0.337   -0.337

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.569    0.013  353.584    0.000    4.569    3.714
   .ipstrgvr          4.674    0.012  375.904    0.000    4.674    4.013
   .ipbhprpr          4.264    0.013  339.241    0.000    4.264    3.372
   .ipfruler          3.606    0.013  283.689    0.000    3.606    2.546
   .imptradr          4.173    0.014  293.533    0.000    4.173    2.938
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.156    0.020  255.939    0.000    5.156    2.288
   .pplfair.x         5.788    0.020  289.918    0.000    5.788    2.735
   .pplhlp.x          5.068    0.019  267.645    0.000    5.068    2.355
   .rw                0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.619    0.012  -51.441    0.000   -0.619   -0.619
    imsmetn.x|t2      0.722    0.012   61.727    0.000    0.722    0.722
    imsmetn.x|t3      1.632    0.017   97.707    0.000    1.632    1.632
    imdfetn.x|t1     -0.913    0.013  -68.929    0.000   -0.913   -0.913
    imdfetn.x|t2      0.349    0.011   31.748    0.000    0.349    0.349
    imdfetn.x|t3      1.277    0.014   92.422    0.000    1.277    1.277
    impcntr.x|t1     -0.929    0.013  -69.229    0.000   -0.929   -0.929
    impcntr.x|t2      0.277    0.011   25.357    0.000    0.277    0.277
    impcntr.x|t3      1.207    0.013   89.956    0.000    1.207    1.207
    rw|t1             1.543    0.017   90.670    0.000    1.543    1.543

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.943    0.016   57.837    0.000    0.943    0.623
   .ipstrgvr          0.922    0.015   62.369    0.000    0.922    0.679
   .ipbhprpr          1.128    0.018   62.209    0.000    1.128    0.705
   .ipfruler          1.524    0.027   57.058    0.000    1.524    0.760
   .imptradr          1.443    0.024   59.159    0.000    1.443    0.715
   .imsmetn.x         0.279                               0.279    0.279
   .imdfetn.x         0.032                               0.032    0.032
   .impcntr.x         0.222                               0.222    0.222
   .ppltrst.x         2.258    0.067   33.606    0.000    2.258    0.445
   .pplfair.x         2.071    0.055   37.767    0.000    2.071    0.462
   .pplhlp.x          3.024    0.049   62.219    0.000    3.024    0.653
   .rw                0.821                               0.821    0.821
    authoritarian     0.570    0.021   26.847    0.000    1.000    1.000
   .prejudice         0.667    0.006  116.470    0.000    0.925    0.925
   .trust             2.501    0.079   31.695    0.000    0.887    0.887

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw                1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.377
    ipstrgvr          0.321
    ipbhprpr          0.295
    ipfruler          0.240
    imptradr          0.285
    imsmetn.x         0.721
    imdfetn.x         0.968
    impcntr.x         0.778
    ppltrst.x         0.555
    pplfair.x         0.538
    pplhlp.x          0.347
    rw                0.179
    prejudice         0.075
    trust             0.113

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.025
# -----------------------------------------------------------------------
# -----------------------------------------------------------------------
# ================================================================================ 
> # -------------------Target  variable rw1 ----------------------------------------
> #
> # MODEL 1 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,647 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31647 31647 
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 53 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               31647
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               141.644     237.898
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.598
  Shift parameter                                            1.095
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             10316.204    7259.657
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.422

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.987       0.968
  Tucker-Lewis Index (TLI)                       0.979       0.947
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.022       0.028
  90 Percent confidence interval - lower         0.019       0.025
  90 Percent confidence interval - upper         0.025       0.032
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.031       0.031

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.747    0.607
    ipstrgvr          0.908    0.021   43.486    0.000    0.678    0.582
    ipbhprpr          0.967    0.023   41.638    0.000    0.722    0.572
    ipfruler          0.921    0.026   35.990    0.000    0.688    0.486
    imptradr          0.948    0.026   36.940    0.000    0.708    0.498

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.301    0.029   10.375    0.000    0.225    0.225

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.568    0.013  357.174    0.000    4.568    3.713
   .ipstrgvr          4.674    0.012  379.767    0.000    4.674    4.012
   .ipbhprpr          4.266    0.012  343.132    0.000    4.266    3.378
   .ipfruler          3.612    0.013  287.058    0.000    3.612    2.554
   .imptradr          4.173    0.014  296.657    0.000    4.173    2.938
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1|t1            1.834    0.020   89.508    0.000    1.834    1.834

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.956    0.014   66.407    0.000    0.956    0.632
   .ipstrgvr          0.898    0.013   69.407    0.000    0.898    0.661
   .ipbhprpr          1.074    0.016   68.156    0.000    1.074    0.673
   .ipfruler          1.528    0.025   61.377    0.000    1.528    0.764
   .imptradr          1.516    0.024   63.066    0.000    1.516    0.752
   .rw1               0.949                               0.949    0.949
    authoritarian     0.558    0.019   28.852    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.368
    ipstrgvr          0.339
    ipbhprpr          0.327
    ipfruler          0.236
    imptradr          0.248
    rw1               0.051

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.006
# ---------------------------------------------------------------------
========================================================================================
> #
> # MODEL 2 FOR rw1
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,647 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31647 31647 
> #
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 17 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               31647
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 9.617      21.903
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.008       0.000
  Scaling correction factor                                  0.440
  Shift parameter                                            0.038
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            296090.260  223835.917
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.323

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.011       0.018
  90 Percent confidence interval - lower         0.005       0.012
  90 Percent confidence interval - upper         0.018       0.025
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.019       0.019

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.850    0.850
    imdfetn.x         1.157    0.004  257.779    0.000    0.984    0.984
    impcntr.x         1.039    0.003  369.712    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    prejudice         0.388    0.021   18.402    0.000    0.330    0.330

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.624    0.012  -52.390    0.000   -0.624   -0.624
    imsmetn.x|t2      0.716    0.012   61.863    0.000    0.716    0.716
    imsmetn.x|t3      1.626    0.017   97.938    0.000    1.626    1.626
    imdfetn.x|t1     -0.920    0.013  -70.064    0.000   -0.920   -0.920
    imdfetn.x|t2      0.344    0.011   31.679    0.000    0.344    0.344
    imdfetn.x|t3      1.272    0.014   92.896    0.000    1.272    1.272
    impcntr.x|t1     -0.935    0.013  -70.254    0.000   -0.935   -0.935
    impcntr.x|t2      0.274    0.011   25.328    0.000    0.274    0.274
    impcntr.x|t3      1.202    0.013   90.111    0.000    1.202    1.202
    rw1|t1            1.834    0.020   89.508    0.000    1.834    1.834

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.278                               0.278    0.278
   .imdfetn.x         0.033                               0.033    0.033
   .impcntr.x         0.220                               0.220    0.220
   .rw1               0.891                               0.891    0.891
    prejudice         0.722    0.004  163.541    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.722
    imdfetn.x         0.967
    impcntr.x         0.780
    rw1               0.109

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.001
# ----------------------------------------------------------------------

# =================================================================================
> #
> # MODEL 3 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,647 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31647 31647 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ rw1 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw1 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 65 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               31647
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               286.045     405.175
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.717
  Shift parameter                                            6.105
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            309386.462  192423.775
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.608

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.997
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.018       0.022
  90 Percent confidence interval - lower         0.016       0.020
  90 Percent confidence interval - upper         0.020       0.024
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.747    0.608
    ipstrgvr          0.879    0.022   40.721    0.000    0.657    0.564
    ipbhprpr          0.933    0.024   38.407    0.000    0.698    0.552
    ipfruler          0.936    0.027   34.079    0.000    0.700    0.495
    imptradr          1.005    0.029   35.046    0.000    0.751    0.529
  prejudice =~                                                          
    imsmetn.x         1.000                               0.849    0.849
    imdfetn.x         1.159    0.004  258.520    0.000    0.984    0.984
    impcntr.x         1.040    0.003  367.913    0.000    0.883    0.883

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.206    0.032    6.435    0.000    0.154    0.154
    prejudice         0.343    0.024   14.138    0.000    0.291    0.291
  prejudice ~                                                           
    authoritarian     0.287    0.013   21.767    0.000    0.253    0.253

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.568    0.013  357.174    0.000    4.568    3.713
   .ipstrgvr          4.674    0.012  379.767    0.000    4.674    4.012
   .ipbhprpr          4.266    0.012  343.132    0.000    4.266    3.378
   .ipfruler          3.612    0.013  287.058    0.000    3.612    2.554
   .imptradr          4.173    0.014  296.657    0.000    4.173    2.938
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.624    0.012  -52.390    0.000   -0.624   -0.624
    imsmetn.x|t2      0.716    0.012   61.863    0.000    0.716    0.716
    imsmetn.x|t3      1.626    0.017   97.938    0.000    1.626    1.626
    imdfetn.x|t1     -0.920    0.013  -70.064    0.000   -0.920   -0.920
    imdfetn.x|t2      0.344    0.011   31.679    0.000    0.344    0.344
    imdfetn.x|t3      1.272    0.014   92.896    0.000    1.272    1.272
    impcntr.x|t1     -0.935    0.013  -70.254    0.000   -0.935   -0.935
    impcntr.x|t2      0.274    0.011   25.328    0.000    0.274    0.274
    impcntr.x|t3      1.202    0.013   90.111    0.000    1.202    1.202
    rw1|t1            1.834    0.020   89.508    0.000    1.834    1.834

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.955    0.016   60.948    0.000    0.955    0.631
   .ipstrgvr          0.926    0.014   65.371    0.000    0.926    0.682
   .ipbhprpr          1.108    0.017   63.833    0.000    1.108    0.695
   .ipfruler          1.512    0.026   58.542    0.000    1.512    0.755
   .imptradr          1.453    0.025   58.495    0.000    1.453    0.720
   .imsmetn.x         0.279                               0.279    0.279
   .imdfetn.x         0.031                               0.031    0.031
   .impcntr.x         0.220                               0.220    0.220
   .rw1               0.869                               0.869    0.869
    authoritarian     0.559    0.020   27.388    0.000    1.000    1.000
   .prejudice         0.675    0.005  123.486    0.000    0.936    0.936

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.369
    ipstrgvr          0.318
    ipbhprpr          0.305
    ipfruler          0.245
    imptradr          0.280
    imsmetn.x         0.721
    imdfetn.x         0.969
    impcntr.x         0.780
    rw1               0.131
    prejudice         0.064

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.011
# ------------------------------------------------------------------------
========================================================================================
> #
> # MODEL 4 FOR rw1
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw1, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  31,647 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
31647 31647 
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw1 ~ authoritarian
+ # rw1 ~ prejudice
+ 
+ # rw1 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw1 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw1"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 82 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               31647
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               695.500     821.211
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.862
  Shift parameter                                           13.945
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            322438.632  194803.904
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.655

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.996
  Tucker-Lewis Index (TLI)                       0.997       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.022
  90 Percent confidence interval - lower         0.019       0.021
  90 Percent confidence interval - upper         0.022       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.029       0.029

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.755    0.613
    ipstrgvr          0.873    0.022   39.934    0.000    0.659    0.565
    ipbhprpr          0.914    0.024   37.455    0.000    0.690    0.546
    ipfruler          0.923    0.028   33.464    0.000    0.697    0.492
    imptradr          0.997    0.029   34.197    0.000    0.752    0.530
  prejudice =~                                                          
    imsmetn.x         1.000                               0.849    0.849
    imdfetn.x         1.158    0.004  260.972    0.000    0.984    0.984
    impcntr.x         1.039    0.003  365.210    0.000    0.882    0.882
  trust =~                                                              
    ppltrst.x         1.000                               1.685    0.748
    pplfair.x         0.920    0.021   43.842    0.000    1.550    0.731
    pplhlp.x          0.753    0.018   42.929    0.000    1.269    0.589

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw1 ~                                                                 
    authoritarian     0.197    0.032    6.140    0.000    0.149    0.149
    prejudice         0.296    0.026   11.363    0.000    0.252    0.252
    trust            -0.066    0.011   -5.971    0.000   -0.112   -0.112
  prejudice ~                                                           
    authoritarian     0.306    0.013   23.052    0.000    0.272    0.272
  trust ~                                                               
    prejudice        -0.671    0.022  -31.076    0.000   -0.338   -0.338

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.568    0.013  357.174    0.000    4.568    3.713
   .ipstrgvr          4.674    0.012  379.767    0.000    4.674    4.012
   .ipbhprpr          4.266    0.012  343.132    0.000    4.266    3.378
   .ipfruler          3.612    0.013  287.058    0.000    3.612    2.554
   .imptradr          4.173    0.014  296.657    0.000    4.173    2.938
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.152    0.020  258.460    0.000    5.152    2.286
   .pplfair.x         5.782    0.020  292.451    0.000    5.782    2.728
   .pplhlp.x          5.064    0.019  269.991    0.000    5.064    2.352
   .rw1               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.624    0.012  -52.390    0.000   -0.624   -0.624
    imsmetn.x|t2      0.716    0.012   61.863    0.000    0.716    0.716
    imsmetn.x|t3      1.626    0.017   97.938    0.000    1.626    1.626
    imdfetn.x|t1     -0.920    0.013  -70.064    0.000   -0.920   -0.920
    imdfetn.x|t2      0.344    0.011   31.679    0.000    0.344    0.344
    imdfetn.x|t3      1.272    0.014   92.896    0.000    1.272    1.272
    impcntr.x|t1     -0.935    0.013  -70.254    0.000   -0.935   -0.935
    impcntr.x|t2      0.274    0.011   25.328    0.000    0.274    0.274
    impcntr.x|t3      1.202    0.013   90.111    0.000    1.202    1.202
    rw1|t1            1.834    0.020   89.508    0.000    1.834    1.834

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.944    0.016   58.514    0.000    0.944    0.624
   .ipstrgvr          0.923    0.015   63.607    0.000    0.923    0.680
   .ipbhprpr          1.120    0.018   63.086    0.000    1.120    0.702
   .ipfruler          1.516    0.026   57.885    0.000    1.516    0.757
   .imptradr          1.452    0.025   57.421    0.000    1.452    0.720
   .imsmetn.x         0.279                               0.279    0.279
   .imdfetn.x         0.032                               0.032    0.032
   .impcntr.x         0.222                               0.222    0.222
   .ppltrst.x         2.238    0.066   33.732    0.000    2.238    0.441
   .pplfair.x         2.088    0.054   38.828    0.000    2.088    0.465
   .pplhlp.x          3.026    0.048   63.090    0.000    3.026    0.653
   .rw1               0.859                               0.859    0.859
    authoritarian     0.570    0.021   27.137    0.000    1.000    1.000
   .prejudice         0.668    0.006  118.018    0.000    0.926    0.926
   .trust             2.516    0.078   32.182    0.000    0.886    0.886

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw1               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.376
    ipstrgvr          0.320
    ipbhprpr          0.298
    ipfruler          0.243
    imptradr          0.280
    imsmetn.x         0.721
    imdfetn.x         0.968
    impcntr.x         0.778
    ppltrst.x         0.559
    pplfair.x         0.535
    pplhlp.x          0.347
    rw1               0.141
    prejudice         0.074
    trust             0.114

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.025
# ----------------------------------------------------------------------
# ----------------------------------------------------------------------

================================================================================
> # -------------------Target  variable rw2 ----------------------------------------
> #
> # MODEL 1 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  34,227 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
34227 34227 
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ # prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 54 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        17
                                                      
  Number of observations                               34227
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               141.720     250.795
  Degrees of freedom                                 9           9
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.567
  Shift parameter                                            0.926
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                             11407.323    7928.202
  Degrees of freedom                                15          15
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.440

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.988       0.969
  Tucker-Lewis Index (TLI)                       0.981       0.949
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.021       0.028
  90 Percent confidence interval - lower         0.018       0.025
  90 Percent confidence interval - upper         0.024       0.031
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.030       0.030

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.747    0.611
    ipstrgvr          0.906    0.020   46.045    0.000    0.677    0.581
    ipbhprpr          0.975    0.022   44.797    0.000    0.729    0.578
    ipfruler          0.925    0.024   38.586    0.000    0.691    0.488
    imptradr          0.949    0.024   39.338    0.000    0.709    0.499

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.271    0.031    8.758    0.000    0.203    0.203

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.591    0.012  373.896    0.000    4.591    3.752
   .ipstrgvr          4.676    0.012  395.498    0.000    4.676    4.012
   .ipbhprpr          4.273    0.012  358.283    0.000    4.273    3.387
   .ipfruler          3.641    0.012  300.008    0.000    3.641    2.571
   .imptradr          4.189    0.014  308.715    0.000    4.189    2.951
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2|t1            1.863    0.020   91.663    0.000    1.863    1.863

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.939    0.013   69.960    0.000    0.939    0.627
   .ipstrgvr          0.900    0.012   73.175    0.000    0.900    0.663
   .ipbhprpr          1.061    0.015   71.642    0.000    1.061    0.666
   .ipfruler          1.527    0.024   63.773    0.000    1.527    0.762
   .imptradr          1.513    0.023   67.063    0.000    1.513    0.751
   .rw2               0.959                               0.959    0.959
    authoritarian     0.558    0.018   30.699    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.373
    ipstrgvr          0.337
    ipbhprpr          0.334
    ipfruler          0.238
    imptradr          0.249
    rw2               0.041

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.005
# ----------------------------------------------------------------------

# ========================================================================================
> #
> # MODEL 2 FOR rw2
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  34,227 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
34227 34227 
> #
> # ---------------------------------------------------------------------------------
> #
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ # authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice  
+ #
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 16 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        14
                                                      
  Number of observations                               34227
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                                 6.372      17.286
  Degrees of freedom                                 2           2
  P-value (Chi-square)                           0.041       0.000
  Scaling correction factor                                  0.371
  Shift parameter                                            0.119
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            349577.134  254331.614
  Degrees of freedom                                 6           6
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.375

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    1.000       1.000
  Tucker-Lewis Index (TLI)                       1.000       1.000
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.008       0.015
  90 Percent confidence interval - lower         0.001       0.009
  90 Percent confidence interval - upper         0.015       0.022
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.017       0.017

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  prejudice =~                                                          
    imsmetn.x         1.000                               0.858    0.858
    imdfetn.x         1.147    0.004  288.721    0.000    0.983    0.983
    impcntr.x         1.034    0.003  413.461    0.000    0.887    0.887

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    prejudice         0.421    0.023   18.031    0.000    0.361    0.361

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.635    0.011  -55.262    0.000   -0.635   -0.635
    imsmetn.x|t2      0.679    0.011   61.864    0.000    0.679    0.679
    imsmetn.x|t3      1.566    0.015  101.811    0.000    1.566    1.566
    imdfetn.x|t1     -0.919    0.013  -72.548    0.000   -0.919   -0.919
    imdfetn.x|t2      0.320    0.010   30.743    0.000    0.320    0.320
    imdfetn.x|t3      1.231    0.013   95.464    0.000    1.231    1.231
    impcntr.x|t1     -0.932    0.013  -72.862    0.000   -0.932   -0.932
    impcntr.x|t2      0.256    0.010   24.678    0.000    0.256    0.256
    impcntr.x|t3      1.171    0.013   93.164    0.000    1.171    1.171
    rw2|t1            1.863    0.020   91.663    0.000    1.863    1.863

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .imsmetn.x         0.264                               0.264    0.264
   .imdfetn.x         0.033                               0.033    0.033
   .impcntr.x         0.214                               0.214    0.214
   .rw2               0.870                               0.870    0.870
    prejudice         0.736    0.004  181.345    0.000    1.000    1.000

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    imsmetn.x         0.736
    imdfetn.x         0.967
    impcntr.x         0.786
    rw2               0.130

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.001
# -----------------------------------------------------------------------

# =================================================================================
> #
> # MODEL 3 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  34,227 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
34227 34227 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ # trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ rw2 ~ authoritarian + prejudice
+ prejudice ~ authoritarian
+ 
+ # rw2 ~ authoritarian + prejudice + trust
+ # prejudice ~ authoritarian
+ # trust ~ prejudice
+ 
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 65 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        31
                                                      
  Number of observations                               34227
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               282.194     400.977
  Degrees of freedom                                25          25
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.715
  Shift parameter                                            6.386
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            363869.089  224041.589
  Degrees of freedom                                36          36
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.624

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.999       0.998
  Tucker-Lewis Index (TLI)                       0.999       0.998
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.017       0.021
  90 Percent confidence interval - lower         0.016       0.019
  90 Percent confidence interval - upper         0.019       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.027       0.027

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.752    0.615
    ipstrgvr          0.876    0.020   43.107    0.000    0.659    0.565
    ipbhprpr          0.938    0.023   40.912    0.000    0.705    0.559
    ipfruler          0.934    0.026   36.213    0.000    0.702    0.496
    imptradr          0.991    0.026   37.558    0.000    0.745    0.525
  prejudice =~                                                          
    imsmetn.x         1.000                               0.857    0.857
    imdfetn.x         1.148    0.004  289.110    0.000    0.984    0.984
    impcntr.x         1.034    0.003  411.161    0.000    0.886    0.886

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.167    0.033    5.080    0.000    0.125    0.125
    prejudice         0.387    0.026   15.062    0.000    0.332    0.332
  prejudice ~                                                           
    authoritarian     0.268    0.013   21.408    0.000    0.235    0.235

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.591    0.012  373.896    0.000    4.591    3.752
   .ipstrgvr          4.676    0.012  395.498    0.000    4.676    4.012
   .ipbhprpr          4.273    0.012  358.283    0.000    4.273    3.387
   .ipfruler          3.641    0.012  300.008    0.000    3.641    2.571
   .imptradr          4.189    0.014  308.715    0.000    4.189    2.951
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.635    0.011  -55.262    0.000   -0.635   -0.635
    imsmetn.x|t2      0.679    0.011   61.864    0.000    0.679    0.679
    imsmetn.x|t3      1.566    0.015  101.811    0.000    1.566    1.566
    imdfetn.x|t1     -0.919    0.013  -72.548    0.000   -0.919   -0.919
    imdfetn.x|t2      0.320    0.010   30.743    0.000    0.320    0.320
    imdfetn.x|t3      1.231    0.013   95.464    0.000    1.231    1.231
    impcntr.x|t1     -0.932    0.013  -72.862    0.000   -0.932   -0.932
    impcntr.x|t2      0.256    0.010   24.678    0.000    0.256    0.256
    impcntr.x|t3      1.171    0.013   93.164    0.000    1.171    1.171
    rw2|t1            1.863    0.020   91.663    0.000    1.863    1.863

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.932    0.015   63.064    0.000    0.932    0.622
   .ipstrgvr          0.924    0.013   68.747    0.000    0.924    0.681
   .ipbhprpr          1.095    0.016   67.286    0.000    1.095    0.688
   .ipfruler          1.512    0.025   60.866    0.000    1.512    0.754
   .imptradr          1.461    0.023   63.427    0.000    1.461    0.725
   .imsmetn.x         0.265                               0.265    0.265
   .imdfetn.x         0.032                               0.032    0.032
   .impcntr.x         0.214                               0.214    0.214
   .rw2               0.855                               0.855    0.855
    authoritarian     0.565    0.019   29.179    0.000    1.000    1.000
   .prejudice         0.694    0.005  137.318    0.000    0.945    0.945

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.378
    ipstrgvr          0.319
    ipbhprpr          0.312
    ipfruler          0.246
    imptradr          0.275
    imsmetn.x         0.735
    imdfetn.x         0.968
    impcntr.x         0.786
    rw2               0.145
    prejudice         0.055

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
ecvi 
0.01
# -----------------------------------------------------------------------

 ========================================================================================
> #
> # MODEL 4 FOR rw2
> #
> # ---------------------------------------------------------------------------------
> rm(list = ls())
> load("ess19.Rdata")
> ess19$LNR <- seq_len(340215)
> sset1 <- subset(ess19,  essround == 9 ,  
+                 select = c(LNR, cntry, essround, 
+                            impsafe.x, ipstrgv.x, ipbhprp.x,  
+                            ipfrule.x, imptrad.x, 
+                            imsmetn.x, imdfetn.x, impcntr.x, 
+                            ppltrst.x, pplfair.x, pplhlp.x,
+                            rw2, anweight.x.x.x ))
> sset1 <- na.omit(sset1)     # results in  34,227 cases 
> #
> addmargins(table(sset1$essround))

    9   Sum 
34227 34227 
> #
> # ---------------------------------------------------------------------------------
> #
> # scale direction reversed for value items
> #
> library(car)
> #
> sset1$impsafer <- car::recode(sset1$impsafe, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipstrgvr <- car::recode(sset1$ipstrgv, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipbhprpr <- car::recode(sset1$ipbhprp, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$ipfruler <- car::recode(sset1$ipfrule, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> sset1$imptradr <- car::recode(sset1$imptrad, recodes = '1=6;2=5;3=4;4=3;5=2;6=1')
> #
> library(lavaan)
> #
> rw.model <- '
+ 
+ authoritarian =~ impsafer + ipstrgvr + ipbhprpr + ipfruler + imptradr  
+ 
+ prejudice =~ imsmetn.x + imdfetn.x + impcntr.x
+ 
+ trust =~ ppltrst.x + pplfair.x + pplhlp.x
+ 
+ # rw2 ~ authoritarian
+ # rw2 ~ prejudice
+ 
+ # rw2 ~ authoritarian + prejudice
+ # prejudice ~ authoritarian
+ 
+ rw2 ~ authoritarian + prejudice + trust
+ prejudice ~ authoritarian
+ trust ~ prejudice  
+ 
+ '
> rw.fit <- sem(rw.model, data=sset1, sampling.weights="anweight.x.x.x",
+               ordered=c("imsmetn.x", "imdfetn.x", "impcntr.x", "rw2"),
+               meanstructure = TRUE)
> #
> summary(rw.fit, header = TRUE, fit.measures = TRUE, 
+         estimates = TRUE, standardized = TRUE, rsquare=TRUE,
+         modindices = FALSE)
lavaan 0.6-8 ended normally after 82 iterations

  Estimator                                       DWLS
  Optimization method                           NLMINB
  Number of model parameters                        42
                                                      
  Number of observations                               34227
  Sampling weights variable                   anweight.x.x.x
                                                            
Model Test User Model:
                                              Standard      Robust
  Test Statistic                               708.124     835.845
  Degrees of freedom                                50          50
  P-value (Chi-square)                           0.000       0.000
  Scaling correction factor                                  0.862
  Shift parameter                                           14.477
       simple second-order correction                             

Model Test Baseline Model:

  Test statistic                            378379.906  226497.379
  Degrees of freedom                                66          66
  P-value                                        0.000       0.000
  Scaling correction factor                                  1.671

User Model versus Baseline Model:

  Comparative Fit Index (CFI)                    0.998       0.997
  Tucker-Lewis Index (TLI)                       0.998       0.995
                                                                  
  Robust Comparative Fit Index (CFI)                            NA
  Robust Tucker-Lewis Index (TLI)                               NA

Root Mean Square Error of Approximation:

  RMSEA                                          0.020       0.021
  90 Percent confidence interval - lower         0.018       0.020
  90 Percent confidence interval - upper         0.021       0.023
  P-value RMSEA <= 0.05                          1.000       1.000
                                                                  
  Robust RMSEA                                                  NA
  90 Percent confidence interval - lower                        NA
  90 Percent confidence interval - upper                        NA

Standardized Root Mean Square Residual:

  SRMR                                           0.028       0.028

Parameter Estimates:

  Standard errors                           Robust.sem
  Information                                 Expected
  Information saturated (h1) model        Unstructured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  authoritarian =~                                                      
    impsafer          1.000                               0.758    0.620
    ipstrgvr          0.869    0.021   42.218    0.000    0.659    0.565
    ipbhprpr          0.920    0.023   39.822    0.000    0.698    0.553
    ipfruler          0.924    0.026   35.477    0.000    0.701    0.495
    imptradr          0.985    0.027   36.849    0.000    0.747    0.526
  prejudice =~                                                          
    imsmetn.x         1.000                               0.857    0.857
    imdfetn.x         1.147    0.004  291.703    0.000    0.983    0.983
    impcntr.x         1.033    0.003  407.867    0.000    0.886    0.886
  trust =~                                                              
    ppltrst.x         1.000                               1.727    0.751
    pplfair.x         0.920    0.020   46.725    0.000    1.589    0.737
    pplhlp.x          0.763    0.017   45.830    0.000    1.318    0.603

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
  rw2 ~                                                                 
    authoritarian     0.158    0.033    4.785    0.000    0.120    0.120
    prejudice         0.362    0.028   12.789    0.000    0.311    0.311
    trust            -0.034    0.014   -2.390    0.017   -0.059   -0.059
  prejudice ~                                                           
    authoritarian     0.287    0.013   22.682    0.000    0.254    0.254
  trust ~                                                               
    prejudice        -0.685    0.021  -33.006    0.000   -0.340   -0.340

Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          4.591    0.012  373.896    0.000    4.591    3.752
   .ipstrgvr          4.676    0.012  395.498    0.000    4.676    4.012
   .ipbhprpr          4.273    0.012  358.283    0.000    4.273    3.387
   .ipfruler          3.641    0.012  300.008    0.000    3.641    2.571
   .imptradr          4.189    0.014  308.715    0.000    4.189    2.951
   .imsmetn.x         0.000                               0.000    0.000
   .imdfetn.x         0.000                               0.000    0.000
   .impcntr.x         0.000                               0.000    0.000
   .ppltrst.x         5.074    0.019  260.491    0.000    5.074    2.207
   .pplfair.x         5.714    0.019  297.308    0.000    5.714    2.650
   .pplhlp.x          5.017    0.018  275.076    0.000    5.017    2.293
   .rw2               0.000                               0.000    0.000
    authoritarian     0.000                               0.000    0.000
   .prejudice         0.000                               0.000    0.000
   .trust             0.000                               0.000    0.000

Thresholds:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x|t1     -0.635    0.011  -55.262    0.000   -0.635   -0.635
    imsmetn.x|t2      0.679    0.011   61.864    0.000    0.679    0.679
    imsmetn.x|t3      1.566    0.015  101.811    0.000    1.566    1.566
    imdfetn.x|t1     -0.919    0.013  -72.548    0.000   -0.919   -0.919
    imdfetn.x|t2      0.320    0.010   30.743    0.000    0.320    0.320
    imdfetn.x|t3      1.231    0.013   95.464    0.000    1.231    1.231
    impcntr.x|t1     -0.932    0.013  -72.862    0.000   -0.932   -0.932
    impcntr.x|t2      0.256    0.010   24.678    0.000    0.256    0.256
    impcntr.x|t3      1.171    0.013   93.164    0.000    1.171    1.171
    rw2|t1            1.863    0.020   91.663    0.000    1.863    1.863

Variances:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
   .impsafer          0.922    0.015   60.443    0.000    0.922    0.616
   .ipstrgvr          0.924    0.014   67.106    0.000    0.924    0.680
   .ipbhprpr          1.106    0.017   66.401    0.000    1.106    0.694
   .ipfruler          1.514    0.025   60.160    0.000    1.514    0.755
   .imptradr          1.458    0.023   62.807    0.000    1.458    0.723
   .imsmetn.x         0.265                               0.265    0.265
   .imdfetn.x         0.033                               0.033    0.033
   .impcntr.x         0.215                               0.215    0.215
   .ppltrst.x         2.302    0.064   35.890    0.000    2.302    0.436
   .pplfair.x         2.124    0.053   40.209    0.000    2.124    0.457
   .pplhlp.x          3.048    0.047   64.777    0.000    3.048    0.637
   .rw2               0.853                               0.853    0.853
    authoritarian     0.575    0.020   28.861    0.000    1.000    1.000
   .prejudice         0.688    0.005  130.781    0.000    0.935    0.935
   .trust             2.637    0.078   33.885    0.000    0.884    0.884

Scales y*:
                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all
    imsmetn.x         1.000                               1.000    1.000
    imdfetn.x         1.000                               1.000    1.000
    impcntr.x         1.000                               1.000    1.000
    rw2               1.000                               1.000    1.000

R-Square:
                   Estimate
    impsafer          0.384
    ipstrgvr          0.320
    ipbhprpr          0.306
    ipfruler          0.245
    imptradr          0.277
    imsmetn.x         0.735
    imdfetn.x         0.967
    impcntr.x         0.785
    ppltrst.x         0.564
    pplfair.x         0.543
    pplhlp.x          0.363
    rw2               0.147
    prejudice         0.065
    trust             0.116

> fitmeasures(rw.fit, fit.measures = c("ecvi"))
 ecvi 
0.023

# ########################################################################
































   
   
   


   




   






